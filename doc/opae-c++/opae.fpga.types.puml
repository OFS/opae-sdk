@startuml
namespace opae.fpga.types {

    class pvalue<< property >>{
        -fpga_properties *props_
        -get_
        -set_
        +pvalue()
        +operator=()
        +get_value()
    }

    class properties {
        +pvalue<fpga_objtype> object_type
        +pvalue<uint8_t> bus
        +pvalue<uint8_t> device
        +pvalue<uint8_t> function
        +pvalue<uint8_t> socket_id
        +pvalue<uint32_t> num_slots
        +pvalue<uint64_t> bbs_id
        +pvalue<fpga_version> bbs_version
        +pvalue<uint16_t> vendor_id
        +pvalue<char*> model
        +pvalue<uint64_t> local_memory_size
        +pvalue<uint64_t> capabilities
        +pvalue<fpga_guid> guid
        +pvalue<uint32_t> num_mmio
        +pvalue<uint32_t> num_interrupts
        +pvalue<fpga_accelerator_state> accelerator_state
        +pvalue<uint64_t> object_id
        +pvalue<fpga_token> parent
        +fpga_properties get()
        +{static} properties::ptr_t read(fpga_token t)
        -fpga_properties props_
    }

    class token {
        +{static} enumerate(const std::vector<properties> & props)
        +fpga_token get()
        -fpga_token token_

    }
    
    class handle {
        +fpga_handle get()
        -fpga_handle handle_
    }


}

@enduml
```

```plantuml
@startuml

namespace opae.fpga.error {

    class port_error {
        +uint64_t value()
    }
    class fme_error{
        +uint64_t value()
    }

    class fpga_error

    fpga_error <|-- std::exception
    port_error <|-- fpga_error
    fme_error <|-- fpga_error


}
@enduml