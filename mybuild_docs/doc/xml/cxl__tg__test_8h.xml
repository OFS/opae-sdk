<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="cxl__tg__test_8h" kind="file" language="C++">
    <compoundname>cxl_tg_test.h</compoundname>
    <includes local="no">unistd.h</includes>
    <includes local="no">condition_variable</includes>
    <includes local="no">future</includes>
    <includes local="no">iostream</includes>
    <includes local="no">mutex</includes>
    <includes local="no">string</includes>
    <includes local="no">thread</includes>
    <includes local="no">vector</includes>
    <includes local="yes">afu_test.h</includes>
    <includes refid="cxl__mem__tg_8h" local="yes">cxl_mem_tg.h</includes>
    <includedby refid="cxl__mem__tg_8cpp" local="yes">samples/cxl_mem_tg/cxl_mem_tg.cpp</includedby>
    <incdepgraph>
      <node id="17">
        <label>stdbool.h</label>
      </node>
      <node id="11">
        <label>cxl_mem_tg.h</label>
        <link refid="cxl__mem__tg_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cstdint</label>
      </node>
      <node id="15">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>afu_test.h</label>
      </node>
      <node id="25">
        <label>opae/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>opae/types_enum.h</label>
        <link refid="types__enum_8h"/>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="32">
        <label>map</label>
      </node>
      <node id="27">
        <label>uuid/uuid.h</label>
      </node>
      <node id="23">
        <label>exception</label>
      </node>
      <node id="16">
        <label>stddef.h</label>
      </node>
      <node id="21">
        <label>opae/cxx/core/except.h</label>
        <link refid="except_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>condition_variable</label>
      </node>
      <node id="4">
        <label>future</label>
      </node>
      <node id="1">
        <label>samples/cxl_mem_tg/cxl_tg_test.h</label>
        <link refid="cxl__tg__test_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>unistd.h</label>
      </node>
      <node id="19">
        <label>opae/cxx/core/properties.h</label>
        <link refid="cxx_2core_2properties_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="29">
        <label>array</label>
      </node>
      <node id="24">
        <label>opae/properties.h</label>
        <link refid="properties_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>opae/cxx/core/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="34">
        <label>opae/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>opae/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>mutex</label>
      </node>
      <node id="13">
        <label>opae/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>thread</label>
      </node>
      <node id="31">
        <label>type_traits</label>
      </node>
      <node id="28">
        <label>algorithm</label>
      </node>
      <node id="26">
        <label>stdio.h</label>
      </node>
      <node id="30">
        <label>cstring</label>
      </node>
      <node id="33">
        <label>memory</label>
      </node>
      <node id="20">
        <label>opae/cxx/core/pvalue.h</label>
        <link refid="pvalue_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>samples/cxl_mem_tg/cxl_tg_test.h</label>
        <link refid="cxl__tg__test_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>samples/cxl_mem_tg/cxl_mem_tg.cpp</label>
        <link refid="cxl__mem__tg_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classcxl__mem__tg_1_1cxl__tg__test" prot="public">cxl_mem_tg::cxl_tg_test</innerclass>
    <innernamespace refid="namespacecxl__mem__tg">cxl_mem_tg</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="cxl__tg__test_8h_1a89728a0d44ef6bdf3ee05e9109597c8f" prot="public" static="no">
        <name>CXL_TG_BW_FACTOR</name>
        <initializer>0.931323</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_mem_tg/cxl_tg_test.h" line="44" column="9" bodyfile="samples/cxl_mem_tg/cxl_tg_test.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="cxl__tg__test_8h_1abc250359b0b249806cbba4173e9644b4" prot="public" static="no">
        <type><ref refid="classopae_1_1afu__test_1_1afu" kindref="compound">opae::afu_test::afu</ref></type>
        <definition>using test_afu =  opae::afu_test::afu</definition>
        <argsstring></argsstring>
        <name>test_afu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_mem_tg/cxl_tg_test.h" line="41" column="1" bodyfile="samples/cxl_mem_tg/cxl_tg_test.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cxl__tg__test_8h_1a6a1f7385a7cb829ffeb95df6b2c234f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename X</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string int_to_hex</definition>
        <argsstring>(X x)</argsstring>
        <name>int_to_hex</name>
        <param>
          <type>X</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_mem_tg/cxl_tg_test.h" line="65" column="13" bodyfile="samples/cxl_mem_tg/cxl_tg_test.h" bodystart="65" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright(c)<sp/>2023,<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/><sp/>and<sp/><sp/>use<sp/><sp/>in<sp/>source<sp/><sp/>and<sp/><sp/>binary<sp/><sp/>forms,<sp/><sp/>with<sp/><sp/>or<sp/><sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/><sp/>source<sp/>code<sp/><sp/>must<sp/>retain<sp/>the<sp/><sp/>above<sp/>copyright<sp/>notice,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/><sp/>of<sp/>Intel<sp/>Corporation<sp/><sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>to<sp/><sp/>endorse<sp/>or<sp/>promote<sp/><sp/>products<sp/>derived<sp/><sp/>from<sp/>this<sp/><sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/><sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/><sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/><sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABLE<sp/><sp/>FOR<sp/><sp/>ANY<sp/><sp/>DIRECT,<sp/><sp/>INDIRECT,<sp/><sp/>INCIDENTAL,<sp/><sp/>SPECIAL,<sp/><sp/>EXEMPLARY,<sp/><sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/><sp/>DAMAGES<sp/><sp/>(INCLUDING,<sp/><sp/>BUT<sp/><sp/>NOT<sp/>LIMITED<sp/><sp/>TO,<sp/><sp/>PROCUREMENT<sp/><sp/>OF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/><sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/><sp/>OR<sp/>BUSINESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERRUPTION)<sp/><sp/>HOWEVER<sp/>CAUSED<sp/><sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/><sp/>OF<sp/>LIABILITY,<sp/><sp/>WHETHER<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONTRACT,<sp/><sp/>STRICT<sp/>LIABILITY,<sp/><sp/>OR<sp/>TORT<sp/><sp/>(INCLUDING<sp/>NEGLIGENCE<sp/><sp/>OR<sp/>OTHERWISE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/><sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;condition_variable&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;future&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;afu_test.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cxl__mem__tg_8h" kindref="compound">cxl_mem_tg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="41" refid="cxl__tg__test_8h_1abc250359b0b249806cbba4173e9644b4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu" kindref="compound">test_afu</ref><sp/>=<sp/><ref refid="classopae_1_1afu__test_1_1afu" kindref="compound">opae::afu_test::afu</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1fpga_1_1types_1_1token" kindref="compound">opae::fpga::types::token</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="cxl__tg__test_8h_1a89728a0d44ef6bdf3ee05e9109597c8f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CXL_TG_BW_FACTOR<sp/><sp/><sp/>0.931323</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="47"><highlight class="comment">1)<sp/>Write<sp/>to<sp/>TG_CLEAR<sp/>with<sp/>data=0xF<sp/>to<sp/>clear<sp/>all<sp/>the<sp/>failure<sp/>status<sp/>registers.</highlight></codeline>
<codeline lineno="48"><highlight class="comment">2)<sp/>Configure<sp/>the<sp/>registers<sp/>with<sp/>the<sp/>value<sp/>specified<sp/>in<sp/>table<sp/>1<sp/>below.</highlight></codeline>
<codeline lineno="49"><highlight class="comment">3)<sp/>Write<sp/>to<sp/>TG_START<sp/>to<sp/>start<sp/>the<sp/>TG2<sp/>using<sp/>the<sp/>configuration<sp/>in<sp/>step<sp/>2.</highlight></codeline>
<codeline lineno="50"><highlight class="comment">This<sp/>starts<sp/>the<sp/>traffic<sp/>test<sp/>in<sp/>user<sp/>mode.</highlight></codeline>
<codeline lineno="51"><highlight class="comment">4)<sp/>Read<sp/>from<sp/>TG_TEST_COMPLETE<sp/>until<sp/>the<sp/>read<sp/>data<sp/>=0x1,</highlight></codeline>
<codeline lineno="52"><highlight class="comment">indicating<sp/>the<sp/>traffic<sp/>test<sp/>has<sp/>completed.</highlight></codeline>
<codeline lineno="53"><highlight class="comment">5)<sp/>Read<sp/>from<sp/>TG_PASS,<sp/>TG_FAIL,<sp/>and<sp/>TG_TIMEOUT<sp/>to<sp/>check<sp/>the<sp/>test<sp/>result.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>a)<sp/>TG_PASS.<sp/>A<sp/>value<sp/>of<sp/>1<sp/>indicates<sp/>that<sp/>the<sp/>traffic</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>test<sp/>passed<sp/>at<sp/>the<sp/>end<sp/>of<sp/>all<sp/>test<sp/>stages.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>b)<sp/>TG_FAIL.<sp/>A<sp/>value<sp/>of<sp/>1<sp/>indicates<sp/>that<sp/>the<sp/>configured</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>traffic<sp/>finished<sp/>running<sp/>but<sp/>a<sp/>failure<sp/>(read<sp/>miscompare)<sp/>was<sp/>observed.<sp/>You</highlight></codeline>
<codeline lineno="58"><highlight class="comment">may<sp/>read<sp/>from<sp/>other<sp/>relevant<sp/>registers<sp/>to<sp/>get<sp/>more<sp/>information<sp/>about<sp/>the</highlight></codeline>
<codeline lineno="59"><highlight class="comment">failure.<sp/>Refer<sp/>to<sp/>the<sp/>Configuration<sp/>and<sp/>Status<sp/>Registers<sp/>table<sp/>for<sp/>information</highlight></codeline>
<codeline lineno="60"><highlight class="comment">on<sp/>the<sp/>available<sp/>registers.<sp/>c)<sp/>TG_TIMEOUT.<sp/>A<sp/>value<sp/>of<sp/>1<sp/>indicates<sp/>that<sp/>a<sp/>read</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/>response<sp/>was<sp/>not<sp/>received<sp/>from<sp/>the<sp/>interface<sp/>for<sp/>one<sp/>or<sp/>more<sp/>read<sp/>commands.</highlight></codeline>
<codeline lineno="62"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>X&gt;</highlight></codeline>
<codeline lineno="65" refid="cxl__tg__test_8h_1a6a1f7385a7cb829ffeb95df6b2c234f9" refkind="member"><highlight class="normal">std::string<sp/><ref refid="cxl__tg__test_8h_1a6a1f7385a7cb829ffeb95df6b2c234f9" kindref="member">int_to_hex</ref>(X<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::setw(2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(X))<sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>x;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecxl__mem__tg" kindref="compound">cxl_mem_tg</ref><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classcxl__mem__tg_1_1cxl__tg__test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcxl__mem__tg_1_1cxl__tg__test" kindref="compound">cxl_tg_test</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1command" kindref="compound">test_command</ref><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75" refid="classcxl__mem__tg_1_1cxl__tg__test_1a04b6bcabd36c04303c3463a866c577d9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcxl__mem__tg_1_1cxl__tg__test_1a04b6bcabd36c04303c3463a866c577d9" kindref="member">cxl_tg_test</ref>()<sp/>:<sp/>tg_offset_(0x0),<sp/>tg_exe_(NULL)<sp/>{}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classcxl__mem__tg_1_1cxl__tg__test_1a43a443aff95343bd0222478b01febec8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classcxl__mem__tg_1_1cxl__tg__test_1a43a443aff95343bd0222478b01febec8" kindref="member">~cxl_tg_test</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classcxl__mem__tg_1_1cxl__tg__test_1a79c9aab7798e80455d97fd8e79942228" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classcxl__mem__tg_1_1cxl__tg__test_1a79c9aab7798e80455d97fd8e79942228" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;tg_test&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classcxl__mem__tg_1_1cxl__tg__test_1a8c9aba82bd9e827467e43dfd4cc50a7f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classcxl__mem__tg_1_1cxl__tg__test_1a8c9aba82bd9e827467e43dfd4cc50a7f" kindref="member">description</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;configure<sp/>&amp;<sp/>run<sp/>cxl<sp/>mem<sp/>traffic<sp/>generator<sp/>test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classcxl__mem__tg_1_1cxl__tg__test_1abcd07262c0248d11ef15bc3c1a90d973" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classcxl__mem__tg_1_1cxl__tg__test_1abcd07262c0248d11ef15bc3c1a90d973" kindref="member">afu_id</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dummy__afu_8cpp_1a67fa09f58e3e39d9604e1422af718ad5" kindref="member">AFU_ID</ref>;<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>number<sp/>of<sp/>transactions<sp/>to<sp/>bandwidth<sp/>(GB/s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classcxl__mem__tg_1_1cxl__tg__test_1a1499fc2b3cf91c5623f2f5a4a51cac73" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcxl__mem__tg_1_1cxl__tg__test_1a1499fc2b3cf91c5623f2f5a4a51cac73" kindref="member">bw_calc</ref>(uint64_t<sp/>xfer_bytes,<sp/>uint64_t<sp/>num_ticks)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(xfer_bytes)*<sp/><ref refid="cxl__tg__test_8h_1a89728a0d44ef6bdf3ee05e9109597c8f" kindref="member">CXL_TG_BW_FACTOR</ref><sp/>/</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((1000.0<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(tg_exe_-&gt;mem_speed_/1000)<sp/>*<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)num_ticks));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classcxl__mem__tg_1_1cxl__tg__test_1afb228c70c14babce503c928fd8f4d9ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcxl__mem__tg_1_1cxl__tg__test_1afb228c70c14babce503c928fd8f4d9ec" kindref="member">print_he_mem_tg</ref>()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DFH:0x{:x}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09ea01597032eab3f760346c82fbc788ec5c" kindref="member">AFU_DFH</ref>));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;GUIDL:0x{:x}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09eae1b3a54124834078d9db7680c3caa7bd" kindref="member">AFU_ID_L</ref>));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;GUIDH:0x{:x}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09ea5debc24069234094ad6ba398106c65fb" kindref="member">AFU_ID_H</ref>));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;TG<sp/>Contol:0x{:x}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09ea4756bce556cb643e0aa2c409f21f0c37" kindref="member">MEM_TG_CTRL</ref>));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;TG<sp/>Status:0x{:x}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09eadd994b8040392db4076101038b417fe4" kindref="member">MEM_TG_STAT</ref>));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;TG<sp/>Total<sp/>clock<sp/>count:0x{:x}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09ea88d8b198bfb44c9dcad46aa0ab207970" kindref="member">MEM_TG_CLK_COUNT</ref>));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;TG<sp/>Write<sp/>Clock<sp/>Count:0x{:x}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09eaf6d9bbd396589527f372a7b48f1a4d92" kindref="member">MEM_TG_WR_COUNT</ref>));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;TG<sp/>Frequency:{}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09ea0fd9d1b39b6d59014ef01787ec3a4eef" kindref="member">MEM_TG_CLK_FREQ</ref>));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;TG_LOOP_COUNT:0x{:x}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ad02dea59ee54f68764340c1c233829b1" kindref="member">TG_LOOP_COUNT</ref>));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;TG_WRITE_COUNT:0x{:x}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9aab71456eea9b0ccecabf1e0891954a0e" kindref="member">TG_WRITE_COUNT</ref>));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;TG_READ_COUNT:0x{:x}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a411d376733b772443344588a2cac4458" kindref="member">TG_READ_COUNT</ref>));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;TG_BURST_LENGTH:0x{:x}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ab821353518367c2fcd2ab57a9c6e7840" kindref="member">TG_BURST_LENGTH</ref>));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;TG_PASS:0x{:x}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9af157488b545676cc548397859997b02a" kindref="member">TG_PASS</ref>));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;TG_FAIL:0x{:x}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a0b00917713940ec859e81f0a86dc562f" kindref="member">TG_FAIL</ref>));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>to<sp/>TG_CLEAR<sp/>with<sp/>data=0xF<sp/>to<sp/>clear<sp/>all<sp/>the<sp/>failure<sp/>status<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classcxl__mem__tg_1_1cxl__tg__test_1abfd873f8a748a61c5e99a9eec47d3822" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcxl__mem__tg_1_1cxl__tg__test_1abfd873f8a748a61c5e99a9eec47d3822" kindref="member">tg_clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;clear<sp/>tg<sp/>all<sp/>failure<sp/>status<sp/>registers&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unioncxl__mem__tg_1_1mem__tg__ctl" kindref="compound">mem_tg_ctl</ref><sp/>tg_ctl;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_ctl.<ref refid="unioncxl__mem__tg_1_1mem__tg__ctl_1a064066ce04a14c6a0003a1bd82934285" kindref="member">value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_ctl.counter_clear<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09ea4756bce556cb643e0aa2c409f21f0c37" kindref="member">MEM_TG_CTRL</ref>,<sp/>tg_ctl.<ref refid="unioncxl__mem__tg_1_1mem__tg__ctl_1a064066ce04a14c6a0003a1bd82934285" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_ctl.counter_clear<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09ea4756bce556cb643e0aa2c409f21f0c37" kindref="member">MEM_TG_CTRL</ref>,<sp/>tg_ctl.<ref refid="unioncxl__mem__tg_1_1mem__tg__ctl_1a064066ce04a14c6a0003a1bd82934285" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a88ec11b1fb1a062f02451c50b0016949" kindref="member">TG_CLEAR</ref>,<sp/>0xF);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(<ref refid="namespacecxl__mem__tg_1adf88f83a1ea74efb4228b2e7de8d8ae8" kindref="member">TG_SLEEP</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>TG<sp/>performance<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classcxl__mem__tg_1_1cxl__tg__test_1aeaf4cb8c98a142f8e575506e2ad4758b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcxl__mem__tg_1_1cxl__tg__test_1aeaf4cb8c98a142f8e575506e2ad4758b" kindref="member">tg_perf</ref>()<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;TG<sp/>performance<sp/>...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tg_exe_-&gt;status_<sp/>==<sp/><ref refid="namespacecxl__mem__tg_1a9346c08ca8d6da1adde540395a909db3a8e63adddabc288e5498f2f4df66f0b27" kindref="member">TG_STATUS_TIMEOUT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TG<sp/>timeout&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tg_exe_-&gt;status_<sp/>==<sp/><ref refid="namespacecxl__mem__tg_1a9346c08ca8d6da1adde540395a909db3ad6d2ca96385ead5241bb420e1e7ae64e" kindref="member">TG_STATUS_ERROR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tg_fail_exp;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tg_fail_act;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>tg_fail_addr;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tg_fail_addr<sp/>=<sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9afaf1344c0006254f6f4947ed9728bee6" kindref="member">TG_FIRST_FAIL_ADDR_L</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tg_fail_exp<sp/>=<sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a0452589b12a20397977344288abae82f" kindref="member">TG_FAIL_EXPECTED_DATA</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tg_fail_act<sp/>=<sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a26ef0000b2f002b1fe653aeb6d2677ee" kindref="member">TG_FAIL_READ_DATA</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TG<sp/>status<sp/>error&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>at<sp/>address<sp/>0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>tg_fail_addr</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>exp=0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tg_fail_exp<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>act=0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tg_fail_act</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;TG<sp/>pass&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>clk_count<sp/>=<sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09ea88d8b198bfb44c9dcad46aa0ab207970" kindref="member">MEM_TG_CLK_COUNT</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TG<sp/>Read<sp/>and<sp/>Write<sp/>Clock<sp/>Cycles:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dec<sp/>&lt;&lt;<sp/>clk_count</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>wr_clk_count<sp/>=<sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09eaf6d9bbd396589527f372a7b48f1a4d92" kindref="member">MEM_TG_WR_COUNT</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TG<sp/>Write<sp/>Clock<sp/>Cycles:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dec<sp/>&lt;&lt;<sp/>wr_clk_count<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>rd_clk_count<sp/>=<sp/>clk_count<sp/>-<sp/>wr_clk_count;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TG<sp/>Read<sp/>Clock<sp/>Cycles:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dec<sp/>&lt;&lt;<sp/>rd_clk_count</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>write_bytes<sp/>=</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>64<sp/>*<sp/>(tg_exe_-&gt;loop_<sp/>*<sp/>tg_exe_-&gt;wcnt_<sp/>*<sp/>tg_exe_-&gt;bcnt_);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>read_bytes<sp/>=</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>64<sp/>*<sp/>(tg_exe_-&gt;loop_<sp/>*<sp/>tg_exe_-&gt;rcnt_<sp/>*<sp/>tg_exe_-&gt;bcnt_);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Write<sp/>bytes:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::dec<sp/>&lt;&lt;<sp/>write_bytes</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>bytes:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::dec<sp/>&lt;&lt;<sp/>read_bytes</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wr_clk_count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Write<sp/>BW:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bw_calc(write_bytes,<sp/>wr_clk_count)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>GB/s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Write<sp/>BW:<sp/>N/A&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rd_clk_count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>BW:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bw_calc(read_bytes,<sp/>rd_clk_count)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>GB/s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>BW:<sp/>N/A&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clk_count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Total<sp/>BW:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bw_calc(write_bytes<sp/>+<sp/>read_bytes,<sp/>clk_count)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>GB/s\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Total<sp/>BW:<sp/>N/A&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classcxl__mem__tg_1_1cxl__tg__test_1a9e0eff2ffe1dcc8eb9fb4df06098042c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcxl__mem__tg_1_1cxl__tg__test_1a9e0eff2ffe1dcc8eb9fb4df06098042c" kindref="member">tg_print_fail_info</ref>()<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;info(</highlight><highlight class="stringliteral">&quot;test<sp/>fail<sp/>status:{}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a0b00917713940ec859e81f0a86dc562f" kindref="member">TG_FAIL</ref>));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;info(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>failed<sp/>reads<sp/>(lower<sp/>32<sp/>bits):{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a6c4409c3d1f07c62bcd75fd3b05467fe" kindref="member">TG_FAIL_COUNT_L</ref>));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;info(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>failed<sp/>reads<sp/>(upper<sp/>32<sp/>bits):{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a1382e3f82472ef4eb8dcbbb17e377285" kindref="member">TG_FAIL_COUNT_H</ref>));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;info(</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Address<sp/>of<sp/>the<sp/>first<sp/>failed<sp/>read<sp/>(lower<sp/>32<sp/>bits):{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9afaf1344c0006254f6f4947ed9728bee6" kindref="member">TG_FIRST_FAIL_ADDR_L</ref>));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;info(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Address<sp/>of<sp/>the<sp/>first<sp/>failed<sp/>read<sp/>(upper<sp/>32<sp/>bits).:{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9aa10c574348ce256ce6987b453ab10f70" kindref="member">TG_FIRST_FAIL_ADDR_H</ref>));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classcxl__mem__tg_1_1cxl__tg__test_1ab5a014aa963baa885db8d5e00db90b6b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcxl__mem__tg_1_1cxl__tg__test_1ab5a014aa963baa885db8d5e00db90b6b" kindref="member">tg_wait_test_completion</ref>()<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>test<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>timeout<sp/>=<sp/><ref refid="namespacecxl__mem__tg_1a7488ec5ac28f6679e818452cb7b347ec" kindref="member">MEM_TG_TEST_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>tg_status<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tg_fail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;tg<sp/>wait<sp/>for<sp/>test<sp/>completion...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_status<sp/>=<sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a397a7f61b4c32a69262d9db33ec35fda" kindref="member">TG_TEST_COMPLETE</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;test<sp/>complete<sp/>status:{}&quot;</highlight><highlight class="normal">,<sp/>tg_status);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tg_status<sp/>!=<sp/>0x1)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tg_status<sp/>=<sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a397a7f61b4c32a69262d9db33ec35fda" kindref="member">TG_TEST_COMPLETE</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::this_thread::yield();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--timeout<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test<sp/>completion<sp/>timeout<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;status_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_print_fail_info();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;tg<sp/>pass:{}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9af157488b545676cc548397859997b02a" kindref="member">TG_PASS</ref>));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_fail<sp/>=<sp/>tg_exe_-&gt;read32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a0b00917713940ec859e81f0a86dc562f" kindref="member">TG_FAIL</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tg_fail<sp/>==<sp/>0x1)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Tg<sp/>test<sp/>failed:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tg_fail<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;status_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tg_print_fail_info();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>poll<sp/>while<sp/>active<sp/>bit<sp/>is<sp/>set<sp/>(channel<sp/>status<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{pass,fail,timeout,active})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_status<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_status<sp/>=<sp/>0xF<sp/>&amp;<sp/>(tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09eadd994b8040392db4076101038b417fe4" kindref="member">MEM_TG_STAT</ref>));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;Memory<sp/>Traffic<sp/>Generator<sp/>Status:{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09eadd994b8040392db4076101038b417fe4" kindref="member">MEM_TG_STAT</ref>));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tg_status<sp/>==<sp/><ref refid="namespacecxl__mem__tg_1a9346c08ca8d6da1adde540395a909db3a7cbd86dff0180f632d573ef7e5a55057" kindref="member">TG_STATUS_ACTIVE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tg_status<sp/>=<sp/>0xF<sp/>&amp;<sp/>(tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09eadd994b8040392db4076101038b417fe4" kindref="member">MEM_TG_STAT</ref>));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::this_thread::yield();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--timeout<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>Traffic<sp/>Generator<sp/>status<sp/>active&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;status_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tg_status<sp/>==<sp/><ref refid="namespacecxl__mem__tg_1a9346c08ca8d6da1adde540395a909db3a8e63adddabc288e5498f2f4df66f0b27" kindref="member">TG_STATUS_TIMEOUT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>Traffic<sp/>Generator<sp/>status<sp/>timeout&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;status_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tg_status<sp/>==<sp/><ref refid="namespacecxl__mem__tg_1a9346c08ca8d6da1adde540395a909db3ad6d2ca96385ead5241bb420e1e7ae64e" kindref="member">TG_STATUS_ERROR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>Traffic<sp/>Generator<sp/>status<sp/>error&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;status_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;status_<sp/>=<sp/>tg_status;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;Memory<sp/>Traffic<sp/>Generator<sp/>Status<sp/>pass&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>registers<sp/>with<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="classcxl__mem__tg_1_1cxl__tg__test_1a04ba5e50b22fa602d7dbf270c9f7297e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcxl__mem__tg_1_1cxl__tg__test_1a04ba5e50b22fa602d7dbf270c9f7297e" kindref="member">config_input_options</ref>()<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unioncxl__mem__tg_1_1mem__tg__ctl" kindref="compound">mem_tg_ctl</ref><sp/>tg_ctl;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_ctl.<ref refid="unioncxl__mem__tg_1_1mem__tg__ctl_1a064066ce04a14c6a0003a1bd82934285" kindref="member">value</ref><sp/>=<sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09ea4756bce556cb643e0aa2c409f21f0c37" kindref="member">MEM_TG_CTRL</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;tg<sp/>configure<sp/>input<sp/>options...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;mem<sp/>tg<sp/>ctl:{0:x}&quot;</highlight><highlight class="normal">,<sp/>tg_ctl.<ref refid="unioncxl__mem__tg_1_1mem__tg__ctl_1a064066ce04a14c6a0003a1bd82934285" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tg_ctl.tg_capability<sp/>!=<sp/>0x1)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>traffic<sp/>generator<sp/>for<sp/>mem&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;mem_speed_<sp/>=<sp/>tg_exe_-&gt;read64(<ref refid="namespacecxl__mem__tg_1a8ba6380a3d80e0f4b6ec8ef2529ae09ea0fd9d1b39b6d59014ef01787ec3a4eef" kindref="member">MEM_TG_CLK_FREQ</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>clock<sp/>frequency<sp/>(kHz)<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tg_exe_-&gt;mem_speed_<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>tg_exe_-&gt;mem_speed_)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;mem_speed_<sp/>=<sp/><ref refid="namespacecxl__mem__tg_1ad72ec47242a649d327e0bde858f7f2b5" kindref="member">TG_FREQ</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>channel<sp/>clock<sp/>frequency<sp/>unknown.<sp/>Assuming<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tg_exe_-&gt;mem_speed_<sp/>/<sp/>1000<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MHz.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>clock:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tg_exe_-&gt;mem_speed_<sp/>/<sp/>1000<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>MHz&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;loops:{}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;loop_);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;write<sp/>count:{}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;wcnt_);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;read<sp/>count:{}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;rcnt_);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;burst<sp/>length:{}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;bcnt_);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;sride:{}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;stride_);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;data<sp/>pattern:{}&quot;</highlight><highlight class="normal">,<sp/>tg_exe_-&gt;pattern_);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ad02dea59ee54f68764340c1c233829b1" kindref="member">TG_LOOP_COUNT</ref>,<sp/>tg_exe_-&gt;loop_);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9aab71456eea9b0ccecabf1e0891954a0e" kindref="member">TG_WRITE_COUNT</ref>,<sp/>tg_exe_-&gt;wcnt_);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a411d376733b772443344588a2cac4458" kindref="member">TG_READ_COUNT</ref>,<sp/>tg_exe_-&gt;rcnt_);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ab821353518367c2fcd2ab57a9c6e7840" kindref="member">TG_BURST_LENGTH</ref>,<sp/>tg_exe_-&gt;bcnt_);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9acf979f868802b88029d479d18111f465" kindref="member">TG_SEQ_ADDR_INCR</ref>,<sp/>tg_exe_-&gt;stride_);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9adf412af7a4ff3287fe327afee84e348d" kindref="member">TG_PPPG_SEL</ref>,<sp/>tg_exe_-&gt;pattern_);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9aa30e3bd5cec3f3cd992e6121bdbab09e" kindref="member">TG_WRITE_REPEAT_COUNT</ref>,<sp/>0x1);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a90a29710d3b2099c1795a61d2622076e" kindref="member">TG_READ_REPEAT_COUNT</ref>,<sp/>0x1);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ab64e524dd316d881cc22757087d33439" kindref="member">TG_RW_GEN_IDLE_COUNT</ref>,<sp/>0x1);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9aed6f3dfb644b6e070fefcaf16e2e1d11" kindref="member">TG_RW_GEN_LOOP_IDLE_COUNT</ref>,<sp/>0x1);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>Start<sp/>address<sp/>for<sp/>writes<sp/>to<sp/>0<sp/>(Fixed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ae286a4c714c99b08b1002ee3ed1a587f" kindref="member">TG_SEQ_START_ADDR_WR</ref>,<sp/>0x0000);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ae286a4c714c99b08b1002ee3ed1a587f" kindref="member">TG_SEQ_START_ADDR_WR</ref><sp/>+<sp/>0x04,<sp/>0x0);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ae286a4c714c99b08b1002ee3ed1a587f" kindref="member">TG_SEQ_START_ADDR_WR</ref><sp/>+<sp/>0x08,<sp/>0x0);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ae286a4c714c99b08b1002ee3ed1a587f" kindref="member">TG_SEQ_START_ADDR_WR</ref><sp/>+<sp/>0x0C,<sp/>0x0);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ae286a4c714c99b08b1002ee3ed1a587f" kindref="member">TG_SEQ_START_ADDR_WR</ref><sp/>+<sp/>0x10,<sp/>0x0);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ae286a4c714c99b08b1002ee3ed1a587f" kindref="member">TG_SEQ_START_ADDR_WR</ref><sp/>+<sp/>0x14,<sp/>0x0);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>address<sp/>generator<sp/>mode<sp/>to<sp/>3<sp/>(Field<sp/>unused)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a7709164257a8f5718596b5ab2c472ad4" kindref="member">TG_ADDR_MODE_WR</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a7709164257a8f5718596b5ab2c472ad4" kindref="member">TG_ADDR_MODE_WR</ref><sp/>+<sp/>0x04<sp/>,3<sp/>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a7709164257a8f5718596b5ab2c472ad4" kindref="member">TG_ADDR_MODE_WR</ref><sp/>+<sp/>0x08<sp/>,3<sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a7709164257a8f5718596b5ab2c472ad4" kindref="member">TG_ADDR_MODE_WR</ref><sp/>+<sp/>0x0C<sp/>,3<sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a7709164257a8f5718596b5ab2c472ad4" kindref="member">TG_ADDR_MODE_WR</ref><sp/>+<sp/>0x10<sp/>,3<sp/>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a7709164257a8f5718596b5ab2c472ad4" kindref="member">TG_ADDR_MODE_WR</ref><sp/>+<sp/>0x14<sp/>,3<sp/>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9acf979f868802b88029d479d18111f465" kindref="member">TG_SEQ_ADDR_INCR</ref>,<sp/>0x1);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>Start<sp/>address<sp/>for<sp/>reads<sp/>to<sp/>0<sp/>(Fixed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a201705870a4fa204363246058cb2076e" kindref="member">TG_SEQ_START_ADDR_RD</ref>,<sp/>0x0);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a201705870a4fa204363246058cb2076e" kindref="member">TG_SEQ_START_ADDR_RD</ref><sp/>+<sp/>0x04,<sp/>0x0);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a201705870a4fa204363246058cb2076e" kindref="member">TG_SEQ_START_ADDR_RD</ref><sp/>+<sp/>0x08,<sp/>0x0);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a201705870a4fa204363246058cb2076e" kindref="member">TG_SEQ_START_ADDR_RD</ref><sp/>+<sp/>0x0C,<sp/>0x0);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a201705870a4fa204363246058cb2076e" kindref="member">TG_SEQ_START_ADDR_RD</ref><sp/>+<sp/>0x10,<sp/>0x0);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a201705870a4fa204363246058cb2076e" kindref="member">TG_SEQ_START_ADDR_RD</ref><sp/>+<sp/>0x14,<sp/>0x0);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>address<sp/>generator<sp/>mode<sp/>to<sp/>3<sp/>(Field<sp/>unused)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a9ce33fc8beaf69c76c4ce3776805d1c4" kindref="member">TG_ADDR_MODE_RD</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a9ce33fc8beaf69c76c4ce3776805d1c4" kindref="member">TG_ADDR_MODE_RD</ref><sp/>+0x04,3<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a9ce33fc8beaf69c76c4ce3776805d1c4" kindref="member">TG_ADDR_MODE_RD</ref><sp/>+0x08,3<sp/>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a9ce33fc8beaf69c76c4ce3776805d1c4" kindref="member">TG_ADDR_MODE_RD</ref><sp/>+0x0C,3<sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a9ce33fc8beaf69c76c4ce3776805d1c4" kindref="member">TG_ADDR_MODE_RD</ref><sp/>+0x10,3<sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a9ce33fc8beaf69c76c4ce3776805d1c4" kindref="member">TG_ADDR_MODE_RD</ref><sp/>+0x14,3<sp/>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a138084b5a721464cfb312d4d675410bf" kindref="member">TG_USER_WORM_EN</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ad39fc44c8edf2e15dad6d831aa6fe819" kindref="member">TG_RETURN_TO_START_ADDR</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>data_seed<sp/>=<sp/>0x55555555;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;configuring<sp/>TG<sp/>data<sp/>seed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ad19fda5e987a2fae893421a426f6766d" kindref="member">TG_DATA_SEED</ref><sp/>+<sp/>i<sp/>*<sp/>4,<sp/>data_seed);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9ab95729a6c6553c58502a0f1306f1b004" kindref="member">TG_BYTEEN_SEED</ref><sp/>+<sp/>i<sp/>*<sp/>4,<sp/>0xffffffff);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9adf412af7a4ff3287fe327afee84e348d" kindref="member">TG_PPPG_SEL</ref><sp/>+<sp/>i<sp/>*<sp/>4,<sp/>0);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9a3c528143f8a6d19ca435a0f458cc29b8" kindref="member">TG_BYTEEN_SEL</ref><sp/>+<sp/>i<sp/>*<sp/>4,<sp/>0);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_seed<sp/>=<sp/>~data_seed;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>Address<sp/>Generator<sp/>MSB<sp/>Indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9aeb51b5206be439a4f73216c8737b15f2" kindref="member">TG_ADDR_FIELD_MSB_INDEX</ref><sp/>+<sp/>i<sp/>*<sp/>4,<sp/>0x1a);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>test<sp/>state<sp/>has<sp/>been<sp/>configured.<sp/>Run<sp/>one<sp/>test<sp/>instance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="classcxl__mem__tg_1_1cxl__tg__test_1a04a656410bbaac785e39f80e0f5d131b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcxl__mem__tg_1_1cxl__tg__test_1a04a656410bbaac785e39f80e0f5d131b" kindref="member">run_mem_test</ref>()<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Start<sp/>Test...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_-&gt;write32(<ref refid="namespacecxl__mem__tg_1a001f2f66547e050fa059f9843621d0f9afbeb224f5b1d32e9b55b1ce8fcc9e32c" kindref="member">TG_START</ref>,<sp/>0x1);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tg_wait_test_completion())<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>completed<sp/>successfully...<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_perf();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="classcxl__mem__tg_1_1cxl__tg__test_1a2916882019055c81a3e392d5ba420e82" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcxl__mem__tg_1_1cxl__tg__test_1a2916882019055c81a3e392d5ba420e82" kindref="member">run</ref>(<ref refid="classopae_1_1afu__test_1_1afu" kindref="compound">test_afu</ref><sp/>*afu,<sp/>CLI::App<sp/>*<ref refid="hssi_8cpp_1a7ccd62f1083f322e0d1dfaa9c23ecb88" kindref="member">app</ref>)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<ref refid="hssi_8cpp_1a7ccd62f1083f322e0d1dfaa9c23ecb88" kindref="member">app</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_exe_<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecxl__mem__tg" kindref="compound">cxl_mem_tg</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(afu);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tg_exe_)<sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>tg_clear();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>print_he_mem_tg();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>config_input_options();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>TG<sp/>input<sp/>options&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>run_mem_test();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>run<sp/>tg<sp/>cxl<sp/>memory<sp/>test...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>print_he_mem_tg();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>print_he_mem_tg();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="413" refid="classcxl__mem__tg_1_1cxl__tg__test_1a8ee5d429a79626832f0b430173fdd495" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classcxl__mem__tg_1_1cxl__tg__test_1a8ee5d429a79626832f0b430173fdd495" kindref="member">tg_offset_</ref>;</highlight></codeline>
<codeline lineno="414" refid="classcxl__mem__tg_1_1cxl__tg__test_1a9fef372126f051b6ba4bb1525c0099a0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacecxl__mem__tg" kindref="compound">cxl_mem_tg</ref><sp/>*<ref refid="classcxl__mem__tg_1_1cxl__tg__test_1a9fef372126f051b6ba4bb1525c0099a0" kindref="member">tg_exe_</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">};</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cxl_mem_tg</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="samples/cxl_mem_tg/cxl_tg_test.h"/>
  </compounddef>
</doxygen>
