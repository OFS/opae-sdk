<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hello__fpga_8c" kind="file" language="C++">
    <compoundname>hello_fpga.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">getopt.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">uuid/uuid.h</includes>
    <includes refid="fpga_8h" local="no">opae/fpga.h</includes>
    <includes local="no">argsfilter.h</includes>
    <includes local="yes">mock/opae_std.h</includes>
    <incdepgraph>
      <node id="14">
        <label>stdbool.h</label>
      </node>
      <node id="26">
        <label>opae/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>samples/hello_fpga/hello_fpga.c</label>
        <link refid="hello__fpga_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="29">
        <label>opae/userclk.h</label>
        <link refid="userclk_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>errno.h</label>
      </node>
      <node id="27">
        <label>opae/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>opae/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>opae/types_enum.h</label>
        <link refid="types__enum_8h"/>
      </node>
      <node id="8">
        <label>uuid/uuid.h</label>
      </node>
      <node id="13">
        <label>stddef.h</label>
      </node>
      <node id="21">
        <label>opae/manage.h</label>
        <link refid="manage_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>opae/metrics.h</label>
        <link refid="metrics_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>opae/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>opae/sysobject.h</label>
        <link refid="sysobject_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>mock/opae_std.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>unistd.h</label>
      </node>
      <node id="20">
        <label>opae/event.h</label>
        <link refid="event_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>opae/properties.h</label>
        <link refid="properties_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>opae/umsg.h</label>
        <link refid="umsg_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>opae/fpga.h</label>
        <link refid="fpga_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>opae/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>opae/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>getopt.h</label>
      </node>
      <node id="17">
        <label>opae/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>opae/mmio.h</label>
        <link refid="include_2opae_2mmio_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>argsfilter.h</label>
      </node>
      <node id="16">
        <label>opae/init.h</label>
        <link refid="init_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>opae/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structcache__line" prot="public">cache_line</innerclass>
    <innerclass refid="structconfig" prot="public">config</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="hello__fpga_8c_1a9fd0cdfdda29532a444c52dd9e1c1d1f" prot="public" static="no">
        <name>TEST_TIMEOUT</name>
        <initializer>30000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="68" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1acda3b44286ccc5e1924198027f28a8c5" prot="public" static="no">
        <name>CL</name>
        <param><defname>x</defname></param>
        <initializer>((x) * 64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="72" column="10" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1adf30d050a3289b6d043824dfd97c81f1" prot="public" static="no">
        <name>LOG2_CL</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="75" column="10" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1a44d2b171cc92225ec0a76ef70fc9b531" prot="public" static="no">
        <name>MB</name>
        <param><defname>x</defname></param>
        <initializer>((x) * 1024 * 1024)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="78" column="10" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1ad3542630f57f4e7073dbd18dd41c9e9a" prot="public" static="no">
        <name>CACHELINE_ALIGNED_ADDR</name>
        <param><defname>p</defname></param>
        <initializer>((p) &gt;&gt; <ref refid="hello__fpga_8c_1adf30d050a3289b6d043824dfd97c81f1" kindref="member">LOG2_CL</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="81" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1aaa5caa9ebd221b79ab0d6f8c5568e855" prot="public" static="no">
        <name>LPBK1_BUFFER_SIZE</name>
        <initializer><ref refid="hello__fpga_8c_1a44d2b171cc92225ec0a76ef70fc9b531" kindref="member">MB</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="83" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1a680d7d8ff687719f3dfd4a1cf7d04cfe" prot="public" static="no">
        <name>LPBK1_BUFFER_ALLOCATION_SIZE</name>
        <initializer><ref refid="hello__fpga_8c_1a44d2b171cc92225ec0a76ef70fc9b531" kindref="member">MB</ref>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="84" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1a01a171b6816e2e3681ee0bea0fd74b70" prot="public" static="no">
        <name>LPBK1_DSM_SIZE</name>
        <initializer><ref refid="hello__fpga_8c_1a44d2b171cc92225ec0a76ef70fc9b531" kindref="member">MB</ref>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="85" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1a3346cda33cdc35d5d5b42cd489c75aa0" prot="public" static="no">
        <name>CSR_SRC_ADDR</name>
        <initializer>0x0120</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="86" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1a8fc5dce1142497274a335a84489be3d4" prot="public" static="no">
        <name>CSR_DST_ADDR</name>
        <initializer>0x0128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="87" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1acbe346f9bf5608488adb1b6ad68809b2" prot="public" static="no">
        <name>CSR_CTL</name>
        <initializer>0x0138</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="88" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1ac514d59efcfed9b7fb07a3c838f09503" prot="public" static="no">
        <name>CSR_STATUS1</name>
        <initializer>0x0168</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="89" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1a21f1970d1fcd3dee94bf0ab5aeb54fbd" prot="public" static="no">
        <name>CSR_CFG</name>
        <initializer>0x0140</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="90" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1ab1c7049b0e183020bdabcaaec8f20e49" prot="public" static="no">
        <name>CSR_NUM_LINES</name>
        <initializer>0x0130</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="91" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1ac77542e2d0512964e9a065d647b14639" prot="public" static="no">
        <name>DSM_STATUS_TEST_COMPLETE</name>
        <initializer>0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="92" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1a4502164cd63bc6b91df80c619468e479" prot="public" static="no">
        <name>CSR_AFU_DSM_BASEL</name>
        <initializer>0x0110</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="93" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1a326496be663d917e61f22100670026b9" prot="public" static="no">
        <name>NLB0_AFUID</name>
        <initializer>&quot;D8424DC4-A4A3-C413-F89E-433683F9040B&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="96" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1a782f8715b2fd7e1919759a25ee578d44" prot="public" static="no">
        <name>N3000_AFUID</name>
        <initializer>&quot;9AEFFE5F-8457-0612-C000-C9660D824272&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="99" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1acb55d7e03697cb4b95812725b762f653" prot="public" static="no">
        <name>FPGA_NLB0_UUID_H</name>
        <initializer>0xd8424dc4a4a3c413</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="100" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1a46ed725f81a748bec841dd6216f8ac21" prot="public" static="no">
        <name>FPGA_NLB0_UUID_L</name>
        <initializer>0xf89e433683f9040b</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="101" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" prot="public" static="no">
        <name>ON_ERR_GOTO</name>
        <param><defname>res</defname></param>
        <param><defname>label</defname></param>
        <param><defname>desc</defname></param>
        <initializer>	do {                                       \
		if ((res) != <ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" kindref="member">FPGA_OK</ref>) {            \
			<ref refid="object__api_8c_1aa11f434898b86d619a5ceb6a5d7bf066" kindref="member">print_err</ref>((desc), (res));  \
			goto label;                \
		}                                  \
	} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="108" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hello__fpga_8c_1acc2c9cc08f0f7b8f21f835d3fa0f6435" prot="public" static="no">
        <name>GETOPT_STRING</name>
        <initializer>&quot;hscv&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="155" column="9" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="hello__fpga_8c_1a6021fefa0bf488ddb29487b0b9d49979" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structconfig" kindref="compound">config</ref></type>
        <definition>struct config config</definition>
        <argsstring></argsstring>
        <name>config</name>
        <initializer>= {
	.open_flags = 0,
	.run_n3000 = 0
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="137" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hello__fpga_8c_1a300ec1c0f7befcbb990985d36d56d8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int usleep</definition>
        <argsstring>(unsigned)</argsstring>
        <name>usleep</name>
        <param>
          <type>unsigned</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="65" column="5" declfile="samples/hello_fpga/hello_fpga.c" declline="65" declcolumn="5"/>
        <referencedby refid="hello__fpga_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="hello__fpga_8c" startline="314" endline="544">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="hello__fpga_8c_1aa11f434898b86d619a5ceb6a5d7bf066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_err</definition>
        <argsstring>(const char *s, fpga_result res)</argsstring>
        <name>print_err</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref></type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="121" column="6" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="121" bodyend="124"/>
        <references refid="utils_8h_1a2a3fc0d8baf294d2da980ba544368b32">fpgaErrStr</references>
        <referencedby refid="hello__fpga_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="hello__fpga_8c" startline="314" endline="544">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="hello__fpga_8c_1a0bed8474bd33a912769360766f6b10d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void help</definition>
        <argsstring>(void)</argsstring>
        <name>help</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="139" column="6" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="139" bodyend="153"/>
        <referencedby refid="hello__fpga_8c_1a3a1b6f72679286eae6f9eec936cc5533" compoundref="hello__fpga_8c" startline="156" endline="204">parse_args</referencedby>
      </memberdef>
      <memberdef kind="function" id="hello__fpga_8c_1a3a1b6f72679286eae6f9eec936cc5533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref></type>
        <definition>fpga_result parse_args</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>parse_args</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="156" column="13" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="156" bodyend="204"/>
        <references refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da8527745386f7cea8d8aa64f96f2249a4" compoundref="types__enum_8h" startline="61">FPGA_EXCEPTION</references>
        <references refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" compoundref="types__enum_8h" startline="58">FPGA_OK</references>
        <references refid="types__enum_8h_1a3a32599a1213352a3217f6e068651fc6a7eb08309368b559a0ecaf8193053a94c" compoundref="types__enum_8h" startline="158">FPGA_OPEN_SHARED</references>
        <references refid="version_8h_1a4291b6b91fc85bff7d342109ac0e05ab">fpgaGetOPAECBuildString</references>
        <references refid="version_8h_1aade1f86d5d30658a7ccddaa54db74ab8">fpgaGetOPAECVersionString</references>
        <references refid="hello__fpga_8c_1acc2c9cc08f0f7b8f21f835d3fa0f6435" compoundref="hello__fpga_8c" startline="155">GETOPT_STRING</references>
        <references refid="hello__fpga_8c_1a0bed8474bd33a912769360766f6b10d4" compoundref="hello__fpga_8c" startline="139" endline="153">help</references>
        <references refid="structconfig_1a56a710b532c4f7d6213fbd173920ffca" compoundref="hello__fpga_8c" startline="130">config::open_flags</references>
        <references refid="structconfig_1a860ca20f3c0dd13da4979632fb61f505" compoundref="hello__fpga_8c" startline="131">config::run_n3000</references>
        <referencedby refid="hello__fpga_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="hello__fpga_8c" startline="314" endline="544">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="hello__fpga_8c_1ae703894d2d572a2c40252494470ab1f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref></type>
        <definition>fpga_result find_fpga</definition>
        <argsstring>(fpga_properties device_filter, fpga_guid afu_guid, fpga_token *accelerator_token, uint32_t *num_matches_accelerators)</argsstring>
        <name>find_fpga</name>
        <param>
          <type><ref refid="types_8h_1ab868bdeab946a8059abe7e9c114aee56" kindref="member">fpga_properties</ref></type>
          <declname>device_filter</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1af0b6683499be79fab39ac41db02e7abf" kindref="member">fpga_guid</ref></type>
          <declname>afu_guid</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1a252f538a10fb51d0988ed52946516d9e" kindref="member">fpga_token</ref> *</type>
          <declname>accelerator_token</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>num_matches_accelerators</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="206" column="13" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="206" bodyend="232"/>
        <references refid="types__enum_8h_1a9b2ddb9e533441e79f19d45fa0a24934a5c3973a253ffaabddd0a083f05abebc7" compoundref="types__enum_8h" startline="114">FPGA_ACCELERATOR</references>
        <references refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" compoundref="types__enum_8h" startline="58">FPGA_OK</references>
        <references refid="properties_8h_1ac51c19bdd763a98e143a938c47963905">fpgaCloneProperties</references>
        <references refid="properties_8h_1a6f83533f996cf6bd25274e0b7b9c3050">fpgaDestroyProperties</references>
        <references refid="enum_8h_1a277ba17f2377895855545bd82c1f901d">fpgaEnumerate</references>
        <references refid="properties_8h_1a71ad1e59994b2c8b04ea036a64515117">fpgaPropertiesSetGUID</references>
        <references refid="properties_8h_1a3724caa06200e0d3f0b56611c379d75b">fpgaPropertiesSetObjectType</references>
        <references refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" compoundref="hello__fpga_8c" startline="108">ON_ERR_GOTO</references>
        <referencedby refid="hello__fpga_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="hello__fpga_8c" startline="314" endline="544">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="hello__fpga_8c_1a888b04133611aa43ed28c4e4f9f319ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool probe_for_ase</definition>
        <argsstring>(void)</argsstring>
        <name>probe_for_ase</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="235" column="6" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="235" bodyend="260"/>
        <references refid="types__enum_8h_1a9b2ddb9e533441e79f19d45fa0a24934a91f784c1c357473adbde7188a244219a" compoundref="types__enum_8h" startline="109">FPGA_DEVICE</references>
        <references refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" compoundref="types__enum_8h" startline="58">FPGA_OK</references>
        <references refid="properties_8h_1a6f83533f996cf6bd25274e0b7b9c3050">fpgaDestroyProperties</references>
        <references refid="enum_8h_1a150a7a8f46e0d6df12cc329ff7030e21">fpgaDestroyToken</references>
        <references refid="enum_8h_1a277ba17f2377895855545bd82c1f901d">fpgaEnumerate</references>
        <references refid="properties_8h_1a010d3b6839fc8763e66e4f953682a489">fpgaGetProperties</references>
        <references refid="properties_8h_1ac3237ae88feff35ba0c285e27cac58a5">fpgaPropertiesGetDeviceID</references>
        <references refid="properties_8h_1a3724caa06200e0d3f0b56611c379d75b">fpgaPropertiesSetObjectType</references>
        <referencedby refid="hello__fpga_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="hello__fpga_8c" startline="314" endline="544">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="hello__fpga_8c_1af5efd740b98ff6882ecbdde289da7b85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref></type>
        <definition>fpga_result find_nlb_n3000</definition>
        <argsstring>(fpga_handle accelerator_handle, uint64_t *afu_baddr)</argsstring>
        <name>find_nlb_n3000</name>
        <param>
          <type><ref refid="types_8h_1a4ad40f31195233b629bcde187b0556d5" kindref="member">fpga_handle</ref></type>
          <declname>accelerator_handle</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>afu_baddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="262" column="13" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="262" bodyend="312"/>
        <references refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da8527745386f7cea8d8aa64f96f2249a4" compoundref="types__enum_8h" startline="61">FPGA_EXCEPTION</references>
        <references refid="hello__fpga_8c_1acb55d7e03697cb4b95812725b762f653" compoundref="hello__fpga_8c" startline="100">FPGA_NLB0_UUID_H</references>
        <references refid="hello__fpga_8c_1a46ed725f81a748bec841dd6216f8ac21" compoundref="hello__fpga_8c" startline="101">FPGA_NLB0_UUID_L</references>
        <references refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" compoundref="types__enum_8h" startline="58">FPGA_OK</references>
        <references refid="include_2opae_2mmio_8h_1a011ba900710ddf70c13ca089c4742187">fpgaReadMMIO64</references>
        <references refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" compoundref="hello__fpga_8c" startline="108">ON_ERR_GOTO</references>
        <referencedby refid="hello__fpga_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="hello__fpga_8c" startline="314" endline="544">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="hello__fpga_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hello_fpga/hello_fpga.c" line="314" column="5" bodyfile="samples/hello_fpga/hello_fpga.c" bodystart="314" bodyend="544"/>
        <references refid="hello__fpga_8c_1ad3542630f57f4e7073dbd18dd41c9e9a" compoundref="hello__fpga_8c" startline="81">CACHELINE_ALIGNED_ADDR</references>
        <references refid="hello__fpga_8c_1acda3b44286ccc5e1924198027f28a8c5" compoundref="hello__fpga_8c" startline="72">CL</references>
        <references refid="hello__fpga_8c_1a4502164cd63bc6b91df80c619468e479" compoundref="hello__fpga_8c" startline="93">CSR_AFU_DSM_BASEL</references>
        <references refid="hello__fpga_8c_1a21f1970d1fcd3dee94bf0ab5aeb54fbd" compoundref="hello__fpga_8c" startline="90">CSR_CFG</references>
        <references refid="hello__fpga_8c_1acbe346f9bf5608488adb1b6ad68809b2" compoundref="hello__fpga_8c" startline="88">CSR_CTL</references>
        <references refid="hello__fpga_8c_1a8fc5dce1142497274a335a84489be3d4" compoundref="hello__fpga_8c" startline="87">CSR_DST_ADDR</references>
        <references refid="hello__fpga_8c_1ab1c7049b0e183020bdabcaaec8f20e49" compoundref="hello__fpga_8c" startline="91">CSR_NUM_LINES</references>
        <references refid="hello__fpga_8c_1a3346cda33cdc35d5d5b42cd489c75aa0" compoundref="hello__fpga_8c" startline="86">CSR_SRC_ADDR</references>
        <references refid="hello__fpga_8c_1ac514d59efcfed9b7fb07a3c838f09503" compoundref="hello__fpga_8c" startline="89">CSR_STATUS1</references>
        <references refid="hello__fpga_8c_1ac77542e2d0512964e9a065d647b14639" compoundref="hello__fpga_8c" startline="92">DSM_STATUS_TEST_COMPLETE</references>
        <references refid="hello__fpga_8c_1ae703894d2d572a2c40252494470ab1f1" compoundref="hello__fpga_8c" startline="206" endline="232">find_fpga</references>
        <references refid="hello__fpga_8c_1af5efd740b98ff6882ecbdde289da7b85" compoundref="hello__fpga_8c" startline="262" endline="312">find_nlb_n3000</references>
        <references refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da8527745386f7cea8d8aa64f96f2249a4" compoundref="types__enum_8h" startline="61">FPGA_EXCEPTION</references>
        <references refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da7aee5958cf7f46e9d80c4ee50d42d86c" compoundref="types__enum_8h" startline="62">FPGA_NOT_FOUND</references>
        <references refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" compoundref="types__enum_8h" startline="58">FPGA_OK</references>
        <references refid="access_8h_1ac83789ebb65dc6b2adeae3d7e7fa3e79">fpgaClose</references>
        <references refid="properties_8h_1a6f83533f996cf6bd25274e0b7b9c3050">fpgaDestroyProperties</references>
        <references refid="enum_8h_1a150a7a8f46e0d6df12cc329ff7030e21">fpgaDestroyToken</references>
        <references refid="buffer_8h_1aed20b8768e38a5414a331dd09a2aa221">fpgaGetIOAddress</references>
        <references refid="properties_8h_1a010d3b6839fc8763e66e4f953682a489">fpgaGetProperties</references>
        <references refid="include_2opae_2mmio_8h_1a2903267d37ea5c64522b0addce74da5f">fpgaMapMMIO</references>
        <references refid="access_8h_1addde6b2bafcd6632a2c0b595c6bc0ef3">fpgaOpen</references>
        <references refid="buffer_8h_1aac3ed0146bc42c35f99610a319e87303">fpgaPrepareBuffer</references>
        <references refid="include_2opae_2mmio_8h_1a011ba900710ddf70c13ca089c4742187">fpgaReadMMIO64</references>
        <references refid="buffer_8h_1a3d2302d336bbe5fe05a08a8f534d296b">fpgaReleaseBuffer</references>
        <references refid="access_8h_1aa4addba9b864dbc614a1680dfc29dc59">fpgaReset</references>
        <references refid="include_2opae_2mmio_8h_1a8c8db22506e1fbfd16440c660bfee28f">fpgaUnmapMMIO</references>
        <references refid="include_2opae_2mmio_8h_1ae538bfe7158d1911c5e749bbc063aa3d">fpgaWriteMMIO32</references>
        <references refid="include_2opae_2mmio_8h_1a6df7f745d9b9d47582714fe8e2d1a761">fpgaWriteMMIO64</references>
        <references refid="hello__fpga_8c_1a680d7d8ff687719f3dfd4a1cf7d04cfe" compoundref="hello__fpga_8c" startline="84">LPBK1_BUFFER_ALLOCATION_SIZE</references>
        <references refid="hello__fpga_8c_1aaa5caa9ebd221b79ab0d6f8c5568e855" compoundref="hello__fpga_8c" startline="83">LPBK1_BUFFER_SIZE</references>
        <references refid="hello__fpga_8c_1a01a171b6816e2e3681ee0bea0fd74b70" compoundref="hello__fpga_8c" startline="85">LPBK1_DSM_SIZE</references>
        <references refid="hello__fpga_8c_1a782f8715b2fd7e1919759a25ee578d44" compoundref="hello__fpga_8c" startline="99">N3000_AFUID</references>
        <references refid="hello__fpga_8c_1a326496be663d917e61f22100670026b9" compoundref="hello__fpga_8c" startline="96">NLB0_AFUID</references>
        <references refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" compoundref="hello__fpga_8c" startline="108">ON_ERR_GOTO</references>
        <references refid="structconfig_1a56a710b532c4f7d6213fbd173920ffca" compoundref="hello__fpga_8c" startline="130">config::open_flags</references>
        <references refid="hello__fpga_8c_1a3a1b6f72679286eae6f9eec936cc5533" compoundref="hello__fpga_8c" startline="156" endline="204">parse_args</references>
        <references refid="hello__fpga_8c_1aa11f434898b86d619a5ceb6a5d7bf066" compoundref="hello__fpga_8c" startline="121" endline="124">print_err</references>
        <references refid="hello__fpga_8c_1a888b04133611aa43ed28c4e4f9f319ae" compoundref="hello__fpga_8c" startline="235" endline="260">probe_for_ase</references>
        <references refid="structconfig_1a860ca20f3c0dd13da4979632fb61f505" compoundref="hello__fpga_8c" startline="131">config::run_n3000</references>
        <references refid="hello__fpga_8c_1a9fd0cdfdda29532a444c52dd9e1c1d1f" compoundref="hello__fpga_8c" startline="68">TEST_TIMEOUT</references>
        <references refid="structcache__line_1a3f28028a2861bc1cb7e3d07fa84bb4a2" compoundref="hello__afu_8c" startline="86">cache_line::uint</references>
        <references refid="hello__fpga_8c_1a300ec1c0f7befcbb990985d36d56d8c9">usleep</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A code sample illustrates the basic usage of the OPAE C API. </para>
    </briefdescription>
    <detaileddescription>
<para>The sample is a host application that demonstrates the basic steps of interacting with FPGA using the OPAE library. These steps include:</para>
<para><itemizedlist>
<listitem><para>FPGA enumeration</para>
</listitem><listitem><para>Resource acquiring and releasing</para>
</listitem><listitem><para>Managing shared memory buffer</para>
</listitem><listitem><para>MMIO read and write</para>
</listitem></itemizedlist>
</para>
<para>The sample also demonstrates OPAE&apos;s object model, such as tokens, handles, and properties.</para>
<para>The sample requires a native loopback mode (NLB) test image to be loaded on the FPGA. Refer to <ulink url="https://opae.github.io/docs/fpga_api/quick_start/readme.html">Quick Start Guide</ulink> for full instructions on building, configuring, and running this code sample. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright(c)<sp/>2017-2022,<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/><sp/>and<sp/><sp/>use<sp/><sp/>in<sp/>source<sp/><sp/>and<sp/><sp/>binary<sp/><sp/>forms,<sp/><sp/>with<sp/><sp/>or<sp/><sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/><sp/>source<sp/>code<sp/><sp/>must<sp/>retain<sp/>the<sp/><sp/>above<sp/>copyright<sp/>notice,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/><sp/>of<sp/>Intel<sp/>Corporation<sp/><sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>to<sp/><sp/>endorse<sp/>or<sp/>promote<sp/><sp/>products<sp/>derived<sp/><sp/>from<sp/>this<sp/><sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/><sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/><sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/><sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABLE<sp/><sp/>FOR<sp/><sp/>ANY<sp/><sp/>DIRECT,<sp/><sp/>INDIRECT,<sp/><sp/>INCIDENTAL,<sp/><sp/>SPECIAL,<sp/><sp/>EXEMPLARY,<sp/><sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/><sp/>DAMAGES<sp/><sp/>(INCLUDING,<sp/><sp/>BUT<sp/><sp/>NOT<sp/>LIMITED<sp/><sp/>TO,<sp/><sp/>PROCUREMENT<sp/><sp/>OF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/><sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/><sp/>OR<sp/>BUSINESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERRUPTION)<sp/><sp/>HOWEVER<sp/>CAUSED<sp/><sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/><sp/>OF<sp/>LIABILITY,<sp/><sp/>WHETHER<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONTRACT,<sp/><sp/>STRICT<sp/>LIABILITY,<sp/><sp/>OR<sp/>TORT<sp/><sp/>(INCLUDING<sp/>NEGLIGENCE<sp/><sp/>OR<sp/>OTHERWISE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/><sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;getopt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uuid/uuid.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fpga_8h" kindref="compound">opae/fpga.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;argsfilter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mock/opae_std.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="hello__fpga_8c_1a300ec1c0f7befcbb990985d36d56d8c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hello__fpga_8c_1a300ec1c0f7befcbb990985d36d56d8c9" kindref="member">usleep</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TEST_TIMEOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="hello__fpga_8c_1a9fd0cdfdda29532a444c52dd9e1c1d1f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_TIMEOUT<sp/>30000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>TEST_TIMEOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="hello__fpga_8c_1acda3b44286ccc5e1924198027f28a8c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>CL(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x)<sp/>*<sp/>64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LOG2_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="hello__fpga_8c_1adf30d050a3289b6d043824dfd97c81f1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>LOG2_CL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>LOG2_CL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="hello__fpga_8c_1a44d2b171cc92225ec0a76ef70fc9b531" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>MB(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x)<sp/>*<sp/>1024<sp/>*<sp/>1024)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>MB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="hello__fpga_8c_1ad3542630f57f4e7073dbd18dd41c9e9a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CACHELINE_ALIGNED_ADDR(p)<sp/>((p)<sp/>&gt;&gt;<sp/>LOG2_CL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="hello__fpga_8c_1aaa5caa9ebd221b79ab0d6f8c5568e855" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LPBK1_BUFFER_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MB(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="hello__fpga_8c_1a680d7d8ff687719f3dfd4a1cf7d04cfe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LPBK1_BUFFER_ALLOCATION_SIZE<sp/>MB(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="hello__fpga_8c_1a01a171b6816e2e3681ee0bea0fd74b70" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LPBK1_DSM_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MB(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="hello__fpga_8c_1a3346cda33cdc35d5d5b42cd489c75aa0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_SRC_ADDR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="hello__fpga_8c_1a8fc5dce1142497274a335a84489be3d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_DST_ADDR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="hello__fpga_8c_1acbe346f9bf5608488adb1b6ad68809b2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_CTL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0138</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="hello__fpga_8c_1ac514d59efcfed9b7fb07a3c838f09503" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_STATUS1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0168</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="hello__fpga_8c_1a21f1970d1fcd3dee94bf0ab5aeb54fbd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_CFG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0140</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="hello__fpga_8c_1ab1c7049b0e183020bdabcaaec8f20e49" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_NUM_LINES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0130</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="hello__fpga_8c_1ac77542e2d0512964e9a065d647b14639" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DSM_STATUS_TEST_COMPLETE<sp/><sp/><sp/><sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="hello__fpga_8c_1a4502164cd63bc6b91df80c619468e479" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSR_AFU_DSM_BASEL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0110</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NLB0<sp/>AFU_ID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="hello__fpga_8c_1a326496be663d917e61f22100670026b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NLB0_AFUID<sp/>&quot;D8424DC4-A4A3-C413-F89E-433683F9040B&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NLB0<sp/>AFU_ID<sp/>for<sp/>N3000<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="hello__fpga_8c_1a782f8715b2fd7e1919759a25ee578d44" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>N3000_AFUID<sp/>&quot;9AEFFE5F-8457-0612-C000-C9660D824272&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="hello__fpga_8c_1acb55d7e03697cb4b95812725b762f653" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FPGA_NLB0_UUID_H<sp/>0xd8424dc4a4a3c413</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="hello__fpga_8c_1a46ed725f81a748bec841dd6216f8ac21" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FPGA_NLB0_UUID_L<sp/>0xf89e433683f9040b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>macro<sp/>to<sp/>check<sp/>return<sp/>codes,<sp/>print<sp/>error<sp/>message,<sp/>and<sp/>goto<sp/>cleanup<sp/>label</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>this<sp/>changes<sp/>the<sp/>program<sp/>flow<sp/>(uses<sp/>goto)!</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ON_ERR_GOTO(res,<sp/>label,<sp/>desc)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((res)<sp/>!=<sp/>FPGA_OK)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_err((desc),<sp/>(res));<sp/><sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>label;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Type<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/>uint[16];</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}<sp/><ref refid="structcache__line" kindref="compound">cache_line</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="hello__fpga_8c_1aa11f434898b86d619a5ceb6a5d7bf066" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hello__fpga_8c_1aa11f434898b86d619a5ceb6a5d7bf066" kindref="member">print_err</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref><sp/>res)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/><ref refid="utils_8h_1a2a3fc0d8baf294d2da980ba544368b32" kindref="member">fpgaErrStr</ref>(res));</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>Global<sp/>configuration<sp/>of<sp/>bus,<sp/>set<sp/>during<sp/>parse_args()</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="structconfig" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconfig" kindref="compound">config</ref><sp/>{</highlight></codeline>
<codeline lineno="130" refid="structconfig_1a56a710b532c4f7d6213fbd173920ffca" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structconfig_1a56a710b532c4f7d6213fbd173920ffca" kindref="member">open_flags</ref>;</highlight></codeline>
<codeline lineno="131" refid="structconfig_1a860ca20f3c0dd13da4979632fb61f505" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structconfig_1a860ca20f3c0dd13da4979632fb61f505" kindref="member">run_n3000</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="structconfig" kindref="compound">config</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>.<ref refid="structconfig_1a56a710b532c4f7d6213fbd173920ffca" kindref="member">open_flags</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>.run_n3000<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="137" refid="hello__fpga_8c_1a6021fefa0bf488ddb29487b0b9d49979" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="hello__fpga_8c_1a0bed8474bd33a912769360766f6b10d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hello__fpga_8c_1a0bed8474bd33a912769360766f6b10d4" kindref="member">help</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;hello_fpga\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;OPAE<sp/>Native<sp/>Loopback<sp/>0<sp/>(NLB0)<sp/>sample\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Usage:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hello_fpga<sp/>[-schv]<sp/>[-S<sp/>&lt;segment&gt;]<sp/>[-B<sp/>&lt;bus&gt;]<sp/>[-D<sp/>&lt;device&gt;]<sp/>[-F<sp/>&lt;function&gt;]<sp/>[PCI_ADDR]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-s,--shared<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Open<sp/>accelerator<sp/>in<sp/>shared<sp/>mode\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-c,--n3000<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assume<sp/>N3000<sp/>MMIO<sp/>layout\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-h,--help<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Print<sp/>this<sp/>help\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-v,--version<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Print<sp/>version<sp/>info<sp/>and<sp/>exit\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="hello__fpga_8c_1acc2c9cc08f0f7b8f21f835d3fa0f6435" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GETOPT_STRING<sp/>&quot;hscv&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="hello__fpga_8c_1a3a1b6f72679286eae6f9eec936cc5533" refkind="member"><highlight class="normal"><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref><sp/><ref refid="hello__fpga_8c_1a3a1b6f72679286eae6f9eec936cc5533" kindref="member">parse_args</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">option<sp/>longopts[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>no_argument,<sp/>NULL,<sp/></highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;shared&quot;</highlight><highlight class="normal">,<sp/><sp/>no_argument,<sp/>NULL,<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;n3000&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>no_argument,<sp/>NULL,<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">,<sp/>no_argument,<sp/>NULL,<sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><sp/>0<sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getopt_ret;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>option_index;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>version[32];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>build[32];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(-1<sp/>!=<sp/>(getopt_ret<sp/>=<sp/>getopt_long(argc,<sp/>argv,<sp/><ref refid="hello__fpga_8c_1acc2c9cc08f0f7b8f21f835d3fa0f6435" kindref="member">GETOPT_STRING</ref>,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longopts,<sp/>&amp;option_index)))<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp_optarg<sp/>=<sp/>optarg;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Checks<sp/>to<sp/>see<sp/>if<sp/>optarg<sp/>is<sp/>null<sp/>and<sp/>if<sp/>not<sp/>it<sp/>goes<sp/>to<sp/>value<sp/>of<sp/>optarg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((optarg)<sp/>&amp;&amp;<sp/>(</highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal"><sp/>==<sp/>*tmp_optarg))<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tmp_optarg;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(getopt_ret)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a0bed8474bd33a912769360766f6b10d4" kindref="member">help</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structconfig" kindref="compound">config</ref>.<ref refid="structconfig_1a56a710b532c4f7d6213fbd173920ffca" kindref="member">open_flags</ref><sp/>|=<sp/><ref refid="types__enum_8h_1a3a32599a1213352a3217f6e068651fc6a7eb08309368b559a0ecaf8193053a94c" kindref="member">FPGA_OPEN_SHARED</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structconfig" kindref="compound">config</ref>.<ref refid="structconfig_1a860ca20f3c0dd13da4979632fb61f505" kindref="member">run_n3000</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="version_8h_1aade1f86d5d30658a7ccddaa54db74ab8" kindref="member">fpgaGetOPAECVersionString</ref>(version,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(version));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="version_8h_1a4291b6b91fc85bff7d342109ac0e05ab" kindref="member">fpgaGetOPAECBuildString</ref>(build,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(build));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;hello_fpga<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version,<sp/>build);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>invalid<sp/>option<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>cmdline<sp/>option<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da8527745386f7cea8d8aa64f96f2249a4" kindref="member">FPGA_EXCEPTION</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" kindref="member">FPGA_OK</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="hello__fpga_8c_1ae703894d2d572a2c40252494470ab1f1" refkind="member"><highlight class="normal"><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref><sp/><ref refid="hello__fpga_8c_1ae703894d2d572a2c40252494470ab1f1" kindref="member">find_fpga</ref>(<ref refid="types_8h_1ab868bdeab946a8059abe7e9c114aee56" kindref="member">fpga_properties</ref><sp/>device_filter,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1af0b6683499be79fab39ac41db02e7abf" kindref="member">fpga_guid</ref><sp/>afu_guid,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1a252f538a10fb51d0988ed52946516d9e" kindref="member">fpga_token</ref><sp/>*accelerator_token,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*num_matches_accelerators)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><ref refid="types_8h_1ab868bdeab946a8059abe7e9c114aee56" kindref="member">fpga_properties</ref><sp/>filter<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref><sp/>res1;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref><sp/>res2<sp/>=<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" kindref="member">FPGA_OK</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="properties_8h_1ac51c19bdd763a98e143a938c47963905" kindref="member">fpgaCloneProperties</ref>(device_filter,<sp/>&amp;filter);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out,<sp/></highlight><highlight class="stringliteral">&quot;cloning<sp/>properties<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="properties_8h_1a3724caa06200e0d3f0b56611c379d75b" kindref="member">fpgaPropertiesSetObjectType</ref>(filter,<sp/><ref refid="types__enum_8h_1a9b2ddb9e533441e79f19d45fa0a24934a5c3973a253ffaabddd0a083f05abebc7" kindref="member">FPGA_ACCELERATOR</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_destroy,<sp/></highlight><highlight class="stringliteral">&quot;setting<sp/>object<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="properties_8h_1a71ad1e59994b2c8b04ea036a64515117" kindref="member">fpgaPropertiesSetGUID</ref>(filter,<sp/>afu_guid);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_destroy,<sp/></highlight><highlight class="stringliteral">&quot;setting<sp/>GUID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="enum_8h_1a277ba17f2377895855545bd82c1f901d" kindref="member">fpgaEnumerate</ref>(&amp;filter,<sp/>1,<sp/>accelerator_token,<sp/>1,<sp/>num_matches_accelerators);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_destroy,<sp/></highlight><highlight class="stringliteral">&quot;enumerating<sp/>accelerators&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">out_destroy:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/>res2<sp/>=<sp/><ref refid="properties_8h_1a6f83533f996cf6bd25274e0b7b9c3050" kindref="member">fpgaDestroyProperties</ref>(&amp;filter);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res2,<sp/>out,<sp/></highlight><highlight class="stringliteral">&quot;destroying<sp/>properties<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">out:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res1<sp/>!=<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" kindref="member">FPGA_OK</ref><sp/>?<sp/>res1<sp/>:<sp/>res2;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Is<sp/>the<sp/>FPGA<sp/>simulated<sp/>with<sp/>ASE?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="hello__fpga_8c_1a888b04133611aa43ed28c4e4f9f319ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hello__fpga_8c_1a888b04133611aa43ed28c4e4f9f319ae" kindref="member">probe_for_ase</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref><sp/>r<sp/>=<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" kindref="member">FPGA_OK</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>device_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><ref refid="types_8h_1ab868bdeab946a8059abe7e9c114aee56" kindref="member">fpga_properties</ref><sp/>filter<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/>num_matches<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><ref refid="types_8h_1a252f538a10fb51d0988ed52946516d9e" kindref="member">fpga_token</ref><sp/>fme_token;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Connect<sp/>to<sp/>the<sp/>FPGA<sp/>management<sp/>engine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><ref refid="properties_8h_1a010d3b6839fc8763e66e4f953682a489" kindref="member">fpgaGetProperties</ref>(NULL,<sp/>&amp;filter);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><ref refid="properties_8h_1a3724caa06200e0d3f0b56611c379d75b" kindref="member">fpgaPropertiesSetObjectType</ref>(filter,<sp/><ref refid="types__enum_8h_1a9b2ddb9e533441e79f19d45fa0a24934a91f784c1c357473adbde7188a244219a" kindref="member">FPGA_DEVICE</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Connecting<sp/>to<sp/>one<sp/>is<sp/>sufficient<sp/>to<sp/>find<sp/>ASE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><ref refid="enum_8h_1a277ba17f2377895855545bd82c1f901d" kindref="member">fpgaEnumerate</ref>(&amp;filter,<sp/>1,<sp/>&amp;fme_token,<sp/>1,<sp/>&amp;num_matches);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>num_matches)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retrieve<sp/>the<sp/>device<sp/>ID<sp/>of<sp/>the<sp/>FME<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="properties_8h_1a6f83533f996cf6bd25274e0b7b9c3050" kindref="member">fpgaDestroyProperties</ref>(&amp;filter);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="properties_8h_1a010d3b6839fc8763e66e4f953682a489" kindref="member">fpgaGetProperties</ref>(fme_token,<sp/>&amp;filter);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="properties_8h_1ac3237ae88feff35ba0c285e27cac58a5" kindref="member">fpgaPropertiesGetDeviceID</ref>(filter,<sp/>&amp;device_id);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="enum_8h_1a150a7a8f46e0d6df12cc329ff7030e21" kindref="member">fpgaDestroyToken</ref>(&amp;fme_token);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><ref refid="properties_8h_1a6f83533f996cf6bd25274e0b7b9c3050" kindref="member">fpgaDestroyProperties</ref>(&amp;filter);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ASE&apos;s<sp/>device<sp/>ID<sp/>is<sp/>0xa5e<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" kindref="member">FPGA_OK</ref><sp/>==<sp/>r)<sp/>&amp;&amp;<sp/>(0xa5e<sp/>==<sp/>device_id));</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="hello__fpga_8c_1af5efd740b98ff6882ecbdde289da7b85" refkind="member"><highlight class="normal"><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref><sp/><ref refid="hello__fpga_8c_1af5efd740b98ff6882ecbdde289da7b85" kindref="member">find_nlb_n3000</ref>(<ref refid="types_8h_1a4ad40f31195233b629bcde187b0556d5" kindref="member">fpga_handle</ref><sp/>accelerator_handle,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>*afu_baddr)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref><sp/>res1<sp/>=<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" kindref="member">FPGA_OK</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_of_list<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlb0_found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/>uint64_t<sp/>header<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/>uint64_t<sp/>uuid_hi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/>uint64_t<sp/>uuid_lo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>uint64_t<sp/>next_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>uint64_t<sp/>nlb0_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>NLB0<sp/>in<sp/>AFU<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>next<sp/>feature<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1a011ba900710ddf70c13ca089c4742187" kindref="member">fpgaReadMMIO64</ref>(accelerator_handle,<sp/>0,<sp/>nlb0_offset,<sp/>&amp;header);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_exit,<sp/></highlight><highlight class="stringliteral">&quot;fpgaReadMMIO64&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1a011ba900710ddf70c13ca089c4742187" kindref="member">fpgaReadMMIO64</ref>(accelerator_handle,<sp/>0,<sp/>nlb0_offset+8,<sp/>&amp;uuid_lo);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_exit,<sp/></highlight><highlight class="stringliteral">&quot;fpgaReadMMIO64&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1a011ba900710ddf70c13ca089c4742187" kindref="member">fpgaReadMMIO64</ref>(accelerator_handle,<sp/>0,<sp/>nlb0_offset+16,<sp/>&amp;uuid_hi);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_exit,<sp/></highlight><highlight class="stringliteral">&quot;fpgaReadMMIO64&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;%zx:<sp/>%zx<sp/>%zx<sp/>%zx\n&quot;,<sp/>nlb0_offset,<sp/>header,<sp/>uuid_lo,<sp/>uuid_hi);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((header<sp/>&gt;&gt;<sp/>60)<sp/>&amp;<sp/>0xf)<sp/>==<sp/>0x1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uuid_lo<sp/>==<sp/><ref refid="hello__fpga_8c_1a46ed725f81a748bec841dd6216f8ac21" kindref="member">FPGA_NLB0_UUID_L</ref>)<sp/>&amp;&amp;<sp/>(uuid_hi<sp/>==<sp/><ref refid="hello__fpga_8c_1acb55d7e03697cb4b95812725b762f653" kindref="member">FPGA_NLB0_UUID_H</ref>))<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlb0_found<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>the<sp/>list<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_of_list<sp/>=<sp/>(header<sp/>&gt;&gt;<sp/>40)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>to<sp/>the<sp/>next<sp/>feature<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_offset<sp/>=<sp/>(header<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xffffff;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((next_offset<sp/>==<sp/>0xffff)<sp/>||<sp/>(next_offset<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlb0_found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nlb0_offset<sp/>=<sp/>nlb0_offset<sp/>+<sp/>next_offset;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!end_of_list);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nlb0_found)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;AFU<sp/>NLB0<sp/>not<sp/>found\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da8527745386f7cea8d8aa64f96f2249a4" kindref="member">FPGA_EXCEPTION</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;AFU<sp/>NLB0<sp/>found<sp/>@<sp/>%zx\n&quot;</highlight><highlight class="normal">,<sp/>nlb0_offset);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/>*afu_baddr<sp/>=<sp/>nlb0_offset;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" kindref="member">FPGA_OK</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">out_exit:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da8527745386f7cea8d8aa64f96f2249a4" kindref="member">FPGA_EXCEPTION</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="hello__fpga_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="hello__fpga_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><ref refid="types_8h_1a252f538a10fb51d0988ed52946516d9e" kindref="member">fpga_token</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accelerator_token;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><ref refid="types_8h_1a4ad40f31195233b629bcde187b0556d5" kindref="member">fpga_handle</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accelerator_handle;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><ref refid="types_8h_1af0b6683499be79fab39ac41db02e7abf" kindref="member">fpga_guid</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guid;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_matches_accelerators<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_ase;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*dsm_ptr<sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*status_ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*input_ptr<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*output_ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsm_wsid;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_wsid;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_wsid;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" kindref="member">FPGA_OK</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6d" kindref="member">fpga_result</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res2<sp/>=<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" kindref="member">FPGA_OK</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><ref refid="types_8h_1ab868bdeab946a8059abe7e9c114aee56" kindref="member">fpga_properties</ref><sp/><sp/><sp/><sp/>device_filter<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="properties_8h_1a010d3b6839fc8763e66e4f953682a489" kindref="member">fpgaGetProperties</ref>(NULL,<sp/>&amp;device_filter);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res1<sp/>!=<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" kindref="member">FPGA_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hello__fpga_8c_1aa11f434898b86d619a5ceb6a5d7bf066" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>allocate<sp/>properties.\n&quot;</highlight><highlight class="normal">,<sp/>res1);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opae_set_properties_from_args(device_filter,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;res1,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;argc,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv))<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hello__fpga_8c_1aa11f434898b86d619a5ceb6a5d7bf066" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>arg<sp/>parse.\n&quot;</highlight><highlight class="normal">,<sp/>res1);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da8527745386f7cea8d8aa64f96f2249a4" kindref="member">FPGA_EXCEPTION</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out_exit;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res1)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hello__fpga_8c_1aa11f434898b86d619a5ceb6a5d7bf066" kindref="member">print_err</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>set<sp/>properties.\n&quot;</highlight><highlight class="normal">,<sp/>res1);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out_exit;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="hello__fpga_8c_1a3a1b6f72679286eae6f9eec936cc5533" kindref="member">parse_args</ref>(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)res1<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out_exit;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_exit,<sp/></highlight><highlight class="stringliteral">&quot;parsing<sp/>arguments&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structconfig" kindref="compound">config</ref>.<ref refid="structconfig_1a860ca20f3c0dd13da4979632fb61f505" kindref="member">run_n3000</ref>)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uuid_parse(<ref refid="hello__fpga_8c_1a782f8715b2fd7e1919759a25ee578d44" kindref="member">N3000_AFUID</ref>,<sp/>guid)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da8527745386f7cea8d8aa64f96f2249a4" kindref="member">FPGA_EXCEPTION</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uuid_parse(<ref refid="hello__fpga_8c_1a326496be663d917e61f22100670026b9" kindref="member">NLB0_AFUID</ref>,<sp/>guid)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da8527745386f7cea8d8aa64f96f2249a4" kindref="member">FPGA_EXCEPTION</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_exit,<sp/></highlight><highlight class="stringliteral">&quot;parsing<sp/>guid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/>use_ase<sp/>=<sp/><ref refid="hello__fpga_8c_1a888b04133611aa43ed28c4e4f9f319ae" kindref="member">probe_for_ase</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_ase)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Running<sp/>in<sp/>ASE<sp/>mode\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>accelerator<sp/>with<sp/>NLB0_AFUID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="hello__fpga_8c_1ae703894d2d572a2c40252494470ab1f1" kindref="member">find_fpga</ref>(device_filter,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guid,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;accelerator_token,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;num_matches_accelerators);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_exit,<sp/></highlight><highlight class="stringliteral">&quot;finding<sp/>FPGA<sp/>accelerator&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_matches_accelerators<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da7aee5958cf7f46e9d80c4ee50d42d86c" kindref="member">FPGA_NOT_FOUND</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_exit,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>matching<sp/>accelerator&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_matches_accelerators<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Found<sp/>more<sp/>than<sp/>one<sp/>suitable<sp/>accelerator.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>accelerator<sp/>and<sp/>map<sp/>MMIO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="access_8h_1addde6b2bafcd6632a2c0b595c6bc0ef3" kindref="member">fpgaOpen</ref>(accelerator_token,<sp/>&amp;accelerator_handle,<sp/><ref refid="structconfig" kindref="compound">config</ref>.<ref refid="structconfig_1a56a710b532c4f7d6213fbd173920ffca" kindref="member">open_flags</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_destroy_tok,<sp/></highlight><highlight class="stringliteral">&quot;opening<sp/>accelerator&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1a2903267d37ea5c64522b0addce74da5f" kindref="member">fpgaMapMMIO</ref>(accelerator_handle,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_close,<sp/></highlight><highlight class="stringliteral">&quot;mapping<sp/>MMIO<sp/>space&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="buffer_8h_1aac3ed0146bc42c35f99610a319e87303" kindref="member">fpgaPrepareBuffer</ref>(accelerator_handle,<sp/><ref refid="hello__fpga_8c_1a01a171b6816e2e3681ee0bea0fd74b70" kindref="member">LPBK1_DSM_SIZE</ref>,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;dsm_ptr,<sp/>&amp;dsm_wsid,<sp/>0);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_close,<sp/></highlight><highlight class="stringliteral">&quot;allocating<sp/>DSM<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="buffer_8h_1aac3ed0146bc42c35f99610a319e87303" kindref="member">fpgaPrepareBuffer</ref>(accelerator_handle,<sp/><ref refid="hello__fpga_8c_1a680d7d8ff687719f3dfd4a1cf7d04cfe" kindref="member">LPBK1_BUFFER_ALLOCATION_SIZE</ref>,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;input_ptr,<sp/>&amp;input_wsid,<sp/>0);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_dsm,<sp/></highlight><highlight class="stringliteral">&quot;allocating<sp/>input<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="buffer_8h_1aac3ed0146bc42c35f99610a319e87303" kindref="member">fpgaPrepareBuffer</ref>(accelerator_handle,<sp/><ref refid="hello__fpga_8c_1a680d7d8ff687719f3dfd4a1cf7d04cfe" kindref="member">LPBK1_BUFFER_ALLOCATION_SIZE</ref>,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;output_ptr,<sp/>&amp;output_wsid,<sp/>0);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_input,<sp/></highlight><highlight class="stringliteral">&quot;allocating<sp/>output<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Running<sp/>Test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)dsm_ptr,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a01a171b6816e2e3681ee0bea0fd74b70" kindref="member">LPBK1_DSM_SIZE</ref>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)input_ptr,<sp/><sp/>0xAF,<sp/><ref refid="hello__fpga_8c_1aaa5caa9ebd221b79ab0d6f8c5568e855" kindref="member">LPBK1_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)output_ptr,<sp/>0xBE,<sp/><ref refid="hello__fpga_8c_1aaa5caa9ebd221b79ab0d6f8c5568e855" kindref="member">LPBK1_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><ref refid="structcache__line" kindref="compound">cache_line</ref><sp/>*cl_ptr<sp/>=<sp/>(<ref refid="structcache__line" kindref="compound">cache_line</ref><sp/>*)input_ptr;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="hello__fpga_8c_1aaa5caa9ebd221b79ab0d6f8c5568e855" kindref="member">LPBK1_BUFFER_SIZE</ref><sp/>/<sp/><ref refid="hello__fpga_8c_1acda3b44286ccc5e1924198027f28a8c5" kindref="member">CL</ref>(1);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_ptr[i].<ref refid="structcache__line_1a3f28028a2861bc1cb7e3d07fa84bb4a2" kindref="member">uint</ref>[15]<sp/>=<sp/>i+1;<sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>last<sp/>uint<sp/>in<sp/>every<sp/>cacheline<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>accelerator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="access_8h_1aa4addba9b864dbc614a1680dfc29dc59" kindref="member">fpgaReset</ref>(accelerator_handle);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;resetting<sp/>accelerator&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/>uint64_t<sp/>nlb_base_addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structconfig" kindref="compound">config</ref>.<ref refid="structconfig_1a860ca20f3c0dd13da4979632fb61f505" kindref="member">run_n3000</ref>)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="hello__fpga_8c_1af5efd740b98ff6882ecbdde289da7b85" kindref="member">find_nlb_n3000</ref>(accelerator_handle,<sp/>&amp;nlb_base_addr);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;finding<sp/>nlb<sp/>in<sp/>AFU&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Program<sp/>DMA<sp/>addresses<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/>uint64_t<sp/>iova<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="buffer_8h_1aed20b8768e38a5414a331dd09a2aa221" kindref="member">fpgaGetIOAddress</ref>(accelerator_handle,<sp/>dsm_wsid,<sp/>&amp;iova);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;getting<sp/>DSM<sp/>IOVA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1a6df7f745d9b9d47582714fe8e2d1a761" kindref="member">fpgaWriteMMIO64</ref>(accelerator_handle,<sp/>0,<sp/>nlb_base_addr<sp/>+<sp/><ref refid="hello__fpga_8c_1a4502164cd63bc6b91df80c619468e479" kindref="member">CSR_AFU_DSM_BASEL</ref>,<sp/>iova);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>CSR_AFU_DSM_BASEL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1ae538bfe7158d1911c5e749bbc063aa3d" kindref="member">fpgaWriteMMIO32</ref>(accelerator_handle,<sp/>0,<sp/>nlb_base_addr<sp/>+<sp/><ref refid="hello__fpga_8c_1acbe346f9bf5608488adb1b6ad68809b2" kindref="member">CSR_CTL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>CSR_CFG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1ae538bfe7158d1911c5e749bbc063aa3d" kindref="member">fpgaWriteMMIO32</ref>(accelerator_handle,<sp/>0,<sp/>nlb_base_addr<sp/>+<sp/><ref refid="hello__fpga_8c_1acbe346f9bf5608488adb1b6ad68809b2" kindref="member">CSR_CTL</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>CSR_CFG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="buffer_8h_1aed20b8768e38a5414a331dd09a2aa221" kindref="member">fpgaGetIOAddress</ref>(accelerator_handle,<sp/>input_wsid,<sp/>&amp;iova);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;getting<sp/>input<sp/>IOVA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1a6df7f745d9b9d47582714fe8e2d1a761" kindref="member">fpgaWriteMMIO64</ref>(accelerator_handle,<sp/>0,<sp/>nlb_base_addr<sp/>+<sp/><ref refid="hello__fpga_8c_1a3346cda33cdc35d5d5b42cd489c75aa0" kindref="member">CSR_SRC_ADDR</ref>,<sp/><ref refid="hello__fpga_8c_1ad3542630f57f4e7073dbd18dd41c9e9a" kindref="member">CACHELINE_ALIGNED_ADDR</ref>(iova));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>CSR_SRC_ADDR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="buffer_8h_1aed20b8768e38a5414a331dd09a2aa221" kindref="member">fpgaGetIOAddress</ref>(accelerator_handle,<sp/>output_wsid,<sp/>&amp;iova);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;getting<sp/>output<sp/>IOVA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1a6df7f745d9b9d47582714fe8e2d1a761" kindref="member">fpgaWriteMMIO64</ref>(accelerator_handle,<sp/>0,<sp/>nlb_base_addr<sp/>+<sp/><ref refid="hello__fpga_8c_1a8fc5dce1142497274a335a84489be3d4" kindref="member">CSR_DST_ADDR</ref>,<sp/><ref refid="hello__fpga_8c_1ad3542630f57f4e7073dbd18dd41c9e9a" kindref="member">CACHELINE_ALIGNED_ADDR</ref>(iova));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>CSR_DST_ADDR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1ae538bfe7158d1911c5e749bbc063aa3d" kindref="member">fpgaWriteMMIO32</ref>(accelerator_handle,<sp/>0,<sp/>nlb_base_addr<sp/>+<sp/><ref refid="hello__fpga_8c_1ab1c7049b0e183020bdabcaaec8f20e49" kindref="member">CSR_NUM_LINES</ref>,<sp/><ref refid="hello__fpga_8c_1aaa5caa9ebd221b79ab0d6f8c5568e855" kindref="member">LPBK1_BUFFER_SIZE</ref><sp/>/<sp/><ref refid="hello__fpga_8c_1acda3b44286ccc5e1924198027f28a8c5" kindref="member">CL</ref>(1));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>CSR_NUM_LINES&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1ae538bfe7158d1911c5e749bbc063aa3d" kindref="member">fpgaWriteMMIO32</ref>(accelerator_handle,<sp/>0,<sp/>nlb_base_addr<sp/>+<sp/><ref refid="hello__fpga_8c_1a21f1970d1fcd3dee94bf0ab5aeb54fbd" kindref="member">CSR_CFG</ref>,<sp/>0x42000);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>CSR_CFG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/>status_ptr<sp/>=<sp/>dsm_ptr<sp/>+<sp/><ref refid="hello__fpga_8c_1ac77542e2d0512964e9a065d647b14639" kindref="member">DSM_STATUS_TEST_COMPLETE</ref>/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint64_t);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>the<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1ae538bfe7158d1911c5e749bbc063aa3d" kindref="member">fpgaWriteMMIO32</ref>(accelerator_handle,<sp/>0,<sp/>nlb_base_addr<sp/>+<sp/><ref refid="hello__fpga_8c_1acbe346f9bf5608488adb1b6ad68809b2" kindref="member">CSR_CTL</ref>,<sp/>3);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>CSR_CFG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>test<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/>timeout<sp/>=<sp/><ref refid="hello__fpga_8c_1a9fd0cdfdda29532a444c52dd9e1c1d1f" kindref="member">TEST_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>((*status_ptr)<sp/>&amp;<sp/>0x1))<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a300ec1c0f7befcbb990985d36d56d8c9" kindref="member">usleep</ref>(100);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!use_ase<sp/>&amp;&amp;<sp/>(--timeout<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da8527745386f7cea8d8aa64f96f2249a4" kindref="member">FPGA_EXCEPTION</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;test<sp/>timed<sp/>out&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stop<sp/>the<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1ae538bfe7158d1911c5e749bbc063aa3d" kindref="member">fpgaWriteMMIO32</ref>(accelerator_handle,<sp/>0,<sp/>nlb_base_addr<sp/>+<sp/><ref refid="hello__fpga_8c_1acbe346f9bf5608488adb1b6ad68809b2" kindref="member">CSR_CTL</ref>,<sp/>7);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>CSR_CFG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>the<sp/>AFU&apos;s<sp/>read/write<sp/>traffic<sp/>to<sp/>complete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/>afu_traffic_trips<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(afu_traffic_trips<sp/>&lt;<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>CSR_STATUS1<sp/>holds<sp/>two<sp/>32<sp/>bit<sp/>values:<sp/>num<sp/>pending<sp/>reads<sp/>and<sp/>writes.</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Wait<sp/>for<sp/>it<sp/>to<sp/>be<sp/>0.</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>s1;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res1<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1a011ba900710ddf70c13ca089c4742187" kindref="member">fpgaReadMMIO64</ref>(accelerator_handle,<sp/>0,<sp/>nlb_base_addr<sp/>+<sp/><ref refid="hello__fpga_8c_1ac514d59efcfed9b7fb07a3c838f09503" kindref="member">CSR_STATUS1</ref>,<sp/>&amp;s1);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res1,<sp/>out_free_output,<sp/></highlight><highlight class="stringliteral">&quot;reading<sp/>CSR_STATUS1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>afu_traffic_trips<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a300ec1c0f7befcbb990985d36d56d8c9" kindref="member">usleep</ref>(1000);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>output<sp/>buffer<sp/>contents<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="hello__fpga_8c_1aaa5caa9ebd221b79ab0d6f8c5568e855" kindref="member">LPBK1_BUFFER_SIZE</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((uint8_t<sp/>*)output_ptr)[i]<sp/>!=<sp/>((uint8_t<sp/>*)input_ptr)[i])<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>does<sp/>NOT<sp/>match<sp/>input<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;at<sp/>offset<sp/>%i!\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Done<sp/>Running<sp/>Test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">out_free_output:</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/>res2<sp/>=<sp/><ref refid="buffer_8h_1a3d2302d336bbe5fe05a08a8f534d296b" kindref="member">fpgaReleaseBuffer</ref>(accelerator_handle,<sp/>output_wsid);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res2,<sp/>out_free_input,<sp/></highlight><highlight class="stringliteral">&quot;releasing<sp/>output<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal">out_free_input:</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/>res2<sp/>=<sp/><ref refid="buffer_8h_1a3d2302d336bbe5fe05a08a8f534d296b" kindref="member">fpgaReleaseBuffer</ref>(accelerator_handle,<sp/>input_wsid);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res2,<sp/>out_free_dsm,<sp/></highlight><highlight class="stringliteral">&quot;releasing<sp/>input<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="522"><highlight class="normal">out_free_dsm:</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/>res2<sp/>=<sp/><ref refid="buffer_8h_1a3d2302d336bbe5fe05a08a8f534d296b" kindref="member">fpgaReleaseBuffer</ref>(accelerator_handle,<sp/>dsm_wsid);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res2,<sp/>out_unmap,<sp/></highlight><highlight class="stringliteral">&quot;releasing<sp/>DSM<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unmap<sp/>MMIO<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal">out_unmap:</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/>res2<sp/>=<sp/><ref refid="include_2opae_2mmio_8h_1a8c8db22506e1fbfd16440c660bfee28f" kindref="member">fpgaUnmapMMIO</ref>(accelerator_handle,<sp/>0);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res2,<sp/>out_close,<sp/></highlight><highlight class="stringliteral">&quot;unmapping<sp/>MMIO<sp/>space&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>accelerator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">out_close:</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/>res2<sp/>=<sp/><ref refid="access_8h_1ac83789ebb65dc6b2adeae3d7e7fa3e79" kindref="member">fpgaClose</ref>(accelerator_handle);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res2,<sp/>out_destroy_tok,<sp/></highlight><highlight class="stringliteral">&quot;closing<sp/>accelerator&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Destroy<sp/>token<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal">out_destroy_tok:</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/>res2<sp/>=<sp/><ref refid="enum_8h_1a150a7a8f46e0d6df12cc329ff7030e21" kindref="member">fpgaDestroyToken</ref>(&amp;accelerator_token);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><ref refid="hello__fpga_8c_1a7635d12a96b25dd1760b4bc44130eed9" kindref="member">ON_ERR_GOTO</ref>(res2,<sp/>out_exit,<sp/></highlight><highlight class="stringliteral">&quot;destroying<sp/>token&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">out_exit:</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><ref refid="properties_8h_1a6f83533f996cf6bd25274e0b7b9c3050" kindref="member">fpgaDestroyProperties</ref>(&amp;device_filter);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res1<sp/>!=<sp/><ref refid="types__enum_8h_1a27aaa9bd2d94c9b53602b1a7af49fc6da727cb0690aa450810ffc8f5371401327" kindref="member">FPGA_OK</ref><sp/>?<sp/>res1<sp/>:<sp/>res2;</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="samples/hello_fpga/hello_fpga.c"/>
  </compounddef>
</doxygen>
