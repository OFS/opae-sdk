<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="he__cache__test_8h" kind="file" language="C++">
    <compoundname>he_cache_test.h</compoundname>
    <includes local="no">future</includes>
    <includes local="no">glob.h</includes>
    <includes local="no">inttypes.h</includes>
    <includes local="no">numa.h</includes>
    <includes refid="core_8h" local="no">opae/cxx/core.h</includes>
    <includes local="no">regex.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/ioctl.h</includes>
    <includes local="no">sys/mman.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/syscall.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">CLI/CLI.hpp</includes>
    <includes local="no">spdlog/spdlog.h</includes>
    <includes local="no">spdlog/sinks/stdout_color_sinks.h</includes>
    <includes local="no">spdlog/sinks/basic_file_sink.h</includes>
    <includes local="yes">fpga-dfl.h</includes>
    <includedby refid="cxl__he__cache__cmd_8h" local="yes">samples/cxl_host_exerciser/cxl_he_cache_cmd.h</includedby>
    <includedby refid="cxl__he__cache__lpbk__cmd_8h" local="yes">samples/cxl_host_exerciser/cxl_he_cache_lpbk_cmd.h</includedby>
    <includedby refid="cxl__he__cmd_8h" local="yes">samples/cxl_host_exerciser/cxl_he_cmd.h</includedby>
    <includedby refid="cxl__host__exerciser_8h" local="yes">samples/cxl_host_exerciser/cxl_host_exerciser.h</includedby>
    <incdepgraph>
      <node id="13">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>glob.h</label>
      </node>
      <node id="34">
        <label>opae/cxx/core/handle.h</label>
        <link refid="handle_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cstdint</label>
      </node>
      <node id="11">
        <label>stdint.h</label>
      </node>
      <node id="46">
        <label>sys/mman.h</label>
      </node>
      <node id="43">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>samples/cxl_host_exerciser/he_cache_test.h</label>
        <link refid="he__cache__test_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>fcntl.h</label>
      </node>
      <node id="35">
        <label>opae/cxx/core/shared_buffer.h</label>
        <link refid="shared__buffer_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>opae/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>opae/types_enum.h</label>
        <link refid="types__enum_8h"/>
      </node>
      <node id="41">
        <label>string</label>
      </node>
      <node id="50">
        <label>CLI/CLI.hpp</label>
      </node>
      <node id="29">
        <label>map</label>
      </node>
      <node id="45">
        <label>sys/ioctl.h</label>
      </node>
      <node id="53">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="23">
        <label>uuid/uuid.h</label>
      </node>
      <node id="19">
        <label>exception</label>
      </node>
      <node id="12">
        <label>stddef.h</label>
      </node>
      <node id="40">
        <label>opae/cxx/core/version.h</label>
        <link refid="cxx_2core_2version_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>opae/cxx/core/except.h</label>
        <link refid="except_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>opae/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="6">
        <label>opae/cxx/core.h</label>
        <link refid="core_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>string.h</label>
      </node>
      <node id="2">
        <label>future</label>
      </node>
      <node id="49">
        <label>unistd.h</label>
      </node>
      <node id="15">
        <label>opae/cxx/core/properties.h</label>
        <link refid="cxx_2core_2properties_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>vector</label>
      </node>
      <node id="52">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="25">
        <label>array</label>
      </node>
      <node id="20">
        <label>opae/properties.h</label>
        <link refid="properties_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>opae/cxx/core/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>opae/cxx/core/errors.h</label>
        <link refid="errors_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>iostream</label>
      </node>
      <node id="32">
        <label>opae/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>numa.h</label>
      </node>
      <node id="10">
        <label>opae/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>opae/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>chrono</label>
      </node>
      <node id="33">
        <label>opae/cxx/core/events.h</label>
        <link refid="events_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>fpga-dfl.h</label>
      </node>
      <node id="39">
        <label>thread</label>
      </node>
      <node id="48">
        <label>sys/syscall.h</label>
      </node>
      <node id="28">
        <label>type_traits</label>
      </node>
      <node id="24">
        <label>algorithm</label>
      </node>
      <node id="42">
        <label>regex.h</label>
      </node>
      <node id="22">
        <label>stdio.h</label>
      </node>
      <node id="26">
        <label>cstring</label>
      </node>
      <node id="30">
        <label>memory</label>
      </node>
      <node id="38">
        <label>initializer_list</label>
      </node>
      <node id="4">
        <label>inttypes.h</label>
      </node>
      <node id="16">
        <label>opae/cxx/core/pvalue.h</label>
        <link refid="pvalue_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>samples/cxl_host_exerciser/cxl_he_cache_lpbk_cmd.h</label>
        <link refid="cxl__he__cache__lpbk__cmd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>samples/cxl_host_exerciser/he_cache_test.h</label>
        <link refid="he__cache__test_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>samples/cxl_host_exerciser/cxl_host_exerciser.h</label>
        <link refid="cxl__host__exerciser_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>samples/cxl_host_exerciser/cxl_host_exerciser.cpp</label>
        <link refid="cxl__host__exerciser_8cpp"/>
      </node>
      <node id="5">
        <label>samples/cxl_host_exerciser/cxl_he_cmd.h</label>
        <link refid="cxl__he__cmd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>samples/cxl_host_exerciser/cxl_he_cache_cmd.h</label>
        <link refid="cxl__he__cache__cmd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="unionopae_1_1afu__test_1_1pcie__address" prot="public">opae::afu_test::pcie_address</innerclass>
    <innerclass refid="classopae_1_1afu__test_1_1command" prot="public">opae::afu_test::command</innerclass>
    <innerclass refid="classopae_1_1afu__test_1_1afu" prot="public">opae::afu_test::afu</innerclass>
    <innerclass refid="structopae_1_1afu__test_1_1pcie__address_8fields" prot="public">opae::afu_test::pcie_address.fields</innerclass>
    <innernamespace refid="namespaceopae">opae</innernamespace>
    <innernamespace refid="namespaceopae_1_1afu__test">opae::afu_test</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="he__cache__test_8h_1ae526105af48b18cac6b7376a0da3c646" prot="public" static="no">
        <name>FEATURE_DEV</name>
        <initializer>  &quot;/sys/bus/pci/devices/%s/&quot;                                                   \
  &quot;fpga_region/region*/dfl-fme*/dfl_dev*/feature_id&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="58" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1a0592dba56693fad79136250c11e5a7fe" prot="public" static="no">
        <name>MAX_SIZE</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="62" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1aa1be1a2ea0e3c7d738ca265578184905" prot="public" static="no">
        <name>MAX_HE_CACHE_DEVICE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="63" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1a3edd319ff92fe698be953178dc1cec70" prot="public" static="no">
        <name>PROTECTION</name>
        <initializer>(PROT_READ | PROT_WRITE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="65" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1a965bf45190323481c4a9d3256db5bd16" prot="public" static="no">
        <name>MAP_HUGETLB</name>
        <initializer>0x40000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="68" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1a5117db836c6b4faa5067a54550a9b85e" prot="public" static="no">
        <name>MAP_HUGE_SHIFT</name>
        <initializer>26</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="71" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1a7d6f3bf8995b6bd11b8748940d4ef87d" prot="public" static="no">
        <name>MAP_2M_HUGEPAGE</name>
        <initializer>(0x15 &lt;&lt; <ref refid="he__cache__test_8h_1a5117db836c6b4faa5067a54550a9b85e" kindref="member">MAP_HUGE_SHIFT</ref>) /* 2 ^ 0x15 = 2M */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="74" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1a3f7a3d1c89081e6dc5d7467e30573ddb" prot="public" static="no">
        <name>MAP_1G_HUGEPAGE</name>
        <initializer>(0x1e &lt;&lt; <ref refid="he__cache__test_8h_1a5117db836c6b4faa5067a54550a9b85e" kindref="member">MAP_HUGE_SHIFT</ref>) /* 2 ^ 0x1e = 1G */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="75" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1ac9f31f726d2933782e2efda7136a25fd" prot="public" static="no">
        <name>ADDR</name>
        <initializer>((void *)(0x0UL))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="83" column="10" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1ab255cd279851a87ef34b67cb0af7ae82" prot="public" static="no">
        <name>FLAGS_4K</name>
        <initializer>(MAP_PRIVATE | MAP_ANONYMOUS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="84" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1ad53f34fdc14d8d185326174e248dcff7" prot="public" static="no">
        <name>FLAGS_2M</name>
        <initializer>(<ref refid="he__cache__test_8h_1ab255cd279851a87ef34b67cb0af7ae82" kindref="member">FLAGS_4K</ref> | <ref refid="he__cache__test_8h_1a7d6f3bf8995b6bd11b8748940d4ef87d" kindref="member">MAP_2M_HUGEPAGE</ref> | <ref refid="he__cache__test_8h_1a965bf45190323481c4a9d3256db5bd16" kindref="member">MAP_HUGETLB</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="85" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1af917db11a484b78ed5135fc6b5c3600d" prot="public" static="no">
        <name>FLAGS_1G</name>
        <initializer>(<ref refid="he__cache__test_8h_1ab255cd279851a87ef34b67cb0af7ae82" kindref="member">FLAGS_4K</ref> | <ref refid="he__cache__test_8h_1a3f7a3d1c89081e6dc5d7467e30573ddb" kindref="member">MAP_1G_HUGEPAGE</ref> | <ref refid="he__cache__test_8h_1a965bf45190323481c4a9d3256db5bd16" kindref="member">MAP_HUGETLB</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="86" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1ae40428faaf55c32976e3e9bd81aa1f15" prot="public" static="no">
        <name>KiB</name>
        <param><defname>x</defname></param>
        <initializer>((x)*1024)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="89" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1a66926c4792f38d56984ea477b5b6f45a" prot="public" static="no">
        <name>MiB</name>
        <param><defname>x</defname></param>
        <initializer>((x)*1024 * 1024)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="90" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1a133ac64b3644f67e539bd861f3304540" prot="public" static="no">
        <name>GiB</name>
        <param><defname>x</defname></param>
        <initializer>((x)*1024 * 1024 * 1024)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="91" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1a8275b12b6b8a1a7b5a02114a5e50619f" prot="public" static="no">
        <name>DFL_CXL_CACHE_DSM_BASE</name>
        <initializer>0x030</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="93" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1aeb44d29251e2290eab7037feea413dfe" prot="public" static="no">
        <name>DFL_CXL_CACHE_WR_ADDR_TABLE_DATA</name>
        <initializer>0x068</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="94" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="he__cache__test_8h_1a49cfbb3c7084eabd3317936a5a9bc908" prot="public" static="no">
        <name>DFL_CXL_CACHE_RD_ADDR_TABLE_DATA</name>
        <initializer>0x088</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="95" column="9" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="he__cache__test_8h_1ac205be2172292384dd687b5471a87edd" prot="public" static="no" strong="no">
        <type></type>
        <name>@43</name>
        <enumvalue id="he__cache__test_8h_1ac205be2172292384dd687b5471a87eddaf55f3a57a0940f0e7803957d4bf84b90" prot="public">
          <name>MATCHES_SIZE</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="57" column="1" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="57" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="he__cache__test_8h_1a1e352638b03b00b213cfc2de11524ee4" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* sbdf_pattern</definition>
        <argsstring></argsstring>
        <name>sbdf_pattern</name>
        <initializer>=
    &quot;(([0-9a-fA-F]{4}):)?([0-9a-fA-F]{2}):([0-9a-fA-F]{2})\\.([0-9])&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="54" column="12" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="54" bodyend="-1"/>
        <referencedby refid="unionopae_1_1afu__test_1_1pcie__address_1afb2617e2ed297046217e2a47de73f5ab" compoundref="he__cache__test_8h" startline="195" endline="226">opae::afu_test::pcie_address::parse</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="he__cache__test_8h_1a737440f86e0bcdb1e4b6598f3541e75a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool buffer_allocate</definition>
        <argsstring>(void **addr, uint64_t len, uint32_t numa_node)</argsstring>
        <name>buffer_allocate</name>
        <param>
          <type>void **</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>numa_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="98" column="6" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="98" bodyend="147"/>
        <references refid="he__cache__test_8h_1ac9f31f726d2933782e2efda7136a25fd" compoundref="he__cache__test_8h" startline="83">ADDR</references>
        <references refid="he__cache__test_8h_1af917db11a484b78ed5135fc6b5c3600d" compoundref="he__cache__test_8h" startline="86">FLAGS_1G</references>
        <references refid="he__cache__test_8h_1ad53f34fdc14d8d185326174e248dcff7" compoundref="he__cache__test_8h" startline="85">FLAGS_2M</references>
        <references refid="he__cache__test_8h_1ab255cd279851a87ef34b67cb0af7ae82" compoundref="he__cache__test_8h" startline="84">FLAGS_4K</references>
        <references refid="he__cache__test_8h_1ae40428faaf55c32976e3e9bd81aa1f15" compoundref="he__cache__test_8h" startline="89">KiB</references>
        <references refid="he__cache__test_8h_1a66926c4792f38d56984ea477b5b6f45a" compoundref="he__cache__test_8h" startline="90">MiB</references>
        <references refid="he__cache__test_8h_1a3edd319ff92fe698be953178dc1cec70" compoundref="he__cache__test_8h" startline="65">PROTECTION</references>
        <referencedby refid="classopae_1_1afu__test_1_1afu_1aeae0c9059bf0455e5d238a168f776a16" compoundref="he__cache__test_8h" startline="604" endline="644">opae::afu_test::afu::allocate_cache_read</referencedby>
        <referencedby refid="classopae_1_1afu__test_1_1afu_1ae9f15c76d68e94b445c2c1c21f727d1a" compoundref="he__cache__test_8h" startline="741" endline="786">opae::afu_test::afu::allocate_cache_read_write</referencedby>
        <referencedby refid="classopae_1_1afu__test_1_1afu_1ac2756579ad42be859b696a1880a703a2" compoundref="he__cache__test_8h" startline="673" endline="712">opae::afu_test::afu::allocate_cache_write</referencedby>
        <referencedby refid="classopae_1_1afu__test_1_1afu_1a39e0e1342cd3c8d2e630be07ca787453" compoundref="he__cache__test_8h" startline="530" endline="570">opae::afu_test::afu::allocate_dsm</referencedby>
      </memberdef>
      <memberdef kind="function" id="he__cache__test_8h_1a274404d5e2483f91198c791f3fb35044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool buffer_release</definition>
        <argsstring>(void *addr, uint64_t len)</argsstring>
        <name>buffer_release</name>
        <param>
          <type>void *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="149" column="6" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="149" bodyend="156"/>
        <referencedby refid="classopae_1_1afu__test_1_1afu_1aeae0c9059bf0455e5d238a168f776a16" compoundref="he__cache__test_8h" startline="604" endline="644">opae::afu_test::afu::allocate_cache_read</referencedby>
        <referencedby refid="classopae_1_1afu__test_1_1afu_1ae9f15c76d68e94b445c2c1c21f727d1a" compoundref="he__cache__test_8h" startline="741" endline="786">opae::afu_test::afu::allocate_cache_read_write</referencedby>
        <referencedby refid="classopae_1_1afu__test_1_1afu_1ac2756579ad42be859b696a1880a703a2" compoundref="he__cache__test_8h" startline="673" endline="712">opae::afu_test::afu::allocate_cache_write</referencedby>
        <referencedby refid="classopae_1_1afu__test_1_1afu_1a39e0e1342cd3c8d2e630be07ca787453" compoundref="he__cache__test_8h" startline="530" endline="570">opae::afu_test::afu::allocate_dsm</referencedby>
        <referencedby refid="classopae_1_1afu__test_1_1afu_1adfd7bee969d9fb698179177cb0109fa8" compoundref="he__cache__test_8h" startline="646" endline="671">opae::afu_test::afu::free_cache_read</referencedby>
        <referencedby refid="classopae_1_1afu__test_1_1afu_1adadb65558a3a54ba88e96b872d43b30d" compoundref="he__cache__test_8h" startline="788" endline="820">opae::afu_test::afu::free_cache_read_write</referencedby>
        <referencedby refid="classopae_1_1afu__test_1_1afu_1a4f75d9580bec86a37adc9829e038bcf4" compoundref="he__cache__test_8h" startline="714" endline="739">opae::afu_test::afu::free_cache_write</referencedby>
        <referencedby refid="classopae_1_1afu__test_1_1afu_1a94ab4cd7eb2f5abf7f9c076c9cd3b2e4" compoundref="he__cache__test_8h" startline="572" endline="598">opae::afu_test::afu::free_dsm</referencedby>
      </memberdef>
      <memberdef kind="function" id="he__cache__test_8h_1af913d8c3d40a106a02ea4a7133fbbea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sysfs_read_u64</definition>
        <argsstring>(const char *path, uint64_t *value)</argsstring>
        <name>sysfs_read_u64</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/cxl_host_exerciser/he_cache_test.h" line="158" column="6" bodyfile="samples/cxl_host_exerciser/he_cache_test.h" bodystart="158" bodyend="171"/>
        <referencedby refid="classopae_1_1afu__test_1_1afu_1adacf6b9b42c1b28c391d8cc4d93023ca" compoundref="he__cache__test_8h" startline="306" endline="374">opae::afu_test::afu::find_dev_feature</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright(c)<sp/>2023,<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/><sp/>and<sp/><sp/>use<sp/><sp/>in<sp/>source<sp/><sp/>and<sp/><sp/>binary<sp/><sp/>forms,<sp/><sp/>with<sp/><sp/>or<sp/><sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/><sp/>source<sp/>code<sp/><sp/>must<sp/>retain<sp/>the<sp/><sp/>above<sp/>copyright<sp/>notice,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/><sp/>of<sp/>Intel<sp/>Corporation<sp/><sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>to<sp/><sp/>endorse<sp/>or<sp/>promote<sp/><sp/>products<sp/>derived<sp/><sp/>from<sp/>this<sp/><sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/><sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/><sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/><sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABLE<sp/><sp/>FOR<sp/><sp/>ANY<sp/><sp/>DIRECT,<sp/><sp/>INDIRECT,<sp/><sp/>INCIDENTAL,<sp/><sp/>SPECIAL,<sp/><sp/>EXEMPLARY,<sp/><sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/><sp/>DAMAGES<sp/><sp/>(INCLUDING,<sp/><sp/>BUT<sp/><sp/>NOT<sp/>LIMITED<sp/><sp/>TO,<sp/><sp/>PROCUREMENT<sp/><sp/>OF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/><sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/><sp/>OR<sp/>BUSINESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERRUPTION)<sp/><sp/>HOWEVER<sp/>CAUSED<sp/><sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/><sp/>OF<sp/>LIABILITY,<sp/><sp/>WHETHER<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONTRACT,<sp/><sp/>STRICT<sp/>LIABILITY,<sp/><sp/>OR<sp/>TORT<sp/><sp/>(INCLUDING<sp/>NEGLIGENCE<sp/><sp/>OR<sp/>OTHERWISE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/><sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;future&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glob.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numa.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="core_8h" kindref="compound">opae/cxx/core.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;regex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/ioctl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/syscall.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CLI/CLI.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/spdlog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/sinks/stdout_color_sinks.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/sinks/basic_file_sink.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="core_8h" kindref="compound">opae/cxx/core.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fpga-dfl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="he__cache__test_8h_1a1e352638b03b00b213cfc2de11524ee4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="he__cache__test_8h_1a1e352638b03b00b213cfc2de11524ee4" kindref="member">sbdf_pattern</ref><sp/>=</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(([0-9a-fA-F]{4}):)?([0-9a-fA-F]{2}):([0-9a-fA-F]{2})\\.([0-9])&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="he__cache__test_8h_1ac205be2172292384dd687b5471a87eddaf55f3a57a0940f0e7803957d4bf84b90" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="he__cache__test_8h_1ac205be2172292384dd687b5471a87eddaf55f3a57a0940f0e7803957d4bf84b90" kindref="member">MATCHES_SIZE</ref><sp/>=<sp/>6<sp/>};</highlight></codeline>
<codeline lineno="58" refid="he__cache__test_8h_1ae526105af48b18cac6b7376a0da3c646" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FEATURE_DEV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/>&quot;/sys/bus/pci/devices/%s/&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>&quot;fpga_region/region*/dfl-fme*/dfl_dev*/feature_id&quot;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="he__cache__test_8h_1a0592dba56693fad79136250c11e5a7fe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SIZE<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="he__cache__test_8h_1aa1be1a2ea0e3c7d738ca265578184905" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_HE_CACHE_DEVICE<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="he__cache__test_8h_1a3edd319ff92fe698be953178dc1cec70" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROTECTION<sp/>(PROT_READ<sp/>|<sp/>PROT_WRITE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MAP_HUGETLB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="he__cache__test_8h_1a965bf45190323481c4a9d3256db5bd16" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAP_HUGETLB<sp/>0x40000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MAP_HUGE_SHIFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="he__cache__test_8h_1a5117db836c6b4faa5067a54550a9b85e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAP_HUGE_SHIFT<sp/>26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="he__cache__test_8h_1a7d6f3bf8995b6bd11b8748940d4ef87d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAP_2M_HUGEPAGE<sp/>(0x15<sp/>&lt;&lt;<sp/>MAP_HUGE_SHIFT)<sp/></highlight><highlight class="comment">/*<sp/>2<sp/>^<sp/>0x15<sp/>=<sp/>2M<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="he__cache__test_8h_1a3f7a3d1c89081e6dc5d7467e30573ddb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAP_1G_HUGEPAGE<sp/>(0x1e<sp/>&lt;&lt;<sp/>MAP_HUGE_SHIFT)<sp/></highlight><highlight class="comment">/*<sp/>2<sp/>^<sp/>0x1e<sp/>=<sp/>1G<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__ia64__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADDR<sp/>((void<sp/>*)(0x8000000000000000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAGS_4K<sp/>(MAP_PRIVATE<sp/>|<sp/>MAP_ANONYMOUS<sp/>|<sp/>MAP_FIXED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAGS_2M<sp/>(FLAGS_4K<sp/>|<sp/>MAP_2M_HUGEPAGE<sp/>|<sp/>MAP_HUGETLB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAGS_1G<sp/>(FLAGS_4K<sp/>|<sp/>MAP_1G_HUGEPAGE<sp/>|<sp/>MAP_HUGETLB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="he__cache__test_8h_1ac9f31f726d2933782e2efda7136a25fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADDR<sp/>((void<sp/>*)(0x0UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="he__cache__test_8h_1ab255cd279851a87ef34b67cb0af7ae82" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAGS_4K<sp/>(MAP_PRIVATE<sp/>|<sp/>MAP_ANONYMOUS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="he__cache__test_8h_1ad53f34fdc14d8d185326174e248dcff7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAGS_2M<sp/>(FLAGS_4K<sp/>|<sp/>MAP_2M_HUGEPAGE<sp/>|<sp/>MAP_HUGETLB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="he__cache__test_8h_1af917db11a484b78ed5135fc6b5c3600d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAGS_1G<sp/>(FLAGS_4K<sp/>|<sp/>MAP_1G_HUGEPAGE<sp/>|<sp/>MAP_HUGETLB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="he__cache__test_8h_1ae40428faaf55c32976e3e9bd81aa1f15" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KiB(x)<sp/>((x)*1024)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="he__cache__test_8h_1a66926c4792f38d56984ea477b5b6f45a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MiB(x)<sp/>((x)*1024<sp/>*<sp/>1024)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="he__cache__test_8h_1a133ac64b3644f67e539bd861f3304540" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GiB(x)<sp/>((x)*1024<sp/>*<sp/>1024<sp/>*<sp/>1024)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="he__cache__test_8h_1a8275b12b6b8a1a7b5a02114a5e50619f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DFL_CXL_CACHE_DSM_BASE<sp/>0x030</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="he__cache__test_8h_1aeb44d29251e2290eab7037feea413dfe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DFL_CXL_CACHE_WR_ADDR_TABLE_DATA<sp/>0x068</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="he__cache__test_8h_1a49cfbb3c7084eabd3317936a5a9bc908" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DFL_CXL_CACHE_RD_ADDR_TABLE_DATA<sp/>0x088</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="he__cache__test_8h_1a737440f86e0bcdb1e4b6598f3541e75a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="he__cache__test_8h_1a737440f86e0bcdb1e4b6598f3541e75a" kindref="member">buffer_allocate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>addr,<sp/>uint64_t<sp/>len,<sp/>uint32_t<sp/>numa_node)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>addr_local<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>status<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mask[4];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits_per_UL<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)<sp/>mask[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>mask[numa_node<sp/>/<sp/>bits_per_UL]<sp/>|=<sp/>1UL<sp/>&lt;&lt;<sp/>(numa_node<sp/>%<sp/>bits_per_UL);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/><ref refid="he__cache__test_8h_1a66926c4792f38d56984ea477b5b6f45a" kindref="member">MiB</ref>(2))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr_local<sp/>=<sp/>mmap(<ref refid="he__cache__test_8h_1ac9f31f726d2933782e2efda7136a25fd" kindref="member">ADDR</ref>,<sp/>len,<sp/><ref refid="he__cache__test_8h_1a3edd319ff92fe698be953178dc1cec70" kindref="member">PROTECTION</ref>,<sp/><ref refid="he__cache__test_8h_1af917db11a484b78ed5135fc6b5c3600d" kindref="member">FLAGS_1G</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/><ref refid="he__cache__test_8h_1ae40428faaf55c32976e3e9bd81aa1f15" kindref="member">KiB</ref>(4))</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr_local<sp/>=<sp/>mmap(<ref refid="he__cache__test_8h_1ac9f31f726d2933782e2efda7136a25fd" kindref="member">ADDR</ref>,<sp/>len,<sp/><ref refid="he__cache__test_8h_1a3edd319ff92fe698be953178dc1cec70" kindref="member">PROTECTION</ref>,<sp/><ref refid="he__cache__test_8h_1ad53f34fdc14d8d185326174e248dcff7" kindref="member">FLAGS_2M</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr_local<sp/>=<sp/>mmap(<ref refid="he__cache__test_8h_1ac9f31f726d2933782e2efda7136a25fd" kindref="member">ADDR</ref>,<sp/>len,<sp/><ref refid="he__cache__test_8h_1a3edd319ff92fe698be953178dc1cec70" kindref="member">PROTECTION</ref>,<sp/><ref refid="he__cache__test_8h_1ab255cd279851a87ef34b67cb0af7ae82" kindref="member">FLAGS_4K</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr_local<sp/>==<sp/>MAP_FAILED)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>ENOMEM)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/><ref refid="he__cache__test_8h_1a66926c4792f38d56984ea477b5b6f45a" kindref="member">MiB</ref>(2))</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>allocate<sp/>buffer<sp/>(no<sp/>free<sp/>1<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GiB<sp/>huge<sp/>pages)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/><ref refid="he__cache__test_8h_1ae40428faaf55c32976e3e9bd81aa1f15" kindref="member">KiB</ref>(4))</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>allocate<sp/>buffer<sp/>(no<sp/>free<sp/>2<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MiB<sp/>huge<sp/>pages)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>allocate<sp/>buffer<sp/>(out<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;memory)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CXL<sp/>cache<sp/>mmap<sp/>failed:&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>strerror(errno)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr_local<sp/>==<sp/>NULL)<sp/>{<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>mmap&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>syscall(__NR_mbind,<sp/>addr_local,<sp/>len,<sp/>2,<sp/>&amp;mask,<sp/>numa_node<sp/>+<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;buffer_allocate():<sp/>unable<sp/>to<sp/>mbind:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>strerror(errno)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>*addr<sp/>=<sp/>addr_local;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="he__cache__test_8h_1a274404d5e2483f91198c791f3fb35044" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="he__cache__test_8h_1a274404d5e2483f91198c791f3fb35044" kindref="member">buffer_release</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>addr,<sp/>uint64_t<sp/>len)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(munmap(addr,<sp/>len))<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CXL<sp/>cache<sp/>unmap<sp/>failed:&quot;</highlight><highlight class="normal">,<sp/>strerror(errno);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="he__cache__test_8h_1af913d8c3d40a106a02ea4a7133fbbea9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="he__cache__test_8h_1af913d8c3d40a106a02ea4a7133fbbea9" kindref="member">sysfs_read_u64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/>uint64_t<sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>ifstream<sp/>fs;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>fs.open(path,<sp/>ios::in);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>std::string<sp/>s;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fs.is_open())<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(fs,<sp/>line);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>std::stoul(line,<sp/>0,<sp/>16);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>fs.close();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopae" kindref="compound">opae</ref><sp/>{</highlight></codeline>
<codeline lineno="174" refid="namespaceopae_1_1afu__test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">afu_test<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="178" refid="namespaceopae_1_1afu__test_1a51c524d228e9ad342ed2e1a45efe741b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceopae_1_1afu__test_1a51c524d228e9ad342ed2e1a45efe741b" kindref="member">parse_match_int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/>regmatch_t<sp/>m,<sp/>T<sp/>&amp;v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radix<sp/>=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.rm_so<sp/>==<sp/>-1<sp/>||<sp/>m.rm_eo<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/>std::strtoul(s<sp/>+<sp/>m.rm_so,<sp/>NULL,<sp/>radix);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errno<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="unionopae_1_1afu__test_1_1pcie__address" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionopae_1_1afu__test_1_1pcie__address" kindref="compound">pcie_address</ref><sp/>{</highlight></codeline>
<codeline lineno="187" refid="structopae_1_1afu__test_1_1pcie__address_8fields" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>function<sp/>:<sp/>3;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>device<sp/>:<sp/>5;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bus<sp/>:<sp/>8;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>domain<sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="192" refid="unionopae_1_1afu__test_1_1pcie__address_1a7a062970db60a7bba46e10fd459eeb43" refkind="member"><highlight class="normal"><sp/><sp/>}<sp/>fields;</highlight></codeline>
<codeline lineno="193" refid="unionopae_1_1afu__test_1_1pcie__address_1ab3ea036b3be673377eb47e8f6bdc5e5f" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="unionopae_1_1afu__test_1_1pcie__address_1ab3ea036b3be673377eb47e8f6bdc5e5f" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="unionopae_1_1afu__test_1_1pcie__address_1afb2617e2ed297046217e2a47de73f5ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="unionopae_1_1afu__test_1_1pcie__address" kindref="compound">pcie_address</ref><sp/><ref refid="unionopae_1_1afu__test_1_1pcie__address_1afb2617e2ed297046217e2a47de73f5ab" kindref="member">parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>deleter<sp/>=<sp/>[&amp;](regex_t<sp/>*r)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regfree(r);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;regex_t,<sp/>decltype(deleter)&gt;<sp/>re(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>regex_t,<sp/>deleter);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>regmatch_t<sp/>matches[<ref refid="he__cache__test_8h_1ac205be2172292384dd687b5471a87eddaf55f3a57a0940f0e7803957d4bf84b90" kindref="member">MATCHES_SIZE</ref>];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reg_res<sp/>=<sp/>regcomp(re.get(),<sp/><ref refid="he__cache__test_8h_1a1e352638b03b00b213cfc2de11524ee4" kindref="member">sbdf_pattern</ref>,<sp/>REG_EXTENDED<sp/>|<sp/>REG_ICASE);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_res)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>compile<sp/>regex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>reg_res<sp/>=<sp/>regexec(re.get(),<sp/>s,<sp/><ref refid="he__cache__test_8h_1ac205be2172292384dd687b5471a87eddaf55f3a57a0940f0e7803957d4bf84b90" kindref="member">MATCHES_SIZE</ref>,<sp/>matches,<sp/>0);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_res)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;pcie<sp/>address<sp/>not<sp/>valid<sp/>format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>domain,<sp/>bus,<sp/>device,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceopae_1_1afu__test_1a51c524d228e9ad342ed2e1a45efe741b" kindref="member">parse_match_int</ref>(s,<sp/>matches[2],<sp/>domain,<sp/>16))</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>domain<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceopae_1_1afu__test_1a51c524d228e9ad342ed2e1a45efe741b" kindref="member">parse_match_int</ref>(s,<sp/>matches[3],<sp/>bus,<sp/>16))</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;error<sp/>parsing<sp/>pcie<sp/>address&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceopae_1_1afu__test_1a51c524d228e9ad342ed2e1a45efe741b" kindref="member">parse_match_int</ref>(s,<sp/>matches[4],<sp/>device,<sp/>16))</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;error<sp/>parsing<sp/>pcie<sp/>address&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceopae_1_1afu__test_1a51c524d228e9ad342ed2e1a45efe741b" kindref="member">parse_match_int</ref>(s,<sp/>matches[5],<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;error<sp/>parsing;<sp/>pcie<sp/>address&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionopae_1_1afu__test_1_1pcie__address" kindref="compound">pcie_address</ref><sp/>a;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>a.<ref refid="unionopae_1_1afu__test_1_1pcie__address_1a7a062970db60a7bba46e10fd459eeb43" kindref="member">fields</ref>.domain<sp/>=<sp/>domain;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>a.<ref refid="unionopae_1_1afu__test_1_1pcie__address_1a7a062970db60a7bba46e10fd459eeb43" kindref="member">fields</ref>.bus<sp/>=<sp/>bus;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>a.<ref refid="unionopae_1_1afu__test_1_1pcie__address_1a7a062970db60a7bba46e10fd459eeb43" kindref="member">fields</ref>.device<sp/>=<sp/>device;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>a.<ref refid="unionopae_1_1afu__test_1_1pcie__address_1a7a062970db60a7bba46e10fd459eeb43" kindref="member">fields</ref>.function<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal">};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">afu;<sp/></highlight><highlight class="comment">//<sp/>forward<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classopae_1_1afu__test_1_1command" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopae_1_1afu__test_1_1command" kindref="compound">command</ref><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233" refid="classopae_1_1afu__test_1_1command_1a11a258a1fa5a99a5be9bb34a87c48f41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;command&gt;<sp/><ref refid="classopae_1_1afu__test_1_1command_1a11a258a1fa5a99a5be9bb34a87c48f41" kindref="member">ptr_t</ref>;</highlight></codeline>
<codeline lineno="234" refid="classopae_1_1afu__test_1_1command_1a07de34c2af7ef6ae3c0e528888365b0c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classopae_1_1afu__test_1_1command_1a07de34c2af7ef6ae3c0e528888365b0c" kindref="member">command</ref>()<sp/>:<sp/>running_(true)<sp/>{}</highlight></codeline>
<codeline lineno="235" refid="classopae_1_1afu__test_1_1command_1a04e764764cc62327e60d94840590ee73" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1command_1a04e764764cc62327e60d94840590ee73" kindref="member">~command</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="236" refid="classopae_1_1afu__test_1_1command_1a2892a3d443d007a55cbfe9ec93835052" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classopae_1_1afu__test_1_1command_1a2892a3d443d007a55cbfe9ec93835052" kindref="member">name</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237" refid="classopae_1_1afu__test_1_1command_1a064a25924cdd32c14f4a68694f924d5e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classopae_1_1afu__test_1_1command_1a064a25924cdd32c14f4a68694f924d5e" kindref="member">description</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="238" refid="classopae_1_1afu__test_1_1command_1a18fe26fd1da4bec29da4fbfbeb172bbd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1command_1a18fe26fd1da4bec29da4fbfbeb172bbd" kindref="member">run</ref>(<ref refid="classopae_1_1afu__test_1_1afu" kindref="compound">afu</ref><sp/>*<ref refid="classopae_1_1afu__test_1_1afu" kindref="compound">afu</ref>,<sp/>CLI::App<sp/>*<ref refid="hssi_8cpp_1a7ccd62f1083f322e0d1dfaa9c23ecb88" kindref="member">app</ref>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="239" refid="classopae_1_1afu__test_1_1command_1aa91365cda1ee7a6049d8a5403b2e15e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1command_1aa91365cda1ee7a6049d8a5403b2e15e6" kindref="member">add_options</ref>(CLI::App<sp/>*<ref refid="hssi_8cpp_1a7ccd62f1083f322e0d1dfaa9c23ecb88" kindref="member">app</ref>)<sp/>{<sp/>(void)<ref refid="hssi_8cpp_1a7ccd62f1083f322e0d1dfaa9c23ecb88" kindref="member">app</ref>;<sp/>}</highlight></codeline>
<codeline lineno="240" refid="classopae_1_1afu__test_1_1command_1a51d5c7afb132598121e20be5b0eab5fb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classopae_1_1afu__test_1_1command_1a51d5c7afb132598121e20be5b0eab5fb" kindref="member">afu_id</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="classopae_1_1afu__test_1_1command_1ad9698a8b5ee31447582c286a115724a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="classopae_1_1afu__test_1_1command_1ad9698a8b5ee31447582c286a115724a7" kindref="member">featureid</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="243" refid="classopae_1_1afu__test_1_1command_1ac239529df959302ece72a162262c6c32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="classopae_1_1afu__test_1_1command_1ac239529df959302ece72a162262c6c32" kindref="member">guidl</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244" refid="classopae_1_1afu__test_1_1command_1a7b9e6753ab014e81bb4dd7d1ddbaad85" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="classopae_1_1afu__test_1_1command_1a7b9e6753ab014e81bb4dd7d1ddbaad85" kindref="member">guidh</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classopae_1_1afu__test_1_1command_1a36d9eff18f795e0bbf60d3e213b1a81f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1command_1a36d9eff18f795e0bbf60d3e213b1a81f" kindref="member">running</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>running_;<sp/>}</highlight></codeline>
<codeline lineno="247" refid="classopae_1_1afu__test_1_1command_1ab5200927c95fe844db13588f9288bf87" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1command_1ab5200927c95fe844db13588f9288bf87" kindref="member">stop</ref>()<sp/>{<sp/>running_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250" refid="classopae_1_1afu__test_1_1command_1a38b260d3448bfd7f2368b2ef585414be" refkind="member"><highlight class="normal"><sp/><sp/>std::atomic&lt;bool&gt;<sp/><ref refid="classopae_1_1afu__test_1_1command_1a38b260d3448bfd7f2368b2ef585414be" kindref="member">running_</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPDLOG_VERSION<sp/>&gt;=<sp/>10900</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>spdlog<sp/>version<sp/>1.9.0<sp/>defines<sp/>SPDLOG_LEVEL_NAMES<sp/>as<sp/>an<sp/>array<sp/>of<sp/>string_view_t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>vector<sp/>of<sp/>std::string<sp/>to<sp/>be<sp/>used<sp/>in<sp/>CLI::IsMember().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="namespaceopae_1_1afu__test_1a86ee03f14e97bbb40476aacd85cc9868" kindref="member">spdlog_levels</ref>()<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>std::vector&lt;spdlog::string_view_t&gt;<sp/>levels_view<sp/>=<sp/>SPDLOG_LEVEL_NAMES;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>levels_str(levels_view.size());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>std::transform(levels_view.begin(),<sp/>levels_view.end(),<sp/>levels_str.begin(),</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](spdlog::string_view_t<sp/>sv)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>std::string(sv.data(),<sp/>sv.size());</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>levels_str;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="namespaceopae_1_1afu__test_1a86ee03f14e97bbb40476aacd85cc9868" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="namespaceopae_1_1afu__test_1a86ee03f14e97bbb40476aacd85cc9868" kindref="member">spdlog_levels</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPDLOG_LEVEL_NAMES;<sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>SPDLOG_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="classopae_1_1afu__test_1_1afu" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopae_1_1afu__test_1_1afu" kindref="compound">afu</ref><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="271" refid="classopae_1_1afu__test_1_1afu_1a4461ef32b1ec7b4bd81614a6491cb23e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*command_fn)(<ref refid="classopae_1_1afu__test_1_1afu" kindref="compound">afu</ref><sp/>*<ref refid="classopae_1_1afu__test_1_1afu" kindref="compound">afu</ref>,<sp/>CLI::App<sp/>*<ref refid="hssi_8cpp_1a7ccd62f1083f322e0d1dfaa9c23ecb88" kindref="member">app</ref>);</highlight></codeline>
<codeline lineno="272" refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24" kindref="member">exit_codes</ref><sp/>{</highlight></codeline>
<codeline lineno="273" refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24acbd7e559c7a281178598e73f9df0934f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="274" refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24a04ee7cb880c09f91baf6c572a753154d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24a04ee7cb880c09f91baf6c572a753154d" kindref="member">not_run</ref>,</highlight></codeline>
<codeline lineno="275" refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24a5b5cf74a6eb73cf60867b2f81a810624" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24a5b5cf74a6eb73cf60867b2f81a810624" kindref="member">not_found</ref>,</highlight></codeline>
<codeline lineno="276" refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24a0a753cba76e13abc6b16f98745712372" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24a0a753cba76e13abc6b16f98745712372" kindref="member">no_access</ref>,</highlight></codeline>
<codeline lineno="277" refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24a8b98ec99513ca15fc4c00d45ccd64fa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24a8b98ec99513ca15fc4c00d45ccd64fa5" kindref="member">exception</ref>,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>error</highlight></codeline>
<codeline lineno="279" refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24ab553cc480865cc051b212c1cd0150238" refkind="member"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="classopae_1_1afu__test_1_1afu_1a845e58d643b7c868c6dc84277dc88a81" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classopae_1_1afu__test_1_1afu_1a845e58d643b7c868c6dc84277dc88a81" kindref="member">afu</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*afu_id<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*log_level<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>name_(name),<sp/>afu_id_(afu_id<sp/>?<sp/>afu_id<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>app_(name_),<sp/>pci_addr_(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_level_(log_level<sp/>?<sp/>log_level<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">),<sp/>timeout_msec_(60000),</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_command_(nullptr)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!afu_id_.empty())</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>app_.add_option(</highlight><highlight class="stringliteral">&quot;-g,--guid&quot;</highlight><highlight class="normal">,<sp/>afu_id_,<sp/></highlight><highlight class="stringliteral">&quot;GUID&quot;</highlight><highlight class="normal">)-&gt;default_str(afu_id_);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>app_.add_option(</highlight><highlight class="stringliteral">&quot;-p,--pci-address&quot;</highlight><highlight class="normal">,<sp/>pci_addr_,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[&lt;domain&gt;:]&lt;bus&gt;:&lt;device&gt;.&lt;function&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>app_.add_option(</highlight><highlight class="stringliteral">&quot;-l,--log-level&quot;</highlight><highlight class="normal">,<sp/>log_level_,<sp/></highlight><highlight class="stringliteral">&quot;stdout<sp/>logging<sp/>level&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;default_str(log_level_)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;check(CLI::IsMember(<ref refid="namespaceopae_1_1afu__test_1a86ee03f14e97bbb40476aacd85cc9868" kindref="member">spdlog_levels</ref>()));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>app_.add_option(</highlight><highlight class="stringliteral">&quot;-t,--timeout&quot;</highlight><highlight class="normal">,<sp/>timeout_msec_,<sp/></highlight><highlight class="stringliteral">&quot;test<sp/>timeout<sp/>(msec)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;default_str(std::to_string(timeout_msec_));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296" refid="classopae_1_1afu__test_1_1afu_1a9f5b3668c254e92f8f2506916f97a232" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1a9f5b3668c254e92f8f2506916f97a232" kindref="member">~afu</ref>()<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd_<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd_);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logger_)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::drop(logger_-&gt;name());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="classopae_1_1afu__test_1_1afu_1ad3e39bbb116a49dce6c1043755ebf2df" refkind="member"><highlight class="normal"><sp/><sp/>CLI::App<sp/>&amp;<ref refid="classopae_1_1afu__test_1_1afu_1ad3e39bbb116a49dce6c1043755ebf2df" kindref="member">cli</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>app_;<sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classopae_1_1afu__test_1_1afu_1adacf6b9b42c1b28c391d8cc4d93023ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1adacf6b9b42c1b28c391d8cc4d93023ca" kindref="member">find_dev_feature</ref>()<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>glob_t<sp/>pglob;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>glob_t<sp/>dev_pglob;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>feature_path[<ref refid="he__cache__test_8h_1a0592dba56693fad79136250c11e5a7fe" kindref="member">MAX_SIZE</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gres<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dev_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pci_addr_.empty())<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snprintf(feature_path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(feature_path),<sp/><ref refid="he__cache__test_8h_1ae526105af48b18cac6b7376a0da3c646" kindref="member">FEATURE_DEV</ref>,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pci_addr_.c_str())<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;snprintf<sp/>buffer<sp/>overflow&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snprintf(feature_path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(feature_path),<sp/><ref refid="he__cache__test_8h_1ae526105af48b18cac6b7376a0da3c646" kindref="member">FEATURE_DEV</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*:*:*.*&quot;</highlight><highlight class="normal">)<sp/>&lt;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;snprintf<sp/>buffer<sp/>overflow&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>gres<sp/>=<sp/>glob(feature_path,<sp/>0,<sp/>NULL,<sp/>&amp;pglob);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gres)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>pattern<sp/>match&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>feature_path<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>globfree(&amp;pglob);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pglob.gl_pathc;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/><ref refid="he__cache__test_8h_1af913d8c3d40a106a02ea4a7133fbbea9" kindref="member">sysfs_read_u64</ref>(pglob.gl_pathv[i],<sp/>&amp;value);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!retval)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>sysfs<sp/>value&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_command()-&gt;featureid()<sp/>==<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str(pglob.gl_pathv[i]);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>substr_dev(str.substr(0,<sp/>str.rfind(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substr_dev.append(</highlight><highlight class="stringliteral">&quot;/dfl-cxl-cache/dfl-cxl-cache*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gres<sp/>=<sp/>glob(substr_dev.c_str(),<sp/>GLOB_NOSORT,<sp/>NULL,<sp/>&amp;dev_pglob);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gres)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>pattern<sp/>match&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>substr_dev.c_str()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>strerror(errno)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globfree(&amp;dev_pglob);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str1(dev_pglob.gl_pathv[0]);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globfree(&amp;dev_pglob);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev_path_[dev_index].append(</highlight><highlight class="stringliteral">&quot;/dev&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev_path_[dev_index].append(str1.substr(str1.rfind(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">),<sp/>16));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev_index++;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pglob.gl_pathv)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globfree(&amp;pglob);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev_index<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="classopae_1_1afu__test_1_1afu_1aba7d799aad72ececb2b9eb68c8919353" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1aba7d799aad72ececb2b9eb68c8919353" kindref="member">unmap_mmio</ref>()<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mmio_base_)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(munmap(mmio_base_,<sp/>rinfo_.size)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>unmap<sp/>MMIO:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="classopae_1_1afu__test_1_1afu_1ad08ddd74d13e31d4aacf22c87b81fc6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1ad08ddd74d13e31d4aacf22c87b81fc6e" kindref="member">map_mmio</ref>()<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_v;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>user_v<sp/>=<sp/>mmap(NULL,<sp/>rinfo_.size,<sp/>PROT_READ<sp/>|<sp/>PROT_WRITE,<sp/>MAP_SHARED,<sp/>fd_,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rinfo_.offset);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user_v<sp/>==<sp/>MAP_FAILED)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>map<sp/>MMIO:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>mmio_base_<sp/>=<sp/>(uint8_t<sp/>*)user_v;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="classopae_1_1afu__test_1_1afu_1a7af4fff79b88676402bff5f5274b941d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1a7af4fff79b88676402bff5f5274b941d" kindref="member">open_handle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dev)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;CXL<sp/>device:{0}&quot;</highlight><highlight class="normal">,<sp/>dev);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>fd_<sp/>=<sp/>open(dev,<sp/>O_RDWR);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd_<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;open()<sp/>failed:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;rinfo_,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rinfo_));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>rinfo_.argsz<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rinfo_);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ioctl(fd_,<sp/>DFL_CXL_CACHE_GET_REGION_INFO,<sp/>&amp;rinfo_);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ioctl()<sp/>DFL_CXL_CACHE_GET_REGION_INFO<sp/>failed:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close(fd_);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;MMIO<sp/>region<sp/>flags:0x:{0:x}<sp/>size:0x<sp/>{1:x}<sp/>offset:0x<sp/>{2:x}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rinfo_.flags,<sp/>rinfo_.size,<sp/>rinfo_.offset);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!map_mmio())<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;mmap<sp/>failed:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close(fd_);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*u64<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)mmio_base_;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DFH<sp/><sp/><sp/><sp/><sp/>:<sp/>0x:{0:X}&quot;</highlight><highlight class="normal">,<sp/>*u64);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DFH<sp/>+<sp/>8<sp/>:<sp/>0x:{0:X}&quot;</highlight><highlight class="normal">,<sp/>*(u64<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DFH<sp/>+<sp/>16:<sp/>0x:{0:X}&quot;</highlight><highlight class="normal">,<sp/>*(u64<sp/>+<sp/>2));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DFH<sp/>+<sp/>24:<sp/>0x:{0:X}&quot;</highlight><highlight class="normal">,<sp/>*(u64<sp/>+<sp/>3));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exit_codes::not_run;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="classopae_1_1afu__test_1_1afu_1acacf9a109b0c623a7cee83acae4582cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1acacf9a109b0c623a7cee83acae4582cf" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!commands_.empty())</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>app_.require_subcommand();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>CLI11_PARSE(app_,<sp/>argc,<sp/>argv);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopae_1_1afu__test_1_1command_1a11a258a1fa5a99a5be9bb34a87c48f41" kindref="member">command::ptr_t</ref><sp/>test(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>CLI::App<sp/>*<ref refid="hssi_8cpp_1a7ccd62f1083f322e0d1dfaa9c23ecb88" kindref="member">app</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>kv<sp/>:<sp/>commands_)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*kv.first)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hssi_8cpp_1a7ccd62f1083f322e0d1dfaa9c23ecb88" kindref="member">app</ref><sp/>=<sp/>kv.first;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test<sp/>=<sp/>kv.second;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>command<sp/>specified\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exit_codes::not_run;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>console_sink<sp/>=<sp/>std::make_shared&lt;spdlog::sinks::stdout_color_sink_mt&gt;();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_<sp/>=<sp/>std::make_shared&lt;spdlog::logger&gt;(test-&gt;name(),<sp/>console_sink);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::register_logger(logger_);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;set_level(spdlog::level::from_str(log_level_));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>current_command_<sp/>=<sp/>test;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find_dev_feature()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>feature&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exit_codes::exception;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>CLI::Option*<sp/>opt<sp/>=<sp/><ref refid="hssi_8cpp_1a7ccd62f1083f322e0d1dfaa9c23ecb88" kindref="member">app</ref>-&gt;get_option_no_throw(</highlight><highlight class="stringliteral">&quot;--device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt<sp/><sp/>&amp;&amp;<sp/>opt-&gt;count()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev_index<sp/>=<sp/>stoi(opt-&gt;results().at(0));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>open_handle(dev_path_[dev_index].c_str());</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>exit_codes::not_run)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>run(<ref refid="hssi_8cpp_1a7ccd62f1083f322e0d1dfaa9c23ecb88" kindref="member">app</ref>,<sp/>test);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="classopae_1_1afu__test_1_1afu_1a2b3d816eac276d4ec1aaa6e9a632b32d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1a2b3d816eac276d4ec1aaa6e9a632b32d" kindref="member">run</ref>(CLI::App<sp/>*<ref refid="hssi_8cpp_1a7ccd62f1083f322e0d1dfaa9c23ecb88" kindref="member">app</ref>,<sp/><ref refid="classopae_1_1afu__test_1_1command_1a11a258a1fa5a99a5be9bb34a87c48f41" kindref="member">command::ptr_t</ref><sp/>test)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>exit_codes::not_run;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>current_command_<sp/>=<sp/>test;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::future&lt;int&gt;<sp/>f<sp/>=<sp/>std::async(std::launch::async,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>test,<sp/><ref refid="hssi_8cpp_1a7ccd62f1083f322e0d1dfaa9c23ecb88" kindref="member">app</ref>]()<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test-&gt;run(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="hssi_8cpp_1a7ccd62f1083f322e0d1dfaa9c23ecb88" kindref="member">app</ref>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>f.wait_for(std::chrono::milliseconds(timeout_msec_));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>std::future_status::timeout)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>test<sp/>timed<sp/>out&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_command_-&gt;stop();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;timeout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>f.get();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>exit_codes::exception;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>current_command_.reset();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="classopae_1_1afu__test_1_1afu_1a66b79e6a2f6e58f8379823f0d675a139" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>CLI::App<sp/>*<ref refid="classopae_1_1afu__test_1_1afu_1a66b79e6a2f6e58f8379823f0d675a139" kindref="member">register_command</ref>()<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopae_1_1afu__test_1_1command_1a11a258a1fa5a99a5be9bb34a87c48f41" kindref="member">command::ptr_t</ref><sp/>cmd(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T());</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sub<sp/>=<sp/>app_.add_subcommand(cmd-&gt;name(),<sp/>cmd-&gt;description());</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd-&gt;add_options(sub);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>commands_[sub]<sp/>=<sp/>cmd;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="classopae_1_1afu__test_1_1afu_1a148377c272b94f4e884683bcbcdaf289" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classopae_1_1afu__test_1_1afu_1a148377c272b94f4e884683bcbcdaf289" kindref="member">read64</ref>(uint32_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>value<sp/>=<sp/>*((uint64_t<sp/>*)(mmio_base_<sp/>+<sp/>offset));</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="classopae_1_1afu__test_1_1afu_1a81608240a2e29efbe8a6e60aee74ed60" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1a81608240a2e29efbe8a6e60aee74ed60" kindref="member">write64</ref>(uint32_t<sp/>offset,<sp/>uint64_t<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>*((uint64_t<sp/>*)(mmio_base_<sp/>+<sp/>offset))<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="classopae_1_1afu__test_1_1afu_1aec158ebde0d3442da9a1bf4979e73a0d" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="classopae_1_1afu__test_1_1afu_1aec158ebde0d3442da9a1bf4979e73a0d" kindref="member">read32</ref>(uint32_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>value<sp/>=<sp/>*((uint64_t<sp/>*)(mmio_base_<sp/>+<sp/>offset));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523" refid="classopae_1_1afu__test_1_1afu_1a85040c8bd1b3b3aeb0878cff74c4ca92" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1a85040c8bd1b3b3aeb0878cff74c4ca92" kindref="member">write32</ref>(uint32_t<sp/>offset,<sp/>uint32_t<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>*((uint32_t<sp/>*)(mmio_base_<sp/>+<sp/>offset))<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="classopae_1_1afu__test_1_1afu_1a2db800c668b606885c4f4c405f8da4bc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classopae_1_1afu__test_1_1command_1a11a258a1fa5a99a5be9bb34a87c48f41" kindref="member">command::ptr_t</ref><sp/><ref refid="classopae_1_1afu__test_1_1afu_1a2db800c668b606885c4f4c405f8da4bc" kindref="member">current_command</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_command_;<sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="classopae_1_1afu__test_1_1afu_1a39e0e1342cd3c8d2e630be07ca787453" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1a39e0e1342cd3c8d2e630be07ca787453" kindref="member">allocate_dsm</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="he__cache__test_8h_1ae40428faaf55c32976e3e9bd81aa1f15" kindref="member">KiB</ref>(4),<sp/>uint32_t<sp/>numa_node<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dfl_cxl_cache_buffer_map<sp/>dma_map;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;dma_map,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_map));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="he__cache__test_8h_1a737440f86e0bcdb1e4b6598f3541e75a" kindref="member">buffer_allocate</ref>(&amp;ptr,<sp/>len,<sp/>numa_node))<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>4k<sp/>huge<sp/>page:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DSM<sp/>buffer<sp/>numa<sp/>node:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>numa_node<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.argsz<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_map);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.user_addr<sp/>=<sp/>(__u64)ptr;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.length<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.csr_array[0]<sp/>=<sp/><ref refid="he__cache__test_8h_1a8275b12b6b8a1a7b5a02114a5e50619f" kindref="member">DFL_CXL_CACHE_DSM_BASE</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;Allocate<sp/>DSM<sp/>buffer<sp/>user<sp/>addr<sp/>0x:{0:x}<sp/>length<sp/>:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{1:d}&quot;</highlight><highlight class="normal">,<sp/>dma_map.user_addr,<sp/>dma_map.length);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*u64<sp/>=</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)(mmio_base_<sp/>+<sp/><ref refid="he__cache__test_8h_1a8275b12b6b8a1a7b5a02114a5e50619f" kindref="member">DFL_CXL_CACHE_DSM_BASE</ref>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ioctl(fd_,<sp/>DFL_CXL_CACHE_NUMA_BUFFER_MAP,<sp/>&amp;dma_map);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ioctl<sp/>DFL_CXL_CACHE_NUMA_BUFFER_MAP<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out_free;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DSM_BASE<sp/><sp/><sp/><sp/><sp/>:<sp/>0x:{0:x}&quot;</highlight><highlight class="normal">,<sp/>*u64);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>dsm_buffer_<sp/>=<sp/>(uint8_t<sp/>*)ptr;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>dsm_buf_len_<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>out_free:</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="he__cache__test_8h_1a274404d5e2483f91198c791f3fb35044" kindref="member">buffer_release</ref>(ptr,<sp/>len);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572" refid="classopae_1_1afu__test_1_1afu_1a94ab4cd7eb2f5abf7f9c076c9cd3b2e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1a94ab4cd7eb2f5abf7f9c076c9cd3b2e4" kindref="member">free_dsm</ref>()<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dfl_cxl_cache_buffer_unmap<sp/>dma_unmap;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;dma_unmap,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_unmap));</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.argsz<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_unmap);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.user_addr<sp/>=<sp/>(__u64)dsm_buffer_;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.length<sp/>=<sp/>dsm_buf_len_;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.csr_array[0]<sp/>=<sp/><ref refid="he__cache__test_8h_1a8275b12b6b8a1a7b5a02114a5e50619f" kindref="member">DFL_CXL_CACHE_DSM_BASE</ref>;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;free<sp/>dsm<sp/>user<sp/>addr<sp/>0x:{0:x}<sp/>length<sp/>:<sp/>{1:d}<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_unmap.user_addr,<sp/>dma_unmap.length);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*u64<sp/>=</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)(mmio_base_<sp/>+<sp/><ref refid="he__cache__test_8h_1a8275b12b6b8a1a7b5a02114a5e50619f" kindref="member">DFL_CXL_CACHE_DSM_BASE</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ioctl(fd_,<sp/>DFL_CXL_CACHE_NUMA_BUFFER_UNMAP,<sp/>&amp;dma_unmap);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ioctl<sp/>DFL_CXL_CACHE_NUMA_BUFFER_UNMAP<sp/>failed&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>strerror(errno)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DSM_BASE<sp/><sp/><sp/><sp/><sp/>:<sp/>0x:{0:x}&quot;</highlight><highlight class="normal">,<sp/>*u64);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="he__cache__test_8h_1a274404d5e2483f91198c791f3fb35044" kindref="member">buffer_release</ref>(dsm_buffer_,<sp/>dsm_buf_len_);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="classopae_1_1afu__test_1_1afu_1a127d8571f7052515afc1d400c0981604" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1a127d8571f7052515afc1d400c0981604" kindref="member">reset_dsm</ref>()<sp/>{<sp/></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(dsm_buffer_,<sp/>0,<sp/>dsm_buf_len_);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="classopae_1_1afu__test_1_1afu_1aeae0c9059bf0455e5d238a168f776a16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1aeae0c9059bf0455e5d238a168f776a16" kindref="member">allocate_cache_read</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="he__cache__test_8h_1a66926c4792f38d56984ea477b5b6f45a" kindref="member">MiB</ref>(2),<sp/>uint32_t<sp/>numa_node<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dfl_cxl_cache_buffer_map<sp/>dma_map;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;dma_map,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_map));</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="he__cache__test_8h_1a737440f86e0bcdb1e4b6598f3541e75a" kindref="member">buffer_allocate</ref>(&amp;ptr,<sp/>len,<sp/>numa_node))<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>2MB<sp/>huge<sp/>page:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>buffer<sp/>numa<sp/>node:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>numa_node<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.argsz<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_map);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.user_addr<sp/>=<sp/>(__u64)ptr;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.length<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.csr_array[0]<sp/>=<sp/><ref refid="he__cache__test_8h_1a49cfbb3c7084eabd3317936a5a9bc908" kindref="member">DFL_CXL_CACHE_RD_ADDR_TABLE_DATA</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;Allocate<sp/>read<sp/>buffer<sp/>user<sp/>addr<sp/>0x:{0:x}<sp/>length<sp/>:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{1:d}&quot;</highlight><highlight class="normal">,<sp/>dma_map.user_addr,<sp/>dma_map.length);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*u64<sp/>=</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)(mmio_base_<sp/>+<sp/><ref refid="he__cache__test_8h_1a49cfbb3c7084eabd3317936a5a9bc908" kindref="member">DFL_CXL_CACHE_RD_ADDR_TABLE_DATA</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ioctl(fd_,<sp/>DFL_CXL_CACHE_NUMA_BUFFER_MAP,<sp/>&amp;dma_map);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ioctl<sp/>DFL_CXL_CACHE_NUMA_BUFFER_MAP<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out_free;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DFL_CXL_CACHE_RD_ADDR_TABLE_DATA<sp/><sp/><sp/><sp/><sp/>:<sp/>0x:{0:x}&quot;</highlight><highlight class="normal">,<sp/>*u64);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>rd_buffer_<sp/>=<sp/>(uint8_t<sp/>*)ptr;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>rd_buf_len_<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>out_free:</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="he__cache__test_8h_1a274404d5e2483f91198c791f3fb35044" kindref="member">buffer_release</ref>(ptr,<sp/>len);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="classopae_1_1afu__test_1_1afu_1adfd7bee969d9fb698179177cb0109fa8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1adfd7bee969d9fb698179177cb0109fa8" kindref="member">free_cache_read</ref>()<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dfl_cxl_cache_buffer_unmap<sp/>dma_unmap;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;dma_unmap,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_unmap));</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.argsz<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_unmap);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.user_addr<sp/>=<sp/>(__u64)rd_buffer_;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.length<sp/>=<sp/>rd_buf_len_;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.csr_array[0]<sp/>=<sp/><ref refid="he__cache__test_8h_1a49cfbb3c7084eabd3317936a5a9bc908" kindref="member">DFL_CXL_CACHE_RD_ADDR_TABLE_DATA</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;free<sp/>read<sp/>user<sp/>addr<sp/>0x:{0:x}<sp/>length<sp/>:<sp/>{1:d}<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_unmap.user_addr,<sp/>dma_unmap.length);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*u64<sp/>=</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)(mmio_base_<sp/>+<sp/><ref refid="he__cache__test_8h_1a49cfbb3c7084eabd3317936a5a9bc908" kindref="member">DFL_CXL_CACHE_RD_ADDR_TABLE_DATA</ref>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ioctl(fd_,<sp/>DFL_CXL_CACHE_NUMA_BUFFER_UNMAP,<sp/>&amp;dma_unmap);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ioctl<sp/>DFL_CXL_CACHE_NUMA_BUFFER_UNMAP<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DFL_CXL_CACHE_RD_ADDR_TABLE_DATA<sp/><sp/><sp/><sp/><sp/>:<sp/>0x:{0:x}&quot;</highlight><highlight class="normal">,<sp/>*u64);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="he__cache__test_8h_1a274404d5e2483f91198c791f3fb35044" kindref="member">buffer_release</ref>(rd_buffer_,<sp/>rd_buf_len_);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="classopae_1_1afu__test_1_1afu_1ac2756579ad42be859b696a1880a703a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1ac2756579ad42be859b696a1880a703a2" kindref="member">allocate_cache_write</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="he__cache__test_8h_1a66926c4792f38d56984ea477b5b6f45a" kindref="member">MiB</ref>(2),<sp/>uint32_t<sp/>numa_node<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dfl_cxl_cache_buffer_map<sp/>dma_map;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;dma_map,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_map));</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="he__cache__test_8h_1a737440f86e0bcdb1e4b6598f3541e75a" kindref="member">buffer_allocate</ref>(&amp;ptr,<sp/>len,<sp/>numa_node))<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>2MB<sp/>huge<sp/>page:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Write<sp/>buffer<sp/>numa<sp/>node:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>numa_node<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.argsz<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_map);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.user_addr<sp/>=<sp/>(__u64)ptr;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.length<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.csr_array[0]<sp/>=<sp/><ref refid="he__cache__test_8h_1aeb44d29251e2290eab7037feea413dfe" kindref="member">DFL_CXL_CACHE_WR_ADDR_TABLE_DATA</ref>;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;Allocate<sp/>write<sp/>buffer<sp/>user<sp/>addr<sp/>0x:{0:x}\</highlight></codeline>
<codeline lineno="692"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>:<sp/>{1:d}&quot;</highlight><highlight class="normal">,<sp/>dma_map.user_addr,<sp/>dma_map.length);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*u64<sp/>=</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)(mmio_base_<sp/>+<sp/><ref refid="he__cache__test_8h_1aeb44d29251e2290eab7037feea413dfe" kindref="member">DFL_CXL_CACHE_WR_ADDR_TABLE_DATA</ref>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ioctl(fd_,<sp/>DFL_CXL_CACHE_NUMA_BUFFER_MAP,<sp/>&amp;dma_map);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ioctl<sp/>DFL_CXL_CACHE_NUMA_BUFFER_MAP<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out_free;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DFL_CXL_CACHE_WR_ADDR_TABLE_DATA<sp/><sp/><sp/><sp/><sp/>:<sp/>0x:{0:x}&quot;</highlight><highlight class="normal">,<sp/>*u64);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_buffer_<sp/>=<sp/>(uint8_t<sp/>*)ptr;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>wr_buf_len_<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>out_free:</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="he__cache__test_8h_1a274404d5e2483f91198c791f3fb35044" kindref="member">buffer_release</ref>(ptr,<sp/>len);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714" refid="classopae_1_1afu__test_1_1afu_1a4f75d9580bec86a37adc9829e038bcf4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1a4f75d9580bec86a37adc9829e038bcf4" kindref="member">free_cache_write</ref>()<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dfl_cxl_cache_buffer_unmap<sp/>dma_unmap;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;dma_unmap,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_unmap));</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.argsz<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_unmap);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.user_addr<sp/>=<sp/>(__u64)wr_buffer_;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.length<sp/>=<sp/>wr_buf_len_;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.csr_array[0]<sp/>=<sp/><ref refid="he__cache__test_8h_1aeb44d29251e2290eab7037feea413dfe" kindref="member">DFL_CXL_CACHE_WR_ADDR_TABLE_DATA</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;free<sp/>write<sp/>user<sp/>addr<sp/>0x:{0:x}<sp/>length<sp/>:<sp/>{1:d}<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_unmap.user_addr,<sp/>dma_unmap.length);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*u64<sp/>=</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)(mmio_base_<sp/>+<sp/><ref refid="he__cache__test_8h_1aeb44d29251e2290eab7037feea413dfe" kindref="member">DFL_CXL_CACHE_WR_ADDR_TABLE_DATA</ref>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ioctl(fd_,<sp/>DFL_CXL_CACHE_NUMA_BUFFER_UNMAP,<sp/>&amp;dma_unmap);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ioctl<sp/>DFL_CXL_CACHE_NUMA_BUFFER_UNMAP<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DFL_CXL_CACHE_WR_ADDR_TABLE_DATA<sp/><sp/><sp/><sp/><sp/>:<sp/>0x:{0:x}&quot;</highlight><highlight class="normal">,<sp/>*u64);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="he__cache__test_8h_1a274404d5e2483f91198c791f3fb35044" kindref="member">buffer_release</ref>(wr_buffer_,<sp/>wr_buf_len_);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741" refid="classopae_1_1afu__test_1_1afu_1ae9f15c76d68e94b445c2c1c21f727d1a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1ae9f15c76d68e94b445c2c1c21f727d1a" kindref="member">allocate_cache_read_write</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="he__cache__test_8h_1a66926c4792f38d56984ea477b5b6f45a" kindref="member">MiB</ref>(2),<sp/>uint32_t<sp/>numa_node<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dfl_cxl_cache_buffer_map<sp/>dma_map;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;dma_map,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_map));</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="he__cache__test_8h_1a737440f86e0bcdb1e4b6598f3541e75a" kindref="member">buffer_allocate</ref>(&amp;ptr,<sp/>len,<sp/>numa_node))<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>2MB<sp/>huge<sp/>page:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Read/Write<sp/>buffer<sp/>numa<sp/>node:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>numa_node<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.argsz<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_map);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.user_addr<sp/>=<sp/>(__u64)ptr;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.length<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.csr_array[0]<sp/>=<sp/><ref refid="he__cache__test_8h_1a49cfbb3c7084eabd3317936a5a9bc908" kindref="member">DFL_CXL_CACHE_RD_ADDR_TABLE_DATA</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_map.csr_array[1]<sp/>=<sp/><ref refid="he__cache__test_8h_1aeb44d29251e2290eab7037feea413dfe" kindref="member">DFL_CXL_CACHE_WR_ADDR_TABLE_DATA</ref>;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;Allocate<sp/>read/write<sp/>buffer<sp/>user<sp/>addr<sp/>0x:{0:x}\</highlight></codeline>
<codeline lineno="761"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>:<sp/>{1:d}&quot;</highlight><highlight class="normal">,<sp/>dma_map.user_addr,<sp/>dma_map.length);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*u64_wr<sp/>=</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)(mmio_base_<sp/>+<sp/><ref refid="he__cache__test_8h_1aeb44d29251e2290eab7037feea413dfe" kindref="member">DFL_CXL_CACHE_WR_ADDR_TABLE_DATA</ref>);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*u64_rd<sp/>=</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)(mmio_base_<sp/>+<sp/><ref refid="he__cache__test_8h_1a49cfbb3c7084eabd3317936a5a9bc908" kindref="member">DFL_CXL_CACHE_RD_ADDR_TABLE_DATA</ref>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ioctl(fd_,<sp/>DFL_CXL_CACHE_NUMA_BUFFER_MAP,<sp/>&amp;dma_map);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ioctl<sp/>DFL_CXL_CACHE_NUMA_BUFFER_MAP<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out_free;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DFL_CXL_CACHE_WR_ADDR_TABLE_DATA<sp/><sp/><sp/><sp/><sp/>:<sp/>0x:{0:x}&quot;</highlight><highlight class="normal">,<sp/>*u64_rd);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DFL_CXL_CACHE_WR_ADDR_TABLE_DATA<sp/><sp/><sp/><sp/><sp/>:<sp/>0x:{0:x}&quot;</highlight><highlight class="normal">,<sp/>*u64_wr);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>rd_wr_buffer_<sp/>=<sp/>(uint8_t<sp/>*)ptr;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>rd_wr_buf_len_<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>out_free:</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="he__cache__test_8h_1a274404d5e2483f91198c791f3fb35044" kindref="member">buffer_release</ref>(ptr,<sp/>len);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788" refid="classopae_1_1afu__test_1_1afu_1adadb65558a3a54ba88e96b872d43b30d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1adadb65558a3a54ba88e96b872d43b30d" kindref="member">free_cache_read_write</ref>()<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dfl_cxl_cache_buffer_unmap<sp/>dma_unmap;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;dma_unmap,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_unmap));</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.argsz<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dma_unmap);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.user_addr<sp/>=<sp/>(__u64)rd_wr_buffer_;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.length<sp/>=<sp/>rd_wr_buf_len_;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.csr_array[0]<sp/>=<sp/><ref refid="he__cache__test_8h_1a49cfbb3c7084eabd3317936a5a9bc908" kindref="member">DFL_CXL_CACHE_RD_ADDR_TABLE_DATA</ref>;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_unmap.csr_array[1]<sp/>=<sp/><ref refid="he__cache__test_8h_1aeb44d29251e2290eab7037feea413dfe" kindref="member">DFL_CXL_CACHE_WR_ADDR_TABLE_DATA</ref>;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;free<sp/>read/write<sp/>user<sp/>addr<sp/>0x:{0:x}<sp/>length<sp/>:<sp/>{1:d}<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_unmap.user_addr,<sp/>dma_unmap.length);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*u64_wr<sp/>=</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)(mmio_base_<sp/>+<sp/><ref refid="he__cache__test_8h_1aeb44d29251e2290eab7037feea413dfe" kindref="member">DFL_CXL_CACHE_WR_ADDR_TABLE_DATA</ref>);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*u64_rd<sp/>=</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)(mmio_base_<sp/>+<sp/><ref refid="he__cache__test_8h_1a49cfbb3c7084eabd3317936a5a9bc908" kindref="member">DFL_CXL_CACHE_RD_ADDR_TABLE_DATA</ref>);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>ioctl(fd_,<sp/>DFL_CXL_CACHE_NUMA_BUFFER_UNMAP,<sp/>&amp;dma_unmap);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ioctl<sp/>DFL_CXL_CACHE_NUMA_BUFFER_UNMAP<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DFL_CXL_CACHE_WR_ADDR_TABLE_DATA<sp/><sp/><sp/><sp/><sp/>:<sp/>0x:{0:x}&quot;</highlight><highlight class="normal">,<sp/>*u64_rd);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_-&gt;debug(</highlight><highlight class="stringliteral">&quot;DFL_CXL_CACHE_WR_ADDR_TABLE_DATA<sp/><sp/><sp/><sp/><sp/>:<sp/>0x:{0:x}&quot;</highlight><highlight class="normal">,<sp/>*u64_wr);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="he__cache__test_8h_1a274404d5e2483f91198c791f3fb35044" kindref="member">buffer_release</ref>(rd_wr_buffer_,<sp/>rd_wr_buf_len_);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>rd_wr_buffer_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822" refid="classopae_1_1afu__test_1_1afu_1aadd011881d4bf921671c9a426262e61e" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*<ref refid="classopae_1_1afu__test_1_1afu_1aadd011881d4bf921671c9a426262e61e" kindref="member">get_dsm</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dsm_buffer_;<sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824" refid="classopae_1_1afu__test_1_1afu_1a1ec221419c8668d8b14e1b7e6c056b98" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*<ref refid="classopae_1_1afu__test_1_1afu_1a1ec221419c8668d8b14e1b7e6c056b98" kindref="member">get_read</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rd_buffer_;<sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826" refid="classopae_1_1afu__test_1_1afu_1abff0d8566f3e4bfe138f44eadab9b16f" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*<ref refid="classopae_1_1afu__test_1_1afu_1abff0d8566f3e4bfe138f44eadab9b16f" kindref="member">get_write</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wr_buffer_;<sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828" refid="classopae_1_1afu__test_1_1afu_1ac03cc5d56c562425a9bcbbe1c2edf7c0" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*<ref refid="classopae_1_1afu__test_1_1afu_1ac03cc5d56c562425a9bcbbe1c2edf7c0" kindref="member">get_read_write</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rd_wr_buffer_;<sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="831" refid="classopae_1_1afu__test_1_1afu_1aee6c870bd4c573cd06893f815232a1dc" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classopae_1_1afu__test_1_1afu_1aee6c870bd4c573cd06893f815232a1dc" kindref="member">name_</ref>;</highlight></codeline>
<codeline lineno="832" refid="classopae_1_1afu__test_1_1afu_1af29e9be9b338fcda6a5d02a0431bf522" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classopae_1_1afu__test_1_1afu_1af29e9be9b338fcda6a5d02a0431bf522" kindref="member">afu_id_</ref>;</highlight></codeline>
<codeline lineno="833" refid="classopae_1_1afu__test_1_1afu_1abe62e0407c33466b7d6bf5005276fdc3" refkind="member"><highlight class="normal"><sp/><sp/>CLI::App<sp/><ref refid="classopae_1_1afu__test_1_1afu_1abe62e0407c33466b7d6bf5005276fdc3" kindref="member">app_</ref>;</highlight></codeline>
<codeline lineno="834" refid="classopae_1_1afu__test_1_1afu_1ae9b4f7f4daba866467f04e9c64d660ee" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classopae_1_1afu__test_1_1afu_1ae9b4f7f4daba866467f04e9c64d660ee" kindref="member">pci_addr_</ref>;</highlight></codeline>
<codeline lineno="835" refid="classopae_1_1afu__test_1_1afu_1a410d46e06fe9a836ec107a08cf8576a0" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classopae_1_1afu__test_1_1afu_1a410d46e06fe9a836ec107a08cf8576a0" kindref="member">log_level_</ref>;</highlight></codeline>
<codeline lineno="836" refid="classopae_1_1afu__test_1_1afu_1a75f121f0ea96c60091ca1223f5b29004" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="classopae_1_1afu__test_1_1afu_1a75f121f0ea96c60091ca1223f5b29004" kindref="member">timeout_msec_</ref>;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838" refid="classopae_1_1afu__test_1_1afu_1a99dd66842fa780a0ceb7dda617c4e38b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1a99dd66842fa780a0ceb7dda617c4e38b" kindref="member">fd_</ref>;</highlight></codeline>
<codeline lineno="839" refid="classopae_1_1afu__test_1_1afu_1a9b40ebeb9a922bed3bdb079e6285b4e2" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*<ref refid="classopae_1_1afu__test_1_1afu_1a9b40ebeb9a922bed3bdb079e6285b4e2" kindref="member">mmio_base_</ref>;</highlight></codeline>
<codeline lineno="840" refid="classopae_1_1afu__test_1_1afu_1acb52665e466bb54609b5ac81d4dfd282" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classopae_1_1afu__test_1_1afu_1acb52665e466bb54609b5ac81d4dfd282" kindref="member">mmio_len_</ref>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842" refid="classopae_1_1afu__test_1_1afu_1a4784e4f7a10529f0f107c7f241b89767" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*<ref refid="classopae_1_1afu__test_1_1afu_1a4784e4f7a10529f0f107c7f241b89767" kindref="member">dsm_buffer_</ref>;</highlight></codeline>
<codeline lineno="843" refid="classopae_1_1afu__test_1_1afu_1a868b16ab618cfdbd8f8bd403b2ba2af7" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classopae_1_1afu__test_1_1afu_1a868b16ab618cfdbd8f8bd403b2ba2af7" kindref="member">dsm_buf_len_</ref>;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845" refid="classopae_1_1afu__test_1_1afu_1a5fd0b4fdfb3009117ff4a9f79cf84743" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*<ref refid="classopae_1_1afu__test_1_1afu_1a5fd0b4fdfb3009117ff4a9f79cf84743" kindref="member">rd_buffer_</ref>;</highlight></codeline>
<codeline lineno="846" refid="classopae_1_1afu__test_1_1afu_1ad55f0e9505cb20d242e7c53005d2f462" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classopae_1_1afu__test_1_1afu_1ad55f0e9505cb20d242e7c53005d2f462" kindref="member">rd_buf_len_</ref>;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848" refid="classopae_1_1afu__test_1_1afu_1ab6736eb6d461e288c0f7846c741bb511" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*<ref refid="classopae_1_1afu__test_1_1afu_1ab6736eb6d461e288c0f7846c741bb511" kindref="member">wr_buffer_</ref>;</highlight></codeline>
<codeline lineno="849" refid="classopae_1_1afu__test_1_1afu_1a39bda33296e1b0fb5a486c349d098c77" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classopae_1_1afu__test_1_1afu_1a39bda33296e1b0fb5a486c349d098c77" kindref="member">wr_buf_len_</ref>;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851" refid="classopae_1_1afu__test_1_1afu_1afd43e84a2d933b6141298f89eae7d22e" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*<ref refid="classopae_1_1afu__test_1_1afu_1afd43e84a2d933b6141298f89eae7d22e" kindref="member">rd_wr_buffer_</ref>;</highlight></codeline>
<codeline lineno="852" refid="classopae_1_1afu__test_1_1afu_1a6a13abfbef7c0e17b35bf8dc11c06f00" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classopae_1_1afu__test_1_1afu_1a6a13abfbef7c0e17b35bf8dc11c06f00" kindref="member">rd_wr_buf_len_</ref>;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dfl_cxl_cache_region_info<sp/>rinfo_;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856" refid="classopae_1_1afu__test_1_1afu_1a36d7214cdf09708a4eba033e21447434" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/>dev_path_[<ref refid="he__cache__test_8h_1aa1be1a2ea0e3c7d738ca265578184905" kindref="member">MAX_HE_CACHE_DEVICE</ref>];</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858" refid="classopae_1_1afu__test_1_1afu_1a62081683d3d299f6a71540923eca6291" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classopae_1_1afu__test_1_1command_1a11a258a1fa5a99a5be9bb34a87c48f41" kindref="member">command::ptr_t</ref><sp/><ref refid="classopae_1_1afu__test_1_1afu_1a62081683d3d299f6a71540923eca6291" kindref="member">current_command_</ref>;</highlight></codeline>
<codeline lineno="859" refid="classopae_1_1afu__test_1_1afu_1a3a7e209b3faad4cfd9472cc19d6685f7" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;CLI::App<sp/>*,<sp/>command::ptr_t&gt;<sp/><ref refid="classopae_1_1afu__test_1_1afu_1a3a7e209b3faad4cfd9472cc19d6685f7" kindref="member">commands_</ref>;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="862" refid="classopae_1_1afu__test_1_1afu_1af3999e552b0f5d709ded4693bbeb4d87" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/><ref refid="classopae_1_1afu__test_1_1afu_1af3999e552b0f5d709ded4693bbeb4d87" kindref="member">logger_</ref>;</highlight></codeline>
<codeline lineno="863"><highlight class="normal">};</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>afu_test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>opae</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="samples/cxl_host_exerciser/he_cache_test.h"/>
  </compounddef>
</doxygen>
