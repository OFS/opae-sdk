.TH "cxl_mem_tg" 3 "Wed Nov 22 2023" "Version -.." "OPAE C API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cxl_mem_tg
.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "union \fBmem_tg_ctl\fP"
.br
.ti -1c
.RI "union \fBmem_tg_status\fP"
.br
.ti -1c
.RI "union \fBmem_tg0_count\fP"
.br
.ti -1c
.RI "union \fBmem_tg1_count\fP"
.br
.ti -1c
.RI "class \fBcxl_mem_tg\fP"
.br
.ti -1c
.RI "class \fBcxl_tg_test\fP"
.br
.ti -1c
.RI "struct \fBmem_tg_ctl\&.__unnamed52__\fP"
.br
.ti -1c
.RI "struct \fBmem_tg_status\&.__unnamed55__\fP"
.br
.ti -1c
.RI "struct \fBmem_tg0_count\&.__unnamed58__\fP"
.br
.ti -1c
.RI "struct \fBmem_tg1_count\&.__unnamed61__\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "using \fBtest_afu\fP = \fBopae::afu_test::afu\fP"
.br
.ti -1c
.RI "using \fBtest_command\fP = \fBopae::afu_test::command\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum { \fBTG_STATUS_ACTIVE\fP = 0x1, \fBTG_STATUS_TIMEOUT\fP = 0x2, \fBTG_STATUS_ERROR\fP = 0x4, \fBTG_STATUS_PASS\fP = 0x8 }"
.br
.ti -1c
.RI "enum { \fBTG_ADDR_RAND\fP = 0, \fBTG_ADDR_SEQ\fP = 1, \fBTG_ADDR_RAND_SEQ\fP = 2, \fBTG_ADDR_ONE_HOT\fP = 3 }"
.br
.ti -1c
.RI "enum { \fBTG_DATA_FIXED\fP = 0, \fBTG_DATA_PRBS7\fP = 1, \fBTG_DATA_PRBS15\fP = 2, \fBTG_DATA_PRBS31\fP = 3, \fBTG_DATA_ROTATING\fP = 4 }"
.br
.ti -1c
.RI "enum { \fBAFU_DFH\fP = 0x0000, \fBAFU_ID_L\fP = 0x0008, \fBAFU_ID_H\fP = 0x0010, \fBNEXT_AFU\fP = 0x0018, \fBAFU_DFH_RSVD\fP = 0x0020, \fBSCRATCHPAD\fP = 0x0028, \fBMEM_TG_CTRL\fP = 0x0030, \fBMEM_TG_STAT\fP = 0x0038, \fBMEM_TG_CLK_COUNT\fP = 0x0050, \fBMEM_TG_WR_COUNT\fP = 0x0058, \fBMEM_TG_CLK_FREQ\fP = 0x0060 }"
.br
.ti -1c
.RI "enum { \fBTG_VERSION\fP = MEM_TG_CFG_OFFSET + 0x000, \fBTG_START\fP = MEM_TG_CFG_OFFSET + 0x004, \fBTG_LOOP_COUNT\fP = MEM_TG_CFG_OFFSET + 0x008, \fBTG_WRITE_COUNT\fP = MEM_TG_CFG_OFFSET + 0x00C, \fBTG_READ_COUNT\fP = MEM_TG_CFG_OFFSET + 0x010, \fBTG_WRITE_REPEAT_COUNT\fP = MEM_TG_CFG_OFFSET + 0x014, \fBTG_READ_REPEAT_COUNT\fP = MEM_TG_CFG_OFFSET + 0x018, \fBTG_BURST_LENGTH\fP = MEM_TG_CFG_OFFSET + 0x01C, \fBTG_CLEAR\fP = MEM_TG_CFG_OFFSET + 0x020, \fBTG_RW_GEN_IDLE_COUNT\fP = MEM_TG_CFG_OFFSET + 0x038, \fBTG_RW_GEN_LOOP_IDLE_COUNT\fP = MEM_TG_CFG_OFFSET + 0x03C, \fBTG_SEQ_START_ADDR_WR\fP = MEM_TG_CFG_OFFSET + 0x040, \fBTG_ADDR_MODE_WR\fP = MEM_TG_CFG_OFFSET + 0x080, \fBTG_RETURN_TO_START_ADDR\fP = MEM_TG_CFG_OFFSET + 0x0C0, \fBTG_SEQ_ADDR_INCR\fP = MEM_TG_CFG_OFFSET + 0x0100, \fBTG_SEQ_START_ADDR_RD\fP = MEM_TG_CFG_OFFSET + 0x140, \fBTG_ADDR_MODE_RD\fP = MEM_TG_CFG_OFFSET + 0x180, \fBTG_PASS\fP = MEM_TG_CFG_OFFSET + 0x1C0, \fBTG_FAIL\fP = MEM_TG_CFG_OFFSET + 0x1C4, \fBTG_FAIL_COUNT_L\fP = MEM_TG_CFG_OFFSET + 0x1C8, \fBTG_FAIL_COUNT_H\fP = MEM_TG_CFG_OFFSET + 0x01CC, \fBTG_FIRST_FAIL_ADDR_L\fP = MEM_TG_CFG_OFFSET + 0x01D0, \fBTG_FIRST_FAIL_ADDR_H\fP = MEM_TG_CFG_OFFSET + 0x01D4, \fBTG_TOTAL_READ_COUNT_L\fP = MEM_TG_CFG_OFFSET + 0x01D8, \fBTG_TOTAL_READ_COUNT_H\fP = MEM_TG_CFG_OFFSET + 0x01DC, \fBTG_TEST_COMPLETE\fP = MEM_TG_CFG_OFFSET + 0x01E0, \fBTG_INVERT_BYTEEN\fP = MEM_TG_CFG_OFFSET + 0x01E4, \fBTG_RESTART_DEFAULT_TRAFFIC\fP = MEM_TG_CFG_OFFSET + 0x01E8, \fBTG_USER_WORM_EN\fP = MEM_TG_CFG_OFFSET + 0x01EC, \fBTG_TEST_BYTEEN\fP = MEM_TG_CFG_OFFSET + 0x01F0, \fBTG_TIMEOUT\fP = MEM_TG_CFG_OFFSET + 0x01F4, \fBTG_NUM_DATA_GEN\fP = MEM_TG_CFG_OFFSET + 0x01F8, \fBTG_NUM_BYTEEN_GEN\fP = MEM_TG_CFG_OFFSET + 0x01FC, \fBTG_RDATA_WIDTH\fP = MEM_TG_CFG_OFFSET + 0x0200, \fBTG_ERROR_REPORT\fP = MEM_TG_CFG_OFFSET + 0x0208, \fBTG_PNF\fP = MEM_TG_CFG_OFFSET + 0x0240, \fBTG_FAIL_EXPECTED_DATA\fP = MEM_TG_CFG_OFFSET + 0x0340, \fBTG_FAIL_READ_DATA\fP = MEM_TG_CFG_OFFSET + 0x0440, \fBTG_DATA_SEED\fP = MEM_TG_CFG_OFFSET + 0x0540, \fBTG_BYTEEN_SEED\fP = MEM_TG_CFG_OFFSET + 0x0580, \fBTG_PPPG_SEL\fP = MEM_TG_CFG_OFFSET + 0x05C0, \fBTG_BYTEEN_SEL\fP = MEM_TG_CFG_OFFSET + 0x0600, \fBTG_ADDR_FIELD_RELATIVE_FREQ\fP = MEM_TG_CFG_OFFSET + 0x0640, \fBTG_ADDR_FIELD_MSB_INDEX\fP = MEM_TG_CFG_OFFSET + 0x0680, \fBTG_BURSTLENGTH_OVERFLOW_OCCURRED\fP = MEM_TG_CFG_OFFSET + 0x06C0, \fBTG_BURSTLENGTH_FAIL_ADDR_L\fP = MEM_TG_CFG_OFFSET + 0x0700, \fBTG_BURSTLENGTH_FAIL_ADDR_H\fP = MEM_TG_CFG_OFFSET + 0x0704, \fBTG_WORM_MODE_TARGETTED_DATA\fP = MEM_TG_CFG_OFFSET + 0x0740 }"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char * \fBAFU_ID\fP = '4DADEA34\-2C78\-48CB\-A3DC\-5B831F5CECBB'"
.br
.ti -1c
.RI "static const uint64_t \fBMEM_TG_TEST_TIMEOUT\fP = 3000000"
.br
.ti -1c
.RI "static const uint64_t \fBTEST_SLEEP_INVL\fP = 100"
.br
.ti -1c
.RI "static const uint64_t \fBTG_CTRL_CLEAR\fP = 0x8000000000000000"
.br
.ti -1c
.RI "static const uint64_t \fBTG_SLEEP\fP = 300 / 1000"
.br
.ti -1c
.RI "static const uint64_t \fBTG_FREQ\fP = 400 * 1000"
.br
.ti -1c
.RI "const std::map< std::string, uint32_t > \fBtg_pattern\fP"
.br
.ti -1c
.RI "const int \fBMEM_TG_CFG_OFFSET\fP = 0x1000"
.br
.in -1c
.SH "Data Structure Documentation"
.PP 
.SH "struct cxl_mem_tg::mem_tg_ctl\&.__unnamed52__"
.PP 
Definition at line 144 of file cxl_mem_tg\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fItg_capability: 4\fP 
.br
.PP
uint64_t \fIRsvd_63_3: 59\fP 
.br
.PP
uint64_t \fIcounter_clear: 1\fP 
.br
.PP
.RE
.PP
.SH "struct cxl_mem_tg::mem_tg_status\&.__unnamed55__"
.PP 
Definition at line 155 of file cxl_mem_tg\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fItg_status0: 4\fP 
.br
.PP
uint64_t \fItg_status1: 4\fP 
.br
.PP
uint64_t \fItg_status2: 4\fP 
.br
.PP
uint64_t \fItg_status3: 4\fP 
.br
.PP
uint64_t \fIRsvd_63_16: 48\fP 
.br
.PP
.RE
.PP
.SH "struct cxl_mem_tg::mem_tg0_count\&.__unnamed58__"
.PP 
Definition at line 168 of file cxl_mem_tg\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIcount: 64\fP 
.br
.PP
.RE
.PP
.SH "struct cxl_mem_tg::mem_tg1_count\&.__unnamed61__"
.PP 
Definition at line 177 of file cxl_mem_tg\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
uint64_t \fIcount: 64\fP 
.br
.PP
.RE
.PP
.SH "Typedef Documentation"
.PP 
.SS "using \fBcxl_mem_tg::test_afu\fP = typedef \fBopae::afu_test::afu\fP"

.PP
Definition at line 182 of file cxl_mem_tg\&.h\&.
.SS "using \fBcxl_mem_tg::test_command\fP = typedef \fBopae::afu_test::command\fP"

.PP
Definition at line 183 of file cxl_mem_tg\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITG_STATUS_ACTIVE \fP\fP
.TP
\fB\fITG_STATUS_TIMEOUT \fP\fP
.TP
\fB\fITG_STATUS_ERROR \fP\fP
.TP
\fB\fITG_STATUS_PASS \fP\fP
.PP
Definition at line 45 of file cxl_mem_tg\&.h\&.
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITG_ADDR_RAND \fP\fP
.TP
\fB\fITG_ADDR_SEQ \fP\fP
.TP
\fB\fITG_ADDR_RAND_SEQ \fP\fP
.TP
\fB\fITG_ADDR_ONE_HOT \fP\fP
.PP
Definition at line 52 of file cxl_mem_tg\&.h\&.
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITG_DATA_FIXED \fP\fP
.TP
\fB\fITG_DATA_PRBS7 \fP\fP
.TP
\fB\fITG_DATA_PRBS15 \fP\fP
.TP
\fB\fITG_DATA_PRBS31 \fP\fP
.TP
\fB\fITG_DATA_ROTATING \fP\fP
.PP
Definition at line 59 of file cxl_mem_tg\&.h\&.
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIAFU_DFH \fP\fP
.TP
\fB\fIAFU_ID_L \fP\fP
.TP
\fB\fIAFU_ID_H \fP\fP
.TP
\fB\fINEXT_AFU \fP\fP
.TP
\fB\fIAFU_DFH_RSVD \fP\fP
.TP
\fB\fISCRATCHPAD \fP\fP
.TP
\fB\fIMEM_TG_CTRL \fP\fP
.TP
\fB\fIMEM_TG_STAT \fP\fP
.TP
\fB\fIMEM_TG_CLK_COUNT \fP\fP
.TP
\fB\fIMEM_TG_WR_COUNT \fP\fP
.TP
\fB\fIMEM_TG_CLK_FREQ \fP\fP
.PP
Definition at line 73 of file cxl_mem_tg\&.h\&.
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITG_VERSION \fP\fP
.TP
\fB\fITG_START \fP\fP
.TP
\fB\fITG_LOOP_COUNT \fP\fP
.TP
\fB\fITG_WRITE_COUNT \fP\fP
.TP
\fB\fITG_READ_COUNT \fP\fP
.TP
\fB\fITG_WRITE_REPEAT_COUNT \fP\fP
.TP
\fB\fITG_READ_REPEAT_COUNT \fP\fP
.TP
\fB\fITG_BURST_LENGTH \fP\fP
.TP
\fB\fITG_CLEAR \fP\fP
.TP
\fB\fITG_RW_GEN_IDLE_COUNT \fP\fP
.TP
\fB\fITG_RW_GEN_LOOP_IDLE_COUNT \fP\fP
.TP
\fB\fITG_SEQ_START_ADDR_WR \fP\fP
.TP
\fB\fITG_ADDR_MODE_WR \fP\fP
.TP
\fB\fITG_RETURN_TO_START_ADDR \fP\fP
.TP
\fB\fITG_SEQ_ADDR_INCR \fP\fP
.TP
\fB\fITG_SEQ_START_ADDR_RD \fP\fP
.TP
\fB\fITG_ADDR_MODE_RD \fP\fP
.TP
\fB\fITG_PASS \fP\fP
.TP
\fB\fITG_FAIL \fP\fP
.TP
\fB\fITG_FAIL_COUNT_L \fP\fP
.TP
\fB\fITG_FAIL_COUNT_H \fP\fP
.TP
\fB\fITG_FIRST_FAIL_ADDR_L \fP\fP
.TP
\fB\fITG_FIRST_FAIL_ADDR_H \fP\fP
.TP
\fB\fITG_TOTAL_READ_COUNT_L \fP\fP
.TP
\fB\fITG_TOTAL_READ_COUNT_H \fP\fP
.TP
\fB\fITG_TEST_COMPLETE \fP\fP
.TP
\fB\fITG_INVERT_BYTEEN \fP\fP
.TP
\fB\fITG_RESTART_DEFAULT_TRAFFIC \fP\fP
.TP
\fB\fITG_USER_WORM_EN \fP\fP
.TP
\fB\fITG_TEST_BYTEEN \fP\fP
.TP
\fB\fITG_TIMEOUT \fP\fP
.TP
\fB\fITG_NUM_DATA_GEN \fP\fP
.TP
\fB\fITG_NUM_BYTEEN_GEN \fP\fP
.TP
\fB\fITG_RDATA_WIDTH \fP\fP
.TP
\fB\fITG_ERROR_REPORT \fP\fP
.TP
\fB\fITG_PNF \fP\fP
.TP
\fB\fITG_FAIL_EXPECTED_DATA \fP\fP
.TP
\fB\fITG_FAIL_READ_DATA \fP\fP
.TP
\fB\fITG_DATA_SEED \fP\fP
.TP
\fB\fITG_BYTEEN_SEED \fP\fP
.TP
\fB\fITG_PPPG_SEL \fP\fP
.TP
\fB\fITG_BYTEEN_SEL \fP\fP
.TP
\fB\fITG_ADDR_FIELD_RELATIVE_FREQ \fP\fP
.TP
\fB\fITG_ADDR_FIELD_MSB_INDEX \fP\fP
.TP
\fB\fITG_BURSTLENGTH_OVERFLOW_OCCURRED \fP\fP
.TP
\fB\fITG_BURSTLENGTH_FAIL_ADDR_L \fP\fP
.TP
\fB\fITG_BURSTLENGTH_FAIL_ADDR_H \fP\fP
.TP
\fB\fITG_WORM_MODE_TARGETTED_DATA \fP\fP
.PP
Definition at line 89 of file cxl_mem_tg\&.h\&.
.SH "Variable Documentation"
.PP 
.SS "const char* cxl_mem_tg::AFU_ID = '4DADEA34\-2C78\-48CB\-A3DC\-5B831F5CECBB'"

.PP
Definition at line 37 of file cxl_mem_tg\&.h\&.
.SS "const uint64_t cxl_mem_tg::MEM_TG_TEST_TIMEOUT = 3000000\fC [static]\fP"

.PP
Definition at line 39 of file cxl_mem_tg\&.h\&.
.PP
Referenced by cxl_mem_tg::cxl_tg_test::tg_wait_test_completion()\&.
.SS "const uint64_t cxl_mem_tg::TEST_SLEEP_INVL = 100\fC [static]\fP"

.PP
Definition at line 40 of file cxl_mem_tg\&.h\&.
.SS "const uint64_t cxl_mem_tg::TG_CTRL_CLEAR = 0x8000000000000000\fC [static]\fP"

.PP
Definition at line 41 of file cxl_mem_tg\&.h\&.
.SS "const uint64_t cxl_mem_tg::TG_SLEEP = 300 / 1000\fC [static]\fP"

.PP
Definition at line 42 of file cxl_mem_tg\&.h\&.
.PP
Referenced by cxl_mem_tg::cxl_tg_test::tg_clear()\&.
.SS "const uint64_t cxl_mem_tg::TG_FREQ = 400 * 1000\fC [static]\fP"

.PP
Definition at line 43 of file cxl_mem_tg\&.h\&.
.PP
Referenced by cxl_mem_tg::cxl_tg_test::config_input_options()\&.
.SS "const std::map<std::string, uint32_t> cxl_mem_tg::tg_pattern"
\fBInitial value:\fP
.PP
.nf
= {
    {"fixed", TG_DATA_FIXED},   {"prbs7", TG_DATA_PRBS7},
    {"prbs15", TG_DATA_PRBS15}, {"prbs31", TG_DATA_PRBS31},
    {"rot1", TG_DATA_PRBS31},
}
.fi
.PP
Definition at line 67 of file cxl_mem_tg\&.h\&.
.PP
Referenced by cxl_mem_tg::cxl_mem_tg::cxl_mem_tg()\&.
.SS "const int cxl_mem_tg::MEM_TG_CFG_OFFSET = 0x1000"

.PP
Definition at line 86 of file cxl_mem_tg\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for OPAE C API from the source code\&.
