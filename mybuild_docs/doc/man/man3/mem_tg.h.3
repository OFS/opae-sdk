.TH "samples/mem_tg/mem_tg.h" 3 "Wed Nov 22 2023" "Version -.." "OPAE C API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
samples/mem_tg/mem_tg.h
.SH SYNOPSIS
.br
.PP
\fC#include <opae/cxx/core/token\&.h>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <string>\fP
.br
\fC#include 'afu_test\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "class \fBmem_tg::mem_tg\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBmem_tg\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "using \fBmem_tg::test_afu\fP = \fBopae::afu_test::afu\fP"
.br
.ti -1c
.RI "using \fBmem_tg::test_command\fP = \fBopae::afu_test::command\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum { \fBmem_tg::TG_STATUS_ACTIVE\fP = 0x1, \fBmem_tg::TG_STATUS_TIMEOUT\fP = 0x2, \fBmem_tg::TG_STATUS_ERROR\fP = 0x4, \fBmem_tg::TG_STATUS_PASS\fP = 0x8, \fBmem_tg::TG_STATUS_RESPONSE_TIMEOUT\fP = 0x10 }"
.br
.ti -1c
.RI "enum { \fBmem_tg::TG_ADDR_RAND\fP = 0, \fBmem_tg::TG_ADDR_SEQ\fP = 1, \fBmem_tg::TG_ADDR_RAND_SEQ\fP = 2, \fBmem_tg::TG_ADDR_ONE_HOT\fP = 3 }"
.br
.ti -1c
.RI "enum { \fBmem_tg::TG_DATA_FIXED\fP = 0, \fBmem_tg::TG_DATA_PRBS7\fP = 1, \fBmem_tg::TG_DATA_PRBS15\fP = 2, \fBmem_tg::TG_DATA_PRBS31\fP = 3, \fBmem_tg::TG_DATA_ROTATING\fP = 4 }"
.br
.ti -1c
.RI "enum { \fBmem_tg::AFU_DFH\fP = 0x0000, \fBmem_tg::AFU_ID_L\fP = 0x0008, \fBmem_tg::AFU_ID_H\fP = 0x0010, \fBmem_tg::NEXT_AFU\fP = 0x0018, \fBmem_tg::AFU_DFH_RSVD\fP = 0x0020, \fBmem_tg::SCRATCHPAD\fP = 0x0028, \fBmem_tg::MEM_TG_CTRL\fP = 0x0030, \fBmem_tg::MEM_TG_STAT\fP = 0x0038, \fBmem_tg::MEM_TG_CLOCKS\fP = 0x0050 }"
.br
.ti -1c
.RI "enum { \fBmem_tg::TG_VERSION\fP = 0x000, \fBmem_tg::TG_START\fP = 0x004, \fBmem_tg::TG_LOOP_COUNT\fP = 0x008, \fBmem_tg::TG_WRITE_COUNT\fP = 0x00C, \fBmem_tg::TG_READ_COUNT\fP = 0x010, \fBmem_tg::TG_WRITE_REPEAT_COUNT\fP = 0x014, \fBmem_tg::TG_READ_REPEAT_COUNT\fP = 0x018, \fBmem_tg::TG_BURST_LENGTH\fP = 0x01C, \fBmem_tg::TG_CLEAR\fP = 0x020, \fBmem_tg::TG_RW_GEN_IDLE_COUNT\fP = 0x038, \fBmem_tg::TG_RW_GEN_LOOP_IDLE_COUNT\fP = 0x03C, \fBmem_tg::TG_SEQ_START_ADDR_WR_L\fP = 0x040, \fBmem_tg::TG_SEQ_START_ADDR_WR_H\fP = 0x044, \fBmem_tg::TG_ADDR_MODE_WR\fP = 0x048, \fBmem_tg::TG_RAND_SEQ_ADDRS_WR\fP = 0x04C, \fBmem_tg::TG_RETURN_TO_START_ADDR\fP = 0x050, \fBmem_tg::TG_SEQ_ADDR_INCR\fP = 0x074, \fBmem_tg::TG_SEQ_START_ADDR_RD_L\fP = 0x078, \fBmem_tg::TG_SEQ_START_ADDR_RD_H\fP = 0x07C, \fBmem_tg::TG_ADDR_MODE_RD\fP = 0x080, \fBmem_tg::TG_RAND_SEQ_ADDRS_RD\fP = 0x084, \fBmem_tg::TG_PASS\fP = 0x088, \fBmem_tg::TG_FAIL\fP = 0x08C, \fBmem_tg::TG_FAIL_COUNT_L\fP = 0x090, \fBmem_tg::TG_FAIL_COUNT_H\fP = 0x094, \fBmem_tg::TG_FIRST_FAIL_ADDR_L\fP = 0x098, \fBmem_tg::TG_FIRST_FAIL_ADDR_H\fP = 0x09C, \fBmem_tg::TG_TOTAL_READ_COUNT_L\fP = 0x0A0, \fBmem_tg::TG_TOTAL_READ_COUNT_H\fP = 0x0A4, \fBmem_tg::TG_TEST_COMPLETE\fP = 0x0A8, \fBmem_tg::TG_INVERT_BYTEEN\fP = 0x0AC, \fBmem_tg::TG_RESTART_DEFAULT_TRAFFIC\fP = 0x0B0, \fBmem_tg::TG_USER_WORM_EN\fP = 0x0B4, \fBmem_tg::TG_TEST_BYTEEN\fP = 0x0B8, \fBmem_tg::TG_TIMEOUT\fP = 0x0BC, \fBmem_tg::TG_NUM_DATA_GEN\fP = 0x0C4, \fBmem_tg::TG_NUM_BYTEEN_GEN\fP = 0x0C8, \fBmem_tg::TG_RDATA_WIDTH\fP = 0x0DC, \fBmem_tg::TG_ERROR_REPORT\fP = 0x0EC, \fBmem_tg::TG_DATA_RATE_WIDTH_RATIO\fP = 0x0F0, \fBmem_tg::TG_PNF\fP = 0x100, \fBmem_tg::TG_FAIL_EXPECTED_DATA\fP = 0x200, \fBmem_tg::TG_FAIL_READ_DATA\fP = 0x300, \fBmem_tg::TG_DATA_SEED\fP = 0x400, \fBmem_tg::TG_BYTEEN_SEED\fP = 0x200, \fBmem_tg::TG_PPPG_SEL\fP = 0xC00, \fBmem_tg::TG_BYTEEN_SEL\fP = 0xE80 }"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char * \fBmem_tg::AFU_ID\fP = '4DADEA34\-2C78\-48CB\-A3DC\-5B831F5CECBB'"
.br
.ti -1c
.RI "static const uint64_t \fBmem_tg::MEM_TG_TEST_TIMEOUT\fP = 30000"
.br
.ti -1c
.RI "static const uint64_t \fBmem_tg::TEST_SLEEP_INVL\fP = 100"
.br
.ti -1c
.RI "const std::map< std::string, uint32_t > \fBmem_tg::tg_pattern\fP"
.br
.ti -1c
.RI "const int \fBmem_tg::MEM_TG_CFG_OFFSET\fP = 0x1000"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for OPAE C API from the source code\&.
