.TH "include/opae/types_enum.h" 3 "Wed Nov 22 2023" "Version -.." "OPAE C API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/opae/types_enum.h \- Definitions of enumerated types for the OPAE C API\&.  

.SH SYNOPSIS
.br
.PP
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBfpga_result\fP { \fBFPGA_OK\fP = 0, \fBFPGA_INVALID_PARAM\fP, \fBFPGA_BUSY\fP, \fBFPGA_EXCEPTION\fP, \fBFPGA_NOT_FOUND\fP, \fBFPGA_NO_MEMORY\fP, \fBFPGA_NOT_SUPPORTED\fP, \fBFPGA_NO_DRIVER\fP, \fBFPGA_NO_DAEMON\fP, \fBFPGA_NO_ACCESS\fP, \fBFPGA_RECONF_ERROR\fP }"
.br
.ti -1c
.RI "enum \fBfpga_event_type\fP { \fBFPGA_EVENT_INTERRUPT\fP = 0, \fBFPGA_EVENT_ERROR\fP, \fBFPGA_EVENT_POWER_THERMAL\fP }"
.br
.ti -1c
.RI "enum \fBfpga_accelerator_state\fP { \fBFPGA_ACCELERATOR_ASSIGNED\fP = 0, \fBFPGA_ACCELERATOR_UNASSIGNED\fP }"
.br
.ti -1c
.RI "enum \fBfpga_objtype\fP { \fBFPGA_DEVICE\fP = 0, \fBFPGA_ACCELERATOR\fP }"
.br
.ti -1c
.RI "enum \fBfpga_interface\fP { \fBFPGA_IFC_DFL\fP = 0, \fBFPGA_IFC_VFIO\fP, \fBFPGA_IFC_SIM_DFL\fP, \fBFPGA_IFC_SIM_VFIO\fP, \fBFPGA_IFC_UIO\fP }"
.br
.ti -1c
.RI "enum \fBfpga_buffer_flags\fP { \fBFPGA_BUF_PREALLOCATED\fP = (1u << 0), \fBFPGA_BUF_QUIET\fP = (1u << 1), \fBFPGA_BUF_READ_ONLY\fP = (1u << 2) }"
.br
.ti -1c
.RI "enum \fBfpga_open_flags\fP { \fBFPGA_OPEN_SHARED\fP = (1u << 0) }"
.br
.ti -1c
.RI "enum \fBfpga_reconf_flags\fP { \fBFPGA_RECONF_FORCE\fP = (1u << 0), \fBFPGA_RECONF_SKIP_USRCLK\fP = (1u << 1) }"
.br
.ti -1c
.RI "enum \fBfpga_sysobject_flags\fP { \fBFPGA_OBJECT_SYNC\fP = (1u << 0), \fBFPGA_OBJECT_GLOB\fP = (1u << 1), \fBFPGA_OBJECT_RAW\fP, \fBFPGA_OBJECT_RECURSE_ONE\fP, \fBFPGA_OBJECT_RECURSE_ALL\fP }"
.br
.ti -1c
.RI "enum \fBfpga_sysobject_type\fP { \fBFPGA_OBJECT_CONTAINER\fP, \fBFPGA_OBJECT_ATTRIBUTE\fP }"
.br
.ti -1c
.RI "enum \fBfpga_metric_type\fP { \fBFPGA_METRIC_TYPE_POWER\fP, \fBFPGA_METRIC_TYPE_THERMAL\fP, \fBFPGA_METRIC_TYPE_PERFORMANCE_CTR\fP, \fBFPGA_METRIC_TYPE_AFU\fP, \fBFPGA_METRIC_TYPE_UNKNOWN\fP }"
.br
.ti -1c
.RI "enum \fBfpga_metric_datatype\fP { \fBFPGA_METRIC_DATATYPE_INT\fP, \fBFPGA_METRIC_DATATYPE_FLOAT\fP, \fBFPGA_METRIC_DATATYPE_DOUBLE\fP, \fBFPGA_METRIC_DATATYPE_BOOL\fP, \fBFPGA_METRIC_DATATYPE_UNKNOWN\fP }"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definitions of enumerated types for the OPAE C API\&. 

This file defines return and error codes, event and object types, states, and flags as used or reported by OPAE C API functions\&. 
.PP
Definition in file \fBtypes_enum\&.h\fP\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBfpga_result\fP"
OPAE C API function return codes
.PP
Every public API function exported by the OPAE C library will return one of these codes\&. Usually, FPGA_OK denotes successful completion of the requested operation, while any return code \fIother\fP than FPGA_OK indicates an error or other deviation from the expected behavior\&. Users of the OPAE C API should always check the return codes of the APIs they call, and not use output parameters of functions that did not execute successfully\&.
.PP
The \fBfpgaErrStr()\fP function converts error codes into printable messages\&.
.PP
OPAE also has a logging mechanism that allows a developer to get more information about why a particular call failed with a specific message\&. If enabled, any function that returns an error code different from FPGA_OK will also print out a message with further details\&. This mechanism can be enabled by setting the environment variable \fCLIBOPAE_LOG\fP to 1 before running the respective application\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFPGA_OK \fP\fP
Operation completed successfully 
.TP
\fB\fIFPGA_INVALID_PARAM \fP\fP
Invalid parameter supplied 
.TP
\fB\fIFPGA_BUSY \fP\fP
Resource is busy 
.TP
\fB\fIFPGA_EXCEPTION \fP\fP
An exception occurred 
.TP
\fB\fIFPGA_NOT_FOUND \fP\fP
A required resource was not found 
.TP
\fB\fIFPGA_NO_MEMORY \fP\fP
Not enough memory to complete operation 
.TP
\fB\fIFPGA_NOT_SUPPORTED \fP\fP
Requested operation is not supported 
.TP
\fB\fIFPGA_NO_DRIVER \fP\fP
Driver is not loaded 
.TP
\fB\fIFPGA_NO_DAEMON \fP\fP
FPGA Daemon (fpgad) is not running 
.TP
\fB\fIFPGA_NO_ACCESS \fP\fP
Insufficient privileges or permissions 
.TP
\fB\fIFPGA_RECONF_ERROR \fP\fP
Error while reconfiguring FPGA 
.PP
Definition at line 57 of file types_enum\&.h\&.
.SS "enum \fBfpga_event_type\fP"
FPGA events
.PP
OPAE currently defines the following event types that applications can register for\&. Note that not all FPGA resources and target platforms may support all event types\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFPGA_EVENT_INTERRUPT \fP\fP
Interrupt generated by an accelerator 
.TP
\fB\fIFPGA_EVENT_ERROR \fP\fP
Infrastructure error event 
.TP
\fB\fIFPGA_EVENT_POWER_THERMAL \fP\fP
Infrastructure thermal event 
.PP
Definition at line 78 of file types_enum\&.h\&.
.SS "enum \fBfpga_accelerator_state\fP"
accelerator state 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFPGA_ACCELERATOR_ASSIGNED \fP\fP
accelerator is opened exclusively by another process 
.TP
\fB\fIFPGA_ACCELERATOR_UNASSIGNED \fP\fP
accelerator is free to be opened 
.PP
Definition at line 93 of file types_enum\&.h\&.
.SS "enum \fBfpga_objtype\fP"
OPAE FPGA resources (objects)
.PP
These are the FPGA resources currently supported by the OPAE object model\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFPGA_DEVICE \fP\fP
FPGA_DEVICE objects represent FPGA devices and their management functionality\&. These objects can be opened (typically requires a certain privilege level or access permissions) and used for management functions like fpgaReconfigreSlot()\&. 
.TP
\fB\fIFPGA_ACCELERATOR \fP\fP
FPGA_ACCELERATOR objects represent allocatable units for accessing accelerated functions on the FPGA\&. They are frequently opened for interacting via control registers (MMIO), shared memory, or other, possibly platform-specific functions\&. 
.PP
Definition at line 105 of file types_enum\&.h\&.
.SS "enum \fBfpga_interface\fP"
OPAE plugin interface
.PP
These are the supported plugin interfaces\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFPGA_IFC_DFL \fP\fP
FPGA_IFC_DFL indicates that the plugin interface is the Device Feature List driver suite\&. 
.TP
\fB\fIFPGA_IFC_VFIO \fP\fP
FPGA_IFC_VFIO indicates that the plugin interface is the vfio-pci driver\&. 
.TP
\fB\fIFPGA_IFC_SIM_DFL \fP\fP
FPGA_IFC_SIM_DFL indicates that the plugin interface is the AFU Simulation Environment simulating DFL drivers\&. 
.TP
\fB\fIFPGA_IFC_SIM_VFIO \fP\fP
FPGA_IFC_SIM_VFIO indicates that the plugin interface is the AFU Simulation Environment simulating vfio-pci\&. 
.TP
\fB\fIFPGA_IFC_UIO \fP\fP
FPGA_IFC_UIO indicates that the plugin interface is the uio-dfl driver\&. 
.PP
Definition at line 122 of file types_enum\&.h\&.
.SS "enum \fBfpga_buffer_flags\fP"
Buffer flags
.PP
These flags can be passed to the \fBfpgaPrepareBuffer()\fP function\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFPGA_BUF_PREALLOCATED \fP\fP
Use existing buffer 
.TP
\fB\fIFPGA_BUF_QUIET \fP\fP
Suppress error messages 
.TP
\fB\fIFPGA_BUF_READ_ONLY \fP\fP
Buffer is read-only 
.PP
Definition at line 145 of file types_enum\&.h\&.
.SS "enum \fBfpga_open_flags\fP"
Open flags
.PP
These flags can be passed to the \fBfpgaOpen()\fP function\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFPGA_OPEN_SHARED \fP\fP
Open FPGA resource for shared access 
.PP
Definition at line 156 of file types_enum\&.h\&.
.SS "enum \fBfpga_reconf_flags\fP"
Reconfiguration flags
.PP
These flags can be passed to the \fBfpgaReconfigureSlot()\fP function\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFPGA_RECONF_FORCE \fP\fP
Reconfigure the slot without checking if it is in use 
.TP
\fB\fIFPGA_RECONF_SKIP_USRCLK \fP\fP
Don't configure AFU user clocks as part of PR 
.PP
Definition at line 166 of file types_enum\&.h\&.
.SS "enum \fBfpga_sysobject_flags\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFPGA_OBJECT_SYNC \fP\fP
Synchronize data from driver 
.TP
\fB\fIFPGA_OBJECT_GLOB \fP\fP
Treat names as glob expressions 
.TP
\fB\fIFPGA_OBJECT_RAW \fP\fP
Read or write object data as raw bytes 
.TP
\fB\fIFPGA_OBJECT_RECURSE_ONE \fP\fP
Create subobjects one level down from containers 
.TP
\fB\fIFPGA_OBJECT_RECURSE_ALL \fP\fP
Create subobjects all levels from from containers 
.PP
Definition at line 173 of file types_enum\&.h\&.
.SS "enum \fBfpga_sysobject_type\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFPGA_OBJECT_CONTAINER \fP\fP
Represents a group of objects 
.TP
\fB\fIFPGA_OBJECT_ATTRIBUTE \fP\fP
An object with an attribute value that can be read/written 
.PP
Definition at line 186 of file types_enum\&.h\&.
.SS "enum \fBfpga_metric_type\fP"
fpga metrics types opae defines power,thermal, performance counter and afu metric types 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFPGA_METRIC_TYPE_POWER \fP\fP
.TP
\fB\fIFPGA_METRIC_TYPE_THERMAL \fP\fP
.TP
\fB\fIFPGA_METRIC_TYPE_PERFORMANCE_CTR \fP\fP
.TP
\fB\fIFPGA_METRIC_TYPE_AFU \fP\fP
.TP
\fB\fIFPGA_METRIC_TYPE_UNKNOWN \fP\fP
.PP
Definition at line 198 of file types_enum\&.h\&.
.SS "enum \fBfpga_metric_datatype\fP"
Metrics data type 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFPGA_METRIC_DATATYPE_INT \fP\fP
.TP
\fB\fIFPGA_METRIC_DATATYPE_FLOAT \fP\fP
.TP
\fB\fIFPGA_METRIC_DATATYPE_DOUBLE \fP\fP
.TP
\fB\fIFPGA_METRIC_DATATYPE_BOOL \fP\fP
.TP
\fB\fIFPGA_METRIC_DATATYPE_UNKNOWN \fP\fP
.PP
Definition at line 210 of file types_enum\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for OPAE C API from the source code\&.
