.TH "opae::fpga::types::sysobject" 3 "Wed Nov 22 2023" "Version -.." "OPAE C API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
opae::fpga::types::sysobject
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <opae/cxx/core/sysobject\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::shared_ptr< \fBsysobject\fP > \fBptr_t\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBsysobject\fP ()=delete"
.br
.ti -1c
.RI "\fBsysobject\fP (const \fBsysobject\fP &o)=delete"
.br
.ti -1c
.RI "\fBsysobject\fP & \fBoperator=\fP (const \fBsysobject\fP &o)=delete"
.br
.ti -1c
.RI "\fBsysobject::ptr_t\fP \fBget\fP (const std::string &name, int flags=0)"
.br
.RI "Get a sysobject from an object\&. This will be read-write if its parent was created from a handle\&.\&. "
.ti -1c
.RI "\fBsysobject::ptr_t\fP \fBget\fP (int index)"
.br
.RI "Get a sysobject from a container object\&. This will be read-write if its parent was created from a handle\&.\&. "
.ti -1c
.RI "virtual \fB~sysobject\fP ()"
.br
.ti -1c
.RI "uint32_t \fBsize\fP () const"
.br
.RI "Get the size (in bytes) of the object\&. "
.ti -1c
.RI "uint64_t \fBread64\fP (int flags=0) const"
.br
.RI "Read a 64-bit value from an FPGA object\&. The value is assumed to be in string format and will be parsed\&. See flags below for changing that behavior\&. "
.ti -1c
.RI "void \fBwrite64\fP (uint64_t value, int flags=0) const"
.br
.RI "Write 64-bit value to an FPGA object\&. The value will be converted to string before writing\&. See flags below for changing that behavior\&. "
.ti -1c
.RI "std::vector< uint8_t > \fBbytes\fP (int flags=0) const"
.br
.RI "Get all raw bytes from the object\&. "
.ti -1c
.RI "std::vector< uint8_t > \fBbytes\fP (uint32_t offset, uint32_t \fBsize\fP, int flags=0) const"
.br
.RI "Get a subset of raw bytes from the object\&. "
.ti -1c
.RI "enum \fBfpga_sysobject_type\fP \fBtype\fP () const"
.br
.ti -1c
.RI "\fBfpga_object\fP \fBc_type\fP () const"
.br
.ti -1c
.RI "\fBoperator fpga_object\fP () const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBsysobject::ptr_t\fP \fBget\fP (\fBtoken::ptr_t\fP t, const std::string &name, int flags=0)"
.br
.RI "Get a sysobject from a token\&. This will be read-only\&. "
.ti -1c
.RI "static \fBsysobject::ptr_t\fP \fBget\fP (\fBhandle::ptr_t\fP h, const std::string &name, int flags=0)"
.br
.RI "Get a sysobject from a handle\&. This will be read-write\&. "
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBsysobject\fP (\fBfpga_object\fP sysobj, \fBtoken::ptr_t\fP \fBtoken\fP, \fBhandle::ptr_t\fP hnd)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBfpga_object\fP \fBsysobject_\fP"
.br
.ti -1c
.RI "\fBtoken::ptr_t\fP \fBtoken_\fP"
.br
.ti -1c
.RI "\fBhandle::ptr_t\fP \fBhandle_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Wraps the OPAE fpga_object primitive\&. sysobject's are created from a call to fpgaTokenGetObject, fpgaHandleGetObject, or fpgaObjectGetObject 
.PP
Definition at line 42 of file sysobject\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef std::shared_ptr<\fBsysobject\fP> \fBopae::fpga::types::sysobject::ptr_t\fP"

.PP
Definition at line 44 of file sysobject\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "opae::fpga::types::sysobject::sysobject ()\fC [delete]\fP"

.SS "opae::fpga::types::sysobject::sysobject (const \fBsysobject\fP & o)\fC [delete]\fP"

.SS "virtual opae::fpga::types::sysobject::~sysobject ()\fC [virtual]\fP"

.SS "opae::fpga::types::sysobject::sysobject (\fBfpga_object\fP sysobj, \fBtoken::ptr_t\fP token, \fBhandle::ptr_t\fP hnd)\fC [private]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBsysobject\fP& opae::fpga::types::sysobject::operator= (const \fBsysobject\fP & o)\fC [delete]\fP"

.SS "static \fBsysobject::ptr_t\fP opae::fpga::types::sysobject::get (\fBtoken::ptr_t\fP t, const std::string & name, int flags = \fC0\fP)\fC [static]\fP"

.PP
Get a sysobject from a token\&. This will be read-only\&. 
.PP
\fBParameters\fP
.RS 4
\fIt\fP Token object representing a resource\&. 
.br
\fIname\fP An identifier representing an object belonging to a resource represented by the token\&. 
.br
\fIflags\fP Control behavior of object identification and creation\&. FPGA_OBJECT_GLOB is used to indicate that the name should be treated as a globbing expression\&. FPGA_OBJECT_RECURSE_ONE indicates that subobjects be created for objects one level down from the object identified by name\&. FPGA_OBJECT_RECURSE_ALL indicates that subobjects be created for all objects below the current object identified by name\&.
.RE
.PP
\fBReturns\fP
.RS 4
A shared_ptr to a sysobject instance\&. 
.RE
.PP

.SS "static \fBsysobject::ptr_t\fP opae::fpga::types::sysobject::get (\fBhandle::ptr_t\fP h, const std::string & name, int flags = \fC0\fP)\fC [static]\fP"

.PP
Get a sysobject from a handle\&. This will be read-write\&. 
.PP
\fBParameters\fP
.RS 4
\fIh\fP Handle object representing an open resource\&. 
.br
\fIname\fP An identifier representing an object belonging to a resource represented by the handle\&. 
.br
\fIflags\fP Control behavior of object identification and creation\&. FPGA_OBJECT_GLOB is used to indicate that the name should be treated as a globbing expression\&. FPGA_OBJECT_RECURSE_ONE indicates that subobjects be created for objects one level down from the object identified by name\&. FPGA_OBJECT_RECURSE_ALL indicates that subobjects be created for all objects below the current object identified by name\&.
.RE
.PP
\fBReturns\fP
.RS 4
A shared_ptr to a sysobject instance\&. 
.RE
.PP

.SS "\fBsysobject::ptr_t\fP opae::fpga::types::sysobject::get (const std::string & name, int flags = \fC0\fP)"

.PP
Get a sysobject from an object\&. This will be read-write if its parent was created from a handle\&.\&. 
.PP
\fBParameters\fP
.RS 4
\fIname\fP An identifier representing an object belonging to this object\&. 
.br
\fIflags\fP Control behavior of object identification and creation\&. FPGA_OBJECT_GLOB is used to indicate that the name should be treated as a globbing expression\&. FPGA_OBJECT_RECURSE_ONE indicates that subobjects be created for objects one level down from the object identified by name\&. FPGA_OBJECT_RECURSE_ALL indicates that subobjects be created for all objects\&. Flags are defaulted to 0 meaning no flags\&.
.RE
.PP
\fBReturns\fP
.RS 4
A shared_ptr to a sysobject instance\&. 
.RE
.PP

.SS "\fBsysobject::ptr_t\fP opae::fpga::types::sysobject::get (int index)"

.PP
Get a sysobject from a container object\&. This will be read-write if its parent was created from a handle\&.\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP An index number to get\&.
.RE
.PP
\fBReturns\fP
.RS 4
A shared_ptr to a sysobject instance\&. 
.RE
.PP

.SS "uint32_t opae::fpga::types::sysobject::size () const"

.PP
Get the size (in bytes) of the object\&. 
.PP
\fBReturns\fP
.RS 4
The number of bytes that the object occupies in memory\&. 
.RE
.PP

.SS "uint64_t opae::fpga::types::sysobject::read64 (int flags = \fC0\fP) const"

.PP
Read a 64-bit value from an FPGA object\&. The value is assumed to be in string format and will be parsed\&. See flags below for changing that behavior\&. 
.PP
\fBParameters\fP
.RS 4
\fIflags\fP Flags that control how the object is read If FPGA_OBJECT_SYNC is used then object will update its buffered copy before retrieving the data\&. If FPGA_OBJECT_RAW is used, then the data will be read as raw bytes into the uint64_t pointer variable\&. Flags are defaulted to 0 meaning no flags\&.
.RE
.PP
\fBReturns\fP
.RS 4
A 64-bit value from the object\&. 
.RE
.PP

.SS "void opae::fpga::types::sysobject::write64 (uint64_t value, int flags = \fC0\fP) const"

.PP
Write 64-bit value to an FPGA object\&. The value will be converted to string before writing\&. See flags below for changing that behavior\&. 
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP The value to write to the object\&. 
.br
\fIflags\fP Flags that control how the object is written If FPGA_OBJECT_RAW is used, then the value will be written as raw bytes\&. Flags are defaulted to 0 meaning no flags\&.
.RE
.PP
\fBNote\fP
.RS 4
This operation will force a sync operation to update its cached buffer 
.RE
.PP

.SS "std::vector<uint8_t> opae::fpga::types::sysobject::bytes (int flags = \fC0\fP) const"

.PP
Get all raw bytes from the object\&. 
.PP
\fBParameters\fP
.RS 4
\fIflags\fP Flags that control how object is read If FPGA_OBJECT_SYNC is used then object will update its buffered copy before retrieving the data\&.
.RE
.PP
\fBReturns\fP
.RS 4
A vector of all bytes in the object\&. 
.RE
.PP

.SS "std::vector<uint8_t> opae::fpga::types::sysobject::bytes (uint32_t offset, uint32_t size, int flags = \fC0\fP) const"

.PP
Get a subset of raw bytes from the object\&. 
.PP
\fBParameters\fP
.RS 4
\fIoffset\fP The bytes offset for the start of the returned vector\&. 
.br
\fIsize\fP The number of bytes for the returned vector\&. 
.br
\fIflags\fP Flags that control how object is read If FPGA_OBJECT_SYNC is used then object will update its buffered copy before retrieving the data\&.
.RE
.PP
\fBReturns\fP
.RS 4
A vector of size bytes in the object starting at offset\&. 
.RE
.PP

.SS "enum \fBfpga_sysobject_type\fP opae::fpga::types::sysobject::type () const"
Get the object type (attribute or container) 
.SS "\fBfpga_object\fP opae::fpga::types::sysobject::c_type () const\fC [inline]\fP"
Retrieve the underlying fpga_object primitive\&. 
.PP
Definition at line 185 of file sysobject\&.h\&.
.PP
References sysobject_\&.
.SS "opae::fpga::types::sysobject::operator \fBfpga_object\fP () const\fC [inline]\fP"
Retrieve the underlying fpga_object primitive\&. 
.PP
Definition at line 189 of file sysobject\&.h\&.
.PP
References sysobject_\&.
.SH "Field Documentation"
.PP 
.SS "\fBfpga_object\fP opae::fpga::types::sysobject::sysobject_\fC [private]\fP"

.PP
Definition at line 193 of file sysobject\&.h\&.
.PP
Referenced by c_type(), and operator fpga_object()\&.
.SS "\fBtoken::ptr_t\fP opae::fpga::types::sysobject::token_\fC [private]\fP"

.PP
Definition at line 194 of file sysobject\&.h\&.
.SS "\fBhandle::ptr_t\fP opae::fpga::types::sysobject::handle_\fC [private]\fP"

.PP
Definition at line 195 of file sysobject\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for OPAE C API from the source code\&.
