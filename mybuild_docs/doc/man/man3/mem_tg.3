.TH "mem_tg" 3 "Wed Nov 22 2023" "Version -.." "OPAE C API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mem_tg
.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "class \fBmem_tg\fP"
.br
.ti -1c
.RI "class \fBtg_test\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "using \fBtest_afu\fP = \fBopae::afu_test::afu\fP"
.br
.ti -1c
.RI "using \fBtest_command\fP = \fBopae::afu_test::command\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum { \fBTG_STATUS_ACTIVE\fP = 0x1, \fBTG_STATUS_TIMEOUT\fP = 0x2, \fBTG_STATUS_ERROR\fP = 0x4, \fBTG_STATUS_PASS\fP = 0x8, \fBTG_STATUS_RESPONSE_TIMEOUT\fP = 0x10 }"
.br
.ti -1c
.RI "enum { \fBTG_ADDR_RAND\fP = 0, \fBTG_ADDR_SEQ\fP = 1, \fBTG_ADDR_RAND_SEQ\fP = 2, \fBTG_ADDR_ONE_HOT\fP = 3 }"
.br
.ti -1c
.RI "enum { \fBTG_DATA_FIXED\fP = 0, \fBTG_DATA_PRBS7\fP = 1, \fBTG_DATA_PRBS15\fP = 2, \fBTG_DATA_PRBS31\fP = 3, \fBTG_DATA_ROTATING\fP = 4 }"
.br
.ti -1c
.RI "enum { \fBAFU_DFH\fP = 0x0000, \fBAFU_ID_L\fP = 0x0008, \fBAFU_ID_H\fP = 0x0010, \fBNEXT_AFU\fP = 0x0018, \fBAFU_DFH_RSVD\fP = 0x0020, \fBSCRATCHPAD\fP = 0x0028, \fBMEM_TG_CTRL\fP = 0x0030, \fBMEM_TG_STAT\fP = 0x0038, \fBMEM_TG_CLOCKS\fP = 0x0050 }"
.br
.ti -1c
.RI "enum { \fBTG_VERSION\fP = 0x000, \fBTG_START\fP = 0x004, \fBTG_LOOP_COUNT\fP = 0x008, \fBTG_WRITE_COUNT\fP = 0x00C, \fBTG_READ_COUNT\fP = 0x010, \fBTG_WRITE_REPEAT_COUNT\fP = 0x014, \fBTG_READ_REPEAT_COUNT\fP = 0x018, \fBTG_BURST_LENGTH\fP = 0x01C, \fBTG_CLEAR\fP = 0x020, \fBTG_RW_GEN_IDLE_COUNT\fP = 0x038, \fBTG_RW_GEN_LOOP_IDLE_COUNT\fP = 0x03C, \fBTG_SEQ_START_ADDR_WR_L\fP = 0x040, \fBTG_SEQ_START_ADDR_WR_H\fP = 0x044, \fBTG_ADDR_MODE_WR\fP = 0x048, \fBTG_RAND_SEQ_ADDRS_WR\fP = 0x04C, \fBTG_RETURN_TO_START_ADDR\fP = 0x050, \fBTG_SEQ_ADDR_INCR\fP = 0x074, \fBTG_SEQ_START_ADDR_RD_L\fP = 0x078, \fBTG_SEQ_START_ADDR_RD_H\fP = 0x07C, \fBTG_ADDR_MODE_RD\fP = 0x080, \fBTG_RAND_SEQ_ADDRS_RD\fP = 0x084, \fBTG_PASS\fP = 0x088, \fBTG_FAIL\fP = 0x08C, \fBTG_FAIL_COUNT_L\fP = 0x090, \fBTG_FAIL_COUNT_H\fP = 0x094, \fBTG_FIRST_FAIL_ADDR_L\fP = 0x098, \fBTG_FIRST_FAIL_ADDR_H\fP = 0x09C, \fBTG_TOTAL_READ_COUNT_L\fP = 0x0A0, \fBTG_TOTAL_READ_COUNT_H\fP = 0x0A4, \fBTG_TEST_COMPLETE\fP = 0x0A8, \fBTG_INVERT_BYTEEN\fP = 0x0AC, \fBTG_RESTART_DEFAULT_TRAFFIC\fP = 0x0B0, \fBTG_USER_WORM_EN\fP = 0x0B4, \fBTG_TEST_BYTEEN\fP = 0x0B8, \fBTG_TIMEOUT\fP = 0x0BC, \fBTG_NUM_DATA_GEN\fP = 0x0C4, \fBTG_NUM_BYTEEN_GEN\fP = 0x0C8, \fBTG_RDATA_WIDTH\fP = 0x0DC, \fBTG_ERROR_REPORT\fP = 0x0EC, \fBTG_DATA_RATE_WIDTH_RATIO\fP = 0x0F0, \fBTG_PNF\fP = 0x100, \fBTG_FAIL_EXPECTED_DATA\fP = 0x200, \fBTG_FAIL_READ_DATA\fP = 0x300, \fBTG_DATA_SEED\fP = 0x400, \fBTG_BYTEEN_SEED\fP = 0x200, \fBTG_PPPG_SEL\fP = 0xC00, \fBTG_BYTEEN_SEL\fP = 0xE80 }"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char * \fBAFU_ID\fP = '4DADEA34\-2C78\-48CB\-A3DC\-5B831F5CECBB'"
.br
.ti -1c
.RI "static const uint64_t \fBMEM_TG_TEST_TIMEOUT\fP = 30000"
.br
.ti -1c
.RI "static const uint64_t \fBTEST_SLEEP_INVL\fP = 100"
.br
.ti -1c
.RI "const std::map< std::string, uint32_t > \fBtg_pattern\fP"
.br
.ti -1c
.RI "const int \fBMEM_TG_CFG_OFFSET\fP = 0x1000"
.br
.ti -1c
.RI "std::mutex \fBtg_print_mutex\fP"
.br
.ti -1c
.RI "std::mutex \fBtg_start_write_mutex\fP"
.br
.ti -1c
.RI "std::condition_variable \fBtg_cv\fP"
.br
.ti -1c
.RI "std::atomic< int > \fBtg_waiting_threads_counter\fP"
.br
.ti -1c
.RI "int \fBtg_num_threads\fP = \-1"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "using \fBmem_tg::test_afu\fP = typedef \fBopae::afu_test::afu\fP"

.PP
Definition at line 136 of file mem_tg\&.h\&.
.SS "using \fBmem_tg::test_command\fP = typedef \fBopae::afu_test::command\fP"

.PP
Definition at line 137 of file mem_tg\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITG_STATUS_ACTIVE \fP\fP
.TP
\fB\fITG_STATUS_TIMEOUT \fP\fP
.TP
\fB\fITG_STATUS_ERROR \fP\fP
.TP
\fB\fITG_STATUS_PASS \fP\fP
.TP
\fB\fITG_STATUS_RESPONSE_TIMEOUT \fP\fP
.PP
Definition at line 41 of file mem_tg\&.h\&.
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITG_ADDR_RAND \fP\fP
.TP
\fB\fITG_ADDR_SEQ \fP\fP
.TP
\fB\fITG_ADDR_RAND_SEQ \fP\fP
.TP
\fB\fITG_ADDR_ONE_HOT \fP\fP
.PP
Definition at line 49 of file mem_tg\&.h\&.
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITG_DATA_FIXED \fP\fP
.TP
\fB\fITG_DATA_PRBS7 \fP\fP
.TP
\fB\fITG_DATA_PRBS15 \fP\fP
.TP
\fB\fITG_DATA_PRBS31 \fP\fP
.TP
\fB\fITG_DATA_ROTATING \fP\fP
.PP
Definition at line 56 of file mem_tg\&.h\&.
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIAFU_DFH \fP\fP
.TP
\fB\fIAFU_ID_L \fP\fP
.TP
\fB\fIAFU_ID_H \fP\fP
.TP
\fB\fINEXT_AFU \fP\fP
.TP
\fB\fIAFU_DFH_RSVD \fP\fP
.TP
\fB\fISCRATCHPAD \fP\fP
.TP
\fB\fIMEM_TG_CTRL \fP\fP
.TP
\fB\fIMEM_TG_STAT \fP\fP
.TP
\fB\fIMEM_TG_CLOCKS \fP\fP
.PP
Definition at line 72 of file mem_tg\&.h\&.
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITG_VERSION \fP\fP
.TP
\fB\fITG_START \fP\fP
.TP
\fB\fITG_LOOP_COUNT \fP\fP
.TP
\fB\fITG_WRITE_COUNT \fP\fP
.TP
\fB\fITG_READ_COUNT \fP\fP
.TP
\fB\fITG_WRITE_REPEAT_COUNT \fP\fP
.TP
\fB\fITG_READ_REPEAT_COUNT \fP\fP
.TP
\fB\fITG_BURST_LENGTH \fP\fP
.TP
\fB\fITG_CLEAR \fP\fP
.TP
\fB\fITG_RW_GEN_IDLE_COUNT \fP\fP
.TP
\fB\fITG_RW_GEN_LOOP_IDLE_COUNT \fP\fP
.TP
\fB\fITG_SEQ_START_ADDR_WR_L \fP\fP
.TP
\fB\fITG_SEQ_START_ADDR_WR_H \fP\fP
.TP
\fB\fITG_ADDR_MODE_WR \fP\fP
.TP
\fB\fITG_RAND_SEQ_ADDRS_WR \fP\fP
.TP
\fB\fITG_RETURN_TO_START_ADDR \fP\fP
.TP
\fB\fITG_SEQ_ADDR_INCR \fP\fP
.TP
\fB\fITG_SEQ_START_ADDR_RD_L \fP\fP
.TP
\fB\fITG_SEQ_START_ADDR_RD_H \fP\fP
.TP
\fB\fITG_ADDR_MODE_RD \fP\fP
.TP
\fB\fITG_RAND_SEQ_ADDRS_RD \fP\fP
.TP
\fB\fITG_PASS \fP\fP
.TP
\fB\fITG_FAIL \fP\fP
.TP
\fB\fITG_FAIL_COUNT_L \fP\fP
.TP
\fB\fITG_FAIL_COUNT_H \fP\fP
.TP
\fB\fITG_FIRST_FAIL_ADDR_L \fP\fP
.TP
\fB\fITG_FIRST_FAIL_ADDR_H \fP\fP
.TP
\fB\fITG_TOTAL_READ_COUNT_L \fP\fP
.TP
\fB\fITG_TOTAL_READ_COUNT_H \fP\fP
.TP
\fB\fITG_TEST_COMPLETE \fP\fP
.TP
\fB\fITG_INVERT_BYTEEN \fP\fP
.TP
\fB\fITG_RESTART_DEFAULT_TRAFFIC \fP\fP
.TP
\fB\fITG_USER_WORM_EN \fP\fP
.TP
\fB\fITG_TEST_BYTEEN \fP\fP
.TP
\fB\fITG_TIMEOUT \fP\fP
.TP
\fB\fITG_NUM_DATA_GEN \fP\fP
.TP
\fB\fITG_NUM_BYTEEN_GEN \fP\fP
.TP
\fB\fITG_RDATA_WIDTH \fP\fP
.TP
\fB\fITG_ERROR_REPORT \fP\fP
.TP
\fB\fITG_DATA_RATE_WIDTH_RATIO \fP\fP
.TP
\fB\fITG_PNF \fP\fP
.TP
\fB\fITG_FAIL_EXPECTED_DATA \fP\fP
.TP
\fB\fITG_FAIL_READ_DATA \fP\fP
.TP
\fB\fITG_DATA_SEED \fP\fP
.TP
\fB\fITG_BYTEEN_SEED \fP\fP
.TP
\fB\fITG_PPPG_SEL \fP\fP
.TP
\fB\fITG_BYTEEN_SEL \fP\fP
.PP
Definition at line 86 of file mem_tg\&.h\&.
.SH "Variable Documentation"
.PP 
.SS "const char* mem_tg::AFU_ID = '4DADEA34\-2C78\-48CB\-A3DC\-5B831F5CECBB'"

.PP
Definition at line 36 of file mem_tg\&.h\&.
.PP
Referenced by mem_tg::tg_test::afu_id()\&.
.SS "const uint64_t mem_tg::MEM_TG_TEST_TIMEOUT = 30000\fC [static]\fP"

.PP
Definition at line 38 of file mem_tg\&.h\&.
.PP
Referenced by mem_tg::tg_test::tg_wait_test_completion()\&.
.SS "const uint64_t mem_tg::TEST_SLEEP_INVL = 100\fC [static]\fP"

.PP
Definition at line 39 of file mem_tg\&.h\&.
.SS "const std::map<std::string, uint32_t> mem_tg::tg_pattern"
\fBInitial value:\fP
.PP
.nf
= {
  { "fixed",  TG_DATA_FIXED},
  { "prbs7",  TG_DATA_PRBS7},
  { "prbs15", TG_DATA_PRBS15},
  { "prbs31", TG_DATA_PRBS31},
  { "rot1",   TG_DATA_PRBS31},
}
.fi
.PP
Definition at line 64 of file mem_tg\&.h\&.
.PP
Referenced by mem_tg::mem_tg::mem_tg()\&.
.SS "const int mem_tg::MEM_TG_CFG_OFFSET = 0x1000"

.PP
Definition at line 83 of file mem_tg\&.h\&.
.PP
Referenced by mem_tg::tg_test::config_input_options()\&.
.SS "std::mutex mem_tg::tg_print_mutex"

.PP
Definition at line 46 of file tg_test\&.h\&.
.PP
Referenced by mem_tg::tg_test::tg_perf()\&.
.SS "std::mutex mem_tg::tg_start_write_mutex"

.PP
Definition at line 47 of file tg_test\&.h\&.
.PP
Referenced by mem_tg::tg_test::run_mem_test()\&.
.SS "std::condition_variable mem_tg::tg_cv"

.PP
Definition at line 48 of file tg_test\&.h\&.
.PP
Referenced by mem_tg::tg_test::run_mem_test()\&.
.SS "std::atomic<int> mem_tg::tg_waiting_threads_counter"

.PP
Definition at line 49 of file tg_test\&.h\&.
.PP
Referenced by mem_tg::tg_test::run(), and mem_tg::tg_test::run_mem_test()\&.
.SS "int mem_tg::tg_num_threads = \-1"

.PP
Definition at line 50 of file tg_test\&.h\&.
.PP
Referenced by mem_tg::tg_test::run(), and mem_tg::tg_test::run_mem_test()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for OPAE C API from the source code\&.
