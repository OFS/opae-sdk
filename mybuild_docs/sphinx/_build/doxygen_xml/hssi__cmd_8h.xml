<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hssi__cmd_8h" kind="file" language="C++">
    <compoundname>hssi_cmd.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">cstring</includes>
    <includes local="no">netinet/ether.h</includes>
    <includes local="yes">afu_test.h</includes>
    <includes refid="uio_8h" local="no">opae/uio.h</includes>
    <includedby refid="hssi__100g__cmd_8h" local="yes">samples/hssi/hssi_100g_cmd.h</includedby>
    <includedby refid="hssi__10g__cmd_8h" local="yes">samples/hssi/hssi_10g_cmd.h</includedby>
    <includedby refid="hssi__200g__400g__cmd_8h" local="yes">samples/hssi/hssi_200g_400g_cmd.h</includedby>
    <incdepgraph>
      <node id="10">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>afu_test.h</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="6">
        <label>netinet/ether.h</label>
      </node>
      <node id="4">
        <label>cstdio</label>
      </node>
      <node id="1">
        <label>samples/hssi/hssi_cmd.h</label>
        <link refid="hssi__cmd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sstream</label>
      </node>
      <node id="8">
        <label>opae/uio.h</label>
        <link refid="uio_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>samples/hssi/hssi_pkt_filt_10g_cmd.h</label>
        <link refid="hssi__pkt__filt__10g__cmd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>samples/hssi/hssi_100g_cmd.h</label>
        <link refid="hssi__100g__cmd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>samples/hssi/hssi_10g_cmd.h</label>
        <link refid="hssi__10g__cmd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>samples/hssi/hssi.cpp</label>
        <link refid="hssi_8cpp"/>
      </node>
      <node id="1">
        <label>samples/hssi/hssi_cmd.h</label>
        <link refid="hssi__cmd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>samples/hssi/hssi_pkt_filt_100g_cmd.h</label>
        <link refid="hssi__pkt__filt__100g__cmd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>samples/hssi/hssi_200g_400g_cmd.h</label>
        <link refid="hssi__200g__400g__cmd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classhssi__cmd" prot="public">hssi_cmd</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="hssi__cmd_8h_1a3c5cddd0ed6864ab681d05e26e9c3554" prot="public" static="no">
        <name>PKT_FILT_CSR_DEST_ADDR</name>
        <initializer>0x0040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hssi/hssi_cmd.h" line="38" column="9" bodyfile="samples/hssi/hssi_cmd.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hssi__cmd_8h_1a02028d30e3cea7b4e76419c00a1c6e6d" prot="public" static="no">
        <name>INVALID_MAC</name>
        <initializer>0xffffffffffffffffULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hssi/hssi_cmd.h" line="40" column="9" bodyfile="samples/hssi/hssi_cmd.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hssi__cmd_8h_1afac984768dc7184c0b2ed50456a06076" prot="public" static="no">
        <name>INVALID_CLOCK_FREQ</name>
        <initializer>0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hssi/hssi_cmd.h" line="42" column="9" bodyfile="samples/hssi/hssi_cmd.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hssi__cmd_8h_1a7be58e7806ec4b0e9c546470229f4dd2" prot="public" static="no">
        <name>USER_CLKFREQ_S10</name>
        <initializer>156.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hssi/hssi_cmd.h" line="44" column="9" bodyfile="samples/hssi/hssi_cmd.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hssi__cmd_8h_1ae2539670faebaec305a8380ff9fcf798" prot="public" static="no">
        <name>USER_CLKFREQ_N6000</name>
        <initializer>402.83203125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hssi/hssi_cmd.h" line="45" column="9" bodyfile="samples/hssi/hssi_cmd.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hssi__cmd_8h_1a8c74ad5179038d17b345dfe79279c2c4" prot="public" static="no">
        <name>BITSVER_MAJOR_S10</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hssi/hssi_cmd.h" line="46" column="9" bodyfile="samples/hssi/hssi_cmd.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hssi__cmd_8h_1a8c3e18e7cbf560ff92e8047255f8ec3b" prot="public" static="no">
        <name>BITSVER_MAJOR_N6000</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hssi/hssi_cmd.h" line="47" column="9" bodyfile="samples/hssi/hssi_cmd.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hssi__cmd_8h_1a6bd4704606bf8c2114179696c85370d3" prot="public" static="no">
        <name>FPGA_BBS_VER_MAJOR</name>
        <param><defname>i</defname></param>
        <initializer>(((i) &gt;&gt; 56) &amp; 0xf)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hssi/hssi_cmd.h" line="49" column="9" bodyfile="samples/hssi/hssi_cmd.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hssi__cmd_8h_1a14cb42c9e63dc7d0cf1a9475c1385a34" prot="public" static="no">
        <type><ref refid="classopae_1_1afu__test_1_1command" kindref="compound">opae::afu_test::command</ref></type>
        <definition>using test_command =  opae::afu_test::command</definition>
        <argsstring></argsstring>
        <name>test_command</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="samples/hssi/hssi_cmd.h" line="35" column="1" bodyfile="samples/hssi/hssi_cmd.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright(c)<sp/>2020-2023,<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/><sp/>and<sp/><sp/>use<sp/><sp/>in<sp/>source<sp/><sp/>and<sp/><sp/>binary<sp/><sp/>forms,<sp/><sp/>with<sp/><sp/>or<sp/><sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>of<sp/><sp/>source<sp/>code<sp/><sp/>must<sp/>retain<sp/>the<sp/><sp/>above<sp/>copyright<sp/>notice,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>name<sp/><sp/>of<sp/>Intel<sp/>Corporation<sp/><sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>to<sp/><sp/>endorse<sp/>or<sp/>promote<sp/><sp/>products<sp/>derived<sp/><sp/>from<sp/>this<sp/><sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/><sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/><sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/><sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABLE<sp/><sp/>FOR<sp/><sp/>ANY<sp/><sp/>DIRECT,<sp/><sp/>INDIRECT,<sp/><sp/>INCIDENTAL,<sp/><sp/>SPECIAL,<sp/><sp/>EXEMPLARY,<sp/><sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/><sp/>DAMAGES<sp/><sp/>(INCLUDING,<sp/><sp/>BUT<sp/><sp/>NOT<sp/>LIMITED<sp/><sp/>TO,<sp/><sp/>PROCUREMENT<sp/><sp/>OF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/><sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/><sp/>OR<sp/>BUSINESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERRUPTION)<sp/><sp/>HOWEVER<sp/>CAUSED<sp/><sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/><sp/>OF<sp/>LIABILITY,<sp/><sp/>WHETHER<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONTRACT,<sp/><sp/>STRICT<sp/>LIABILITY,<sp/><sp/>OR<sp/>TORT<sp/><sp/>(INCLUDING<sp/>NEGLIGENCE<sp/><sp/>OR<sp/>OTHERWISE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/><sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/ether.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;afu_test.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="uio_8h" kindref="compound">opae/uio.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="hssi__cmd_8h_1a14cb42c9e63dc7d0cf1a9475c1385a34" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1command" kindref="compound">test_command</ref><sp/>=<sp/><ref refid="classopae_1_1afu__test_1_1command" kindref="compound">opae::afu_test::command</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopae_1_1fpga_1_1types" kindref="compound">fpga</ref><sp/>=<sp/><ref refid="namespaceopae_1_1fpga_1_1types" kindref="compound">opae::fpga::types</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="hssi__cmd_8h_1a3c5cddd0ed6864ab681d05e26e9c3554" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PKT_FILT_CSR_DEST_ADDR<sp/>0x0040</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="hssi__cmd_8h_1a02028d30e3cea7b4e76419c00a1c6e6d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INVALID_MAC<sp/>0xffffffffffffffffULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="hssi__cmd_8h_1afac984768dc7184c0b2ed50456a06076" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INVALID_CLOCK_FREQ<sp/><sp/><sp/><sp/>0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="hssi__cmd_8h_1a7be58e7806ec4b0e9c546470229f4dd2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USER_CLKFREQ_S10<sp/><sp/><sp/><sp/><sp/><sp/>156.25<sp/><sp/></highlight><highlight class="comment">//<sp/>MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="hssi__cmd_8h_1ae2539670faebaec305a8380ff9fcf798" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USER_CLKFREQ_N6000<sp/><sp/><sp/><sp/>402.83203125<sp/><sp/></highlight><highlight class="comment">//<sp/>MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="hssi__cmd_8h_1a8c74ad5179038d17b345dfe79279c2c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BITSVER_MAJOR_S10<sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="hssi__cmd_8h_1a8c3e18e7cbf560ff92e8047255f8ec3b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BITSVER_MAJOR_N6000<sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="hssi__cmd_8h_1a6bd4704606bf8c2114179696c85370d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FPGA_BBS_VER_MAJOR(i)<sp/>(((i)<sp/>&gt;&gt;<sp/>56)<sp/>&amp;<sp/>0xf)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classhssi__cmd" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhssi__cmd" kindref="compound">hssi_cmd</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1command" kindref="compound">test_command</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54" refid="classhssi__cmd_1a9241a77d197ac297be1ea1759c24fe08" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhssi__cmd_1a9241a77d197ac297be1ea1759c24fe08" kindref="member">hssi_cmd</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classhssi__cmd_1a4d645c1913180d63ad93330589ab0892" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classhssi__cmd_1a4d645c1913180d63ad93330589ab0892" kindref="member">clock_freq_for</ref>(<ref refid="classopae_1_1afu__test_1_1afu" kindref="compound">test_afu</ref><sp/>*afu)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="57"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>afu_props<sp/>=<sp/>afu-&gt;afu_properties();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>filter<sp/>=<sp/><ref refid="classopae_1_1fpga_1_1types_1_1properties_1ab2b9142ce432de4aff9c0a20e9bc4c42" kindref="member">fpga::properties::get</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>get<sp/>the<sp/>FME<sp/>matching<sp/>our<sp/>accelerator,<sp/>we<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>ssss:bb:dd<sp/>and<sp/>for<sp/>FPGA_DEVICE<sp/>object<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;segment<sp/>=<sp/>afu_props-&gt;segment;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;bus<sp/>=<sp/>afu_props-&gt;bus;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;device<sp/>=<sp/>afu_props-&gt;device;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;type<sp/>=<sp/><ref refid="types__enum_8h_1a9b2ddb9e533441e79f19d45fa0a24934a91f784c1c357473adbde7188a244219a" kindref="member">FPGA_DEVICE</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;fpga::token::ptr_t&gt;<sp/>toks<sp/>=</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopae_1_1fpga_1_1types_1_1token_1a6f717fbec87c99a80ce4b94ce262923f" kindref="member">fpga::token::enumerate</ref>({filter});</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toks.empty())<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>FME<sp/>for<sp/>AFU!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hssi__cmd_8h_1afac984768dc7184c0b2ed50456a06076" kindref="member">INVALID_CLOCK_FREQ</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fme_props<sp/>=<sp/><ref refid="classopae_1_1fpga_1_1types_1_1properties_1ab2b9142ce432de4aff9c0a20e9bc4c42" kindref="member">fpga::properties::get</ref>(toks[0]);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>major<sp/>=<sp/><ref refid="hssi__cmd_8h_1a6bd4704606bf8c2114179696c85370d3" kindref="member">FPGA_BBS_VER_MAJOR</ref>(fme_props-&gt;bbs_id);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(major<sp/>==<sp/><ref refid="hssi__cmd_8h_1a8c74ad5179038d17b345dfe79279c2c4" kindref="member">BITSVER_MAJOR_S10</ref>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hssi__cmd_8h_1a7be58e7806ec4b0e9c546470229f4dd2" kindref="member">USER_CLKFREQ_S10</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(major<sp/>==<sp/><ref refid="hssi__cmd_8h_1a8c3e18e7cbf560ff92e8047255f8ec3b" kindref="member">BITSVER_MAJOR_N6000</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hssi__cmd_8h_1ae2539670faebaec305a8380ff9fcf798" kindref="member">USER_CLKFREQ_N6000</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hssi__cmd_8h_1afac984768dc7184c0b2ed50456a06076" kindref="member">INVALID_CLOCK_FREQ</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classhssi__cmd_1a0cfec35cb1e5910bd54f2ad9122fe6f9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhssi__cmd_1a0cfec35cb1e5910bd54f2ad9122fe6f9" kindref="member">set_pkt_filt_dest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;dfl_dev,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>bin_dest_addr)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="90"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopae__uio" kindref="compound">opae_uio</ref><sp/>uio;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="uio_8h_1af144910b738993ba8e6eb739b79c5a16" kindref="member">opae_uio_open</ref>(&amp;uio,<sp/>dfl_dev.c_str()))<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dfl_dev<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24ab553cc480865cc051b212c1cd0150238" kindref="member">test_afu::error</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*mmio<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="uio_8h_1af8f4b24fd2828b3477ab657b6f4c4006" kindref="member">opae_uio_region_get</ref>(&amp;uio,<sp/>0,<sp/>&amp;mmio,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>region<sp/>0<sp/>from:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dfl_dev<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uio_8h_1a0aacf36585d4d608e5b6ae8b74806aa9" kindref="member">opae_uio_close</ref>(&amp;uio);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24ab553cc480865cc051b212c1cd0150238" kindref="member">test_afu::error</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)(mmio<sp/>+<sp/><ref refid="hssi__cmd_8h_1a3c5cddd0ed6864ab681d05e26e9c3554" kindref="member">PKT_FILT_CSR_DEST_ADDR</ref>)<sp/>=<sp/>bin_dest_addr;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>dest_addr<sp/>=<sp/>*(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)(mmio<sp/>+<sp/><ref refid="hssi__cmd_8h_1a3c5cddd0ed6864ab681d05e26e9c3554" kindref="member">PKT_FILT_CSR_DEST_ADDR</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bin_dest_addr<sp/>!=<sp/>dest_addr)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Packet<sp/>Filter<sp/>dest<sp/>address<sp/>mismatch!<sp/>wrote:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classhssi__cmd_1ae4683ed6127d0ac876b8f24a83bbdc1f" kindref="member">int_to_hex</ref>(bin_dest_addr)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>read:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classhssi__cmd_1ae4683ed6127d0ac876b8f24a83bbdc1f" kindref="member">int_to_hex</ref>(dest_addr)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uio_8h_1a0aacf36585d4d608e5b6ae8b74806aa9" kindref="member">opae_uio_close</ref>(&amp;uio);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24ab553cc480865cc051b212c1cd0150238" kindref="member">test_afu::error</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uio_8h_1a0aacf36585d4d608e5b6ae8b74806aa9" kindref="member">opae_uio_close</ref>(&amp;uio);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classopae_1_1afu__test_1_1afu_1ad7127e1c68a3a17b2eb1dce5e840ad24acbd7e559c7a281178598e73f9df0934f" kindref="member">test_afu::success</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classhssi__cmd_1a153a98d3c481a21b25abed3a6e25192f" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classhssi__cmd_1a153a98d3c481a21b25abed3a6e25192f" kindref="member">mac_bits_for</ref>(std::string<sp/>addr)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="122"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>res<sp/>=<sp/><ref refid="hssi__cmd_8h_1a02028d30e3cea7b4e76419c00a1c6e6d" kindref="member">INVALID_MAC</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ether_addr<sp/>*eth<sp/>=<sp/>ether_aton(addr.c_str());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eth)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>0ULL;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;res,<sp/>eth-&gt;ether_addr_octet,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(eth-&gt;ether_addr_octet));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classhssi__cmd_1a308020145dd686d7b5ab1a4bf22ee9c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhssi__cmd_1a308020145dd686d7b5ab1a4bf22ee9c7" kindref="member">run_process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;proc)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp<sp/>=<sp/>popen(proc.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/>fp))<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>buf;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pclose(fp);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="146" refid="classhssi__cmd_1ab9e34f47f9b8507649f79894950ed59e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhssi__cmd_1ab9e34f47f9b8507649f79894950ed59e" kindref="member">show_eth_stats</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;eth)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>cmd<sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;ethtool<sp/>--statistics<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>eth;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhssi__cmd_1a308020145dd686d7b5ab1a4bf22ee9c7" kindref="member">run_process</ref>(cmd);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="152" refid="classhssi__cmd_1a49f44707a8d19094be36a91ffa570e79" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhssi__cmd_1a49f44707a8d19094be36a91ffa570e79" kindref="member">enable_eth_loopback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;eth,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>cmd<sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;ethtool<sp/>--features<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>eth;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;<sp/>loopback<sp/>on&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;<sp/>loopback<sp/>off&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhssi__cmd_1a308020145dd686d7b5ab1a4bf22ee9c7" kindref="member">run_process</ref>(cmd);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hello__afu_8c_1a300ec1c0f7befcbb990985d36d56d8c9" kindref="member">usleep</ref>(1000000);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>X&gt;</highlight></codeline>
<codeline lineno="164" refid="classhssi__cmd_1ae4683ed6127d0ac876b8f24a83bbdc1f" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classhssi__cmd_1ae4683ed6127d0ac876b8f24a83bbdc1f" kindref="member">int_to_hex</ref>(X<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="165"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::setw(2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(X))<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::hex<sp/>&lt;&lt;<sp/>x;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="samples/hssi/hssi_cmd.h"/>
  </compounddef>
</doxygen>
