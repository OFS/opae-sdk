#!/bin/bash
# Copyright(c) 2020, Intel Corporation
#
# Redistribution  and  use  in source  and  binary  forms,  with  or  without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of  source code  must retain the  above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name  of Intel Corporation  nor the names of its contributors
#   may be used to  endorse or promote  products derived  from this  software
#   without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,  BUT NOT LIMITED TO,  THE
# IMPLIED WARRANTIES OF  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT  SHALL THE COPYRIGHT OWNER  OR CONTRIBUTORS BE
# LIABLE  FOR  ANY  DIRECT,  INDIRECT,  INCIDENTAL,  SPECIAL,  EXEMPLARY,  OR
# CONSEQUENTIAL  DAMAGES  (INCLUDING,  BUT  NOT LIMITED  TO,  PROCUREMENT  OF
# SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE,  DATA, OR PROFITS;  OR BUSINESS
# INTERRUPTION)  HOWEVER CAUSED  AND ON ANY THEORY  OF LIABILITY,  WHETHER IN
# CONTRACT,  STRICT LIABILITY,  OR TORT  (INCLUDING NEGLIGENCE  OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,  EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

shopt -o -s nounset

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

source "${SCRIPT_DIR}/../version"

RPMBUILD_DIR="${SCRIPT_DIR}/rpmbuild"
SDK_DIR="$(cd "${SCRIPT_DIR}/../../../" && pwd)"
PYTHON_DIR="${SDK_DIR}/python"

# Check for prerequisite packages.
for pkg in 'python3-devel' \
           'rpm-build' \
           'rpmdevtools' \
           'pandoc'
do
    yum list installed "${pkg}" >/dev/null 2>&1
    if [ $? -ne 0 ]; then
        printf "${pkg} package not found.. exiting\n"
        exit 1
    fi
done

rm -rf "${RPMBUILD_DIR}"
mkdir -p "${RPMBUILD_DIR}"

for d in 'SOURCES' \
         'BUILD' \
         'RPMS' \
         'SPECS' \
         'BUILDROOT' \
         'SRPMS'
do
    mkdir -p "${RPMBUILD_DIR}/$d"
done

# Create source tarball.
cd "${PYTHON_DIR}"
tar --transform="s/opae.admin/opae.admin-${PROJECT_VERSION}/" \
  --exclude=debian \
  --exclude=docs \
  --exclude=py36-nose2.cfg \
  --exclude=tox.ini \
  --exclude=tests \
  --exclude=testit.py \
  --exclude=py27-nose2.cfg \
  -z -c -f opae.admin-${PROJECT_VERSION}.tar.gz opae.admin

mv opae.admin-${PROJECT_VERSION}.tar.gz "${RPMBUILD_DIR}/SOURCES"

# Add man pages.
cd "${RPMBUILD_DIR}/SOURCES"
tar zxf opae.admin-${PROJECT_VERSION}.tar.gz 
rm -f opae.admin-${PROJECT_VERSION}.tar.gz 
cd opae.admin-${PROJECT_VERSION}
mkdir docs

pandoc --standalone --to man "${SDK_DIR}/doc/src/fpga_tools/fpgaport/fpgaport.md" -o ./docs/fpgaport.1
pandoc --standalone --to man "${SDK_DIR}/doc/src/fpga_tools/fpgasupdate/fpgasupdate.md" -o ./docs/fpgasupdate.1
pandoc --standalone --to man "${PYTHON_DIR}/opae.admin/docs/bitstream_info/bitstream_info.md" -o ./docs/bitstreaminfo.1
pandoc --standalone --to man "${PYTHON_DIR}/opae.admin/docs/super-rsu/super-rsu.md" -o ./docs/super-rsu.1

cd ..
tar zcf opae.admin-${PROJECT_VERSION}.tar.gz opae.admin-${PROJECT_VERSION}

cd "${SCRIPT_DIR}"
cat ./opae.admin.spec | \
    sed -e "s/@VERSION@/${PROJECT_VERSION}/" -e "s/@RELEASE@/${PROJECT_RELEASE}/" \
    > "${RPMBUILD_DIR}/SPECS/opae.admin.spec"

${SDK_DIR}/packaging/changelog.py rpm \
    --git-dir="${SDK_DIR}/.git" \
    --project="opae.admin" \
    --project-version="${PROJECT_VERSION}" \
    >> "${RPMBUILD_DIR}/SPECS/opae.admin.spec"

# Create RPMS.
cd "${RPMBUILD_DIR}/SPECS"

rpmbuild --define="_topdir ${RPMBUILD_DIR}" -ba opae.admin.spec
if [ $? -ne 0 ]; then
    printf "rpmbuild failed.. exiting\n"
    exit 1
fi

mv "${RPMBUILD_DIR}"/RPMS/noarch/python3-opae.admin*.rpm "${SCRIPT_DIR}"
