#!/bin/bash
# Copyright(c) 2020, Intel Corporation
#
# Redistribution  and  use  in source  and  binary  forms,  with  or  without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of  source code  must retain the  above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name  of Intel Corporation  nor the names of its contributors
#   may be used to  endorse or promote  products derived  from this  software
#   without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,  BUT NOT LIMITED TO,  THE
# IMPLIED WARRANTIES OF  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT  SHALL THE COPYRIGHT OWNER  OR CONTRIBUTORS BE
# LIABLE  FOR  ANY  DIRECT,  INDIRECT,  INCIDENTAL,  SPECIAL,  EXEMPLARY,  OR
# CONSEQUENTIAL  DAMAGES  (INCLUDING,  BUT  NOT LIMITED  TO,  PROCUREMENT  OF
# SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE,  DATA, OR PROFITS;  OR BUSINESS
# INTERRUPTION)  HOWEVER CAUSED  AND ON ANY THEORY  OF LIABILITY,  WHETHER IN
# CONTRACT,  STRICT LIABILITY,  OR TORT  (INCLUDING NEGLIGENCE  OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,  EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

shopt -o -s nounset

PROJECT_VERSION='1.4.1-1'

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
RPMBUILD_DIR="${SCRIPT_DIR}/rpmbuild"
SDK_DIR="$(cd "${SCRIPT_DIR}/../../../" && pwd)"

# Check for prerequisite packages.
for pkg in 'make' \
           'cmake' \
           'doxygen' \
	   'hwloc-devel' \
	   'json-c-devel' \
	   'libuuid-devel' \
	   'python3-sphinx' \
	   'python3-devel' \
	   'rpm-build' \
           'rpmdevtools'
do
    yum list installed "${pkg}" >/dev/null 2>&1
    if [ $? -ne 0 ]; then
        printf "${pkg} package not found.. exiting\n"
        exit 1
    fi
done

rm -rf "${RPMBUILD_DIR}"
mkdir -p "${RPMBUILD_DIR}"

for d in 'SOURCES' \
         'BUILD' \
         'RPMS' \
         'SPECS' \
         'BUILDROOT' \
         'SRPMS'
do
    mkdir -p "${RPMBUILD_DIR}/$d"
done

# Create source tarball.
cd "${SDK_DIR}/.."
tar --transform='s/opae-sdk/opae/' \
  --exclude=.git \
  --exclude=.gitignore \
  --exclude=.github \
  --exclude=.travis.yml \
  --exclude=opae.spec.in \
  --exclude=opae.spec \
  --exclude=opae-libs/external \
  --exclude=opae-libs/tests \
  --exclude=opae-libs/plugins/ase \
  --exclude=opae-libs/cmake/config/libopae-all.spec.in \
  --exclude=opae-libs/cmake/config/run_coverage_test.sh.in \
  --exclude=opae-libs/cmake/config/run_coverage_test_local.sh.in\
  --exclude=external \
  --exclude=platforms \
  --exclude=samples/base \
  --exclude=samples/hello_afu \
  --exclude=samples/hello_mpf_afu \
  --exclude=samples/intg_xeon_nlb \
  --exclude=samples/base \
  --exclude=scripts \
  --exclude=tests \
  --exclude=tools/fpgametrics \
  --exclude=tools/libboard/board_dc \
  --exclude=tools/extra/ras \
  --exclude=tools/extra/fpgabist \
  --exclude=tools/extra/pac_hssi_config \
  --exclude=tools/extra/fpgadiag \
  --exclude=tools/extra/c++utils \
  --exclude=tools/extra/pyfpgadiag \
  --exclude=tools/extra/pypackager \
  --exclude=tools/utilities \
  --exclude=opae-libs/include/opae/cxx/.clang-format \
  --exclude=opae-libs/libopaecxx/.clang-format \
  --exclude=opae-libs/pyopae/.clang-format \
  --exclude=opae-libs/.clang-format \
  --exclude=opae-libs/.clang-format \
  -z -c -f opae.tar.gz opae-sdk

mv opae.tar.gz "${RPMBUILD_DIR}/SOURCES"

cd "${SCRIPT_DIR}"
cp ./opae.spec "${RPMBUILD_DIR}/SPECS"

${SDK_DIR}/packaging/changelog.py rpm \
    --git-dir="${SDK_DIR}/.git" \
    --project="opae" \
    --project-version="${PROJECT_VERSION}" \
    >> "${RPMBUILD_DIR}/SPECS/opae.spec"

# Create RPMS.
cd "${RPMBUILD_DIR}/SPECS"

rpmbuild --define="_topdir ${RPMBUILD_DIR}" -ba opae.spec
if [ $? -ne 0 ]; then
    printf "first rpmbuild failed.. exiting\n"
    exit 1
fi

rpmbuild --define="_topdir ${RPMBUILD_DIR}" -bs opae.spec
if [ $? -eq 1 ]; then
    echo "second rpmbuild failed.. exiting"
    exit 1
fi

# Move RPMS to script directory.
cd "${SCRIPT_DIR}"
mv "${RPMBUILD_DIR}"/RPMS/x86_64/opae-* "${SCRIPT_DIR}"
mv "${RPMBUILD_DIR}"/SRPMS/opae-*.src.rpm "${SCRIPT_DIR}"
