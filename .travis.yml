language: c
compiler: gcc
matrix:
  include:
  - script: scripts/test-codingstyle-all.sh
    cache: pip
    env:
    - BUILD_JOB=Code Style Check
    install:
    - pip install --user pylint
    - pip install --user pycodestyle
    - pip install --user jsonschema
    - pip install --user jinja2
    addons:
      apt:
        packages:
          - clang-format-3.9    
  - script: scripts/build-pypi.sh
    install:
    - pip install --user pybind11 nose2
    cache: ccache
    env:
    - BUILD_JOB=Build python distribution and upload to PyPI
    - TRAVIS_BUILD_TYPE=RelWithDebInfo
    addons:
      apt:
        packages:
        - libjson-c-dev
        - libhwloc-dev
        - uuid-dev
        - doxygen
    deploy:
      provider: pypi
      user: opae_robot
      password:
         secure: "nbiIOg2D8zYuQaSBuVNam5ga3OORqukpFYl8W/uV5r5rh81TwhsY0Y45HLxviRRUK/5/cBgVxfXDzKlzJSG0LDW3zz9ivaAihVARRmOlyCN9akvx6XnAE4kJ/al4qdsC4u0rOUWkS9FwEqlhF6sgpDiJzD/USjItkDKnWampU3j9jW85as52jngP8f8DKgL0k6lOXi//AfdZSdsXE5sSUUx1DDOk5ta3SL+Qeme2C46bnjkPLiJusPn76AfB1IcfcgNzHtieLkR/LRe3rewmG7u/GRlCWkNRYHeXfPdqAHizN+wE68ypdVRKWS3eUtAu2X3Y/Dc0+VrGR7zVpqb8YJNxZ7kmG05wWrF6Gb6KGD3bu59CnSKNvELFgZxZrGyYNJdX5w9qLdWE1I05bKvi5bFGYtxzaCLV9lIEuhQegYW+ADFki8n9/edUPnV7choobfKRluiVIi0q2pbQKxqZKSQ8JBrH8Jo5AIqAxv43PmbU+eHmxS9iyNsUtxTns2vuPr+dmO51JfdufkWLrxZDN7Ygz2Z71z7fCrb/BPQ2oU6fnamr3kco3eLBcgEiLVbcBIjNPI2rCjJFN4Tgs63nwqVFVZciOH3IFRcNi0S8Nxbb8C3QnD9DLffv23n9XNI8ffJ1fjp+bpRuZ61HMktuKR5dV9mqivFCF98TSd0O5Xc=" 
      distributions: sdist
      on:
        tags: true
  - script: scripts/test-build.sh
    install:
    - pip install --user pybind11 nose2
    cache: ccache
    env:
    - BUILD_JOB=Build in RelWithDebInfo mode
    - TRAVIS_BUILD_TYPE=RelWithDebInfo
    addons:
      apt:
        packages:
        - libjson-c-dev
        - libhwloc-dev
        - uuid-dev
        - doxygen
  - script: scripts/test-build.sh
    install:
    - pip install --user pybind11 nose2
    cache: ccache
    env:
    - BUILD_JOB=Build in Release mode
    - TRAVIS_BUILD_TYPE=Release
    addons:
      apt:
        packages:
        - libjson-c-dev
        - libhwloc-dev
        - uuid-dev
        - doxygen
  - script: scripts/test-build.sh
    install:
    - pip install --user pybind11 nose2
    cache: ccache
    env:
    - BUILD_JOB=Build in Debug mode
    - TRAVIS_BUILD_TYPE=Debug
    addons:
      apt:
        packages:
        - libjson-c-dev
        - libhwloc-dev
        - uuid-dev
        - doxygen
  - script: scripts/cover.sh
    env:
    - BUILD_JOB=Run tests and generate coverage
    before_script:
    - sudo sysctl -w vm.nr_hugepages=8
    install:
    - pip install --user pybind11 nose2
    cache:
      - ccache
      - pip
    addons:
      apt:
       packages:
        - libjson-c-dev
        - uuid-dev
        - doxygen
        - lcov
    before_install:
      - pip install --user cpp-coveralls
    after_success:
      - coveralls -l $TRAVIS_BUILD_DIR/unittests/coverage.info.cleaned -E .*pybind11.*
  - script: scripts/cover-py.sh
    env:
    - BUILD_JOB=Run python tests and generate coverage
    before_script:
    - sudo sysctl -w vm.nr_hugepages=8
    install:
    - pip install --user pybind11 nose2 mock numpy
    cache:
      - ccache
      - pip
    addons:
      apt:
       packages:
        - libjson-c-dev
        - uuid-dev
        - doxygen
        - lcov
    before_install:
      - pip install --user python-coveralls
    after_success:
      - if [ -f .coverage ]; then coveralls; fi
  - script: scripts/build-documentation.sh
    env:
    - BUILD_JOB=Build documentation
    cache:
      - ccache
      - pip
    addons:
      apt:
       packages:
        - libjson-c-dev
        - libhwloc-dev
        - uuid-dev
        - doxygen
        - pandoc
    if: branch = master
    install:
      - pip install --user jinja2
      - pip install --user requests[security]
    before_install:
    - wget https://github.com/jgm/pandoc/releases/download/2.1.1/pandoc-2.1.1-1-amd64.deb
    - sudo dpkg -i pandoc-2.1.1-1-amd64.deb
env:
  global:
    secure: ejmtge9PpCihZ92AolJhTBWGTYUU49dzwR10xBd62JfDSXWs8UYu3FSGodLQcMm4XdaM0uDthJ1MzvP/CphgMCOIyzVr6XLF8JFLVLw6cP1P0Q5Kgj1qN9f8DZL3VrgyRSL7lRuxQt4qP8eXLlksEAi+PKrka2hsNnUtoX8JBYHeeos7b+Q4vq4d/PzpIrhrYIQy1RlatAAhGG8JsD3R2WdkNwK3kGUvcAwZirROfRAf+xaPRKCTHtRfNehTCu93v9n1uYdxDAWw7RJOjjYp+HUGj7XUTi28D7kcz5zOKp6Ny7Cgf3SgQqwK4xF+Jidk/g5i9V8D0Qi0oplbD6vekp0zVU6k8IWLZgtfqw9CnRV2Tv7e7a7oMUsFoKEW3pT/U1lU1fKuEddTUlf8myMoAm6VcEXXtboz2xP9svpNvDjnATU8CTtN1eEdrOpmI6FjYZv133twkfP61bEKgv05w8416/jvcil3CXnzVGFkbO2oXCr1uWe3t/JjEon8W+rgnxl9uC/QeEd1uFwOi3/UBB+ZQp8khbMz68iRSux7g+mGiZ6Ezbr0WaSIz6ZiliFykLCbpyAJduHIUCc1chF20Xq8105D/Ue4nCOnI/h/vC/BsQ5Ms+VAYk1QHPgNXKEc2pteVxHaTg7c6qoHsBV+NTkdd4QJvNuS+jzZsxao7JQ=
